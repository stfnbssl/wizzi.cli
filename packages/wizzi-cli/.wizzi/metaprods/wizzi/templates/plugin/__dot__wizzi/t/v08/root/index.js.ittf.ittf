${'$'}group
	${'$'}params md
	+
	var util = require('util')
	var path = require('path')
	var stringify = require('json-stringify-safe')
    var errors = require('./errors')
	+
	var md = module.exports = {}
	set md.name = '${'$'}{wzCtx.name}.index'
	+
	${'$'}hook model-transform-artifacts
	+
	#
		# FactoryPlugin class
	class FactoryPlugin
		ctor
			param wizziPackage
			param provides
			set this.file = wizziPackage.file
			set this.provides = provides
			set this.modelFactories = {}
			set this.modelTransformers = {}
			set this.artifactGenerators = {}
			set this.schemaDefinitions = {}
		+
        m initialize
			param options
			param callback
			# TODO
			return
				_ callback(null)
		+
        m getName
			return '${'$'}{wzCtx.name}'
		
		+
        m getFilename
			return $filename
		
		+
        m getProvides
			return this.provides

		+
        ${'$'}include model-factory
		+
        ${'$'}include model-transformation
		+
        ${'$'}include artifact-generation
		+
        ${'$'}include schema-definition
	+
	function error
        param errorName
        param method
        param message
        param innerError
		return
            new errors.WizziPluginError
                @ message
                @ null
                {
                    @ errorName errorName
                    @ method md.name + '.' + method
                    @ sourcePath $filename
                    @ inner innerError           
	+
	set module.exports
		{
			${'$'}hook
			@ createFactoryPlugin
				function
					param wizziPackage
					param options
					param callback
					var plugin
						new FactoryPlugin
							@ wizziPackage
							@ this.provides
					_ plugin.initialize
						@ options
						f_cb( notUsed )
							return
								_ callback
									@ null
									@ plugin
	+

