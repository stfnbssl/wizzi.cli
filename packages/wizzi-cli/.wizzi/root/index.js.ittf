module
	kind es6

	const path = require('path')
    const minimist = require('minimist')
    const config = require('./utils/config')
	const error = require('./utils/error')

    function checkConfig
        param name
        var test = path.join(currentDir, 'wizzi.config.' + name + 'js') 

	set module.exports
		=>
			const args = minimist(process.argv.slice(2))
			
			# loog 'args', args

			let cmd = args._[0] || 'generate'

			if args.version || args.v
				set cmd = 'version'
			
			if args.help || args.h || args['?']
				set cmd = 'help'

			# loog 'cmd', cmd

			switch cmd
				case 'generate'
					_ require('./cmds/generate')()
					break
				case 'create'
					_ require('./cmds/create')(args)
					break
				case 'fy'
					_ require('./cmds/fy')(args)
					break
				case 'help'
					_ require('./cmds/help')(args)
					break
				default
                    var configPath = config.getPath(cmd)
                    if configPath
                        _ require('./cmds/generate')(cmd)
                    else
                        _ error(`"${cmd}" is not a valid command!`)
                        _ error(`try wizzi help`, true)
					break