{
    $include cli/v08/wzctx-info.json

    $
        var useSsl = false;
        var http = useSsl ? 'https' : 'http';

    $$ type "module"

    { App
        siteUrl "${http}://localhost"
        port 5000
        baseUrl "${http}://localhost:5000"
        [ Components
    
    { Build
        useRegeneratorRuntime true
        { utils
            useEscapeRegexp true
            useNullThrows true
            useLodash true
            useStringifySafe true
            useParseUrl true
            useEs6Error true
            useJsCookie true
            useQueryString true
            useSanitizeHtml true
            useDateFns true
            useFetchPonyfill true
            useNanoId true
        
        useTypescript true
        { typescript
            useBabelLoader true

        useExpress false
        { express
            useSsl ${useSsl ? 'true' : 'false'}
            useErrors false
            useStaticFiles true
            { staticFiles

        useSession false
        { session
            name "${cliCtx.name}"

        noCache true

        useSocketIO false 
        { socketIO
        
        useCookie false
        { cookie

        useSite false
        { site
        
        useIttfStatic false
        { ittfStatic
        
        useNetlify false
        { netlify
        
        useWizzi false
        { wizzi
            isDev true
            [ plugins
                "./wizzi-core/index.js"
                "./wizzi-js/index.js" 
                "./wizzi-web/index.js" 
                "./wizzi-meta/index.js"
            pluginsBaseFolder "C:/My/wizzi/stfnbssl/wizzi/packages"
            { globalContext
                wzConfigIsDevelopment true
        useWizziViewEngine true
        { wizziViewEngine
        
        usePacki false
        { packi
            endPoint "${http}://localhost:5000/api/v1"
            templatesFolder "data/packi/templates"
            apiId_rem "identifier for the API. This value will be used as the audience parameter on authorization calls."
            apiId "https://packi/api/v1" $$ AUTH0_PACKI_API_ID
            clientId_rem ""
            clientId "gPb1dqyNzRHfJgNVawKxPFP65LuNcUI8" $$ AUTH0_PACKI_CLIENT_ID
            clientSecret_rem ""
            clientSecret "-DVUr9qiz5hivZUmfiJtFDEV-zylvAem8P-X0OH8zwlry06rZNCIDUTF7s9sgWNm" $$ AUTH0_PACKI_CLIENT_SECRET
            backendId_rem ""
            backendId "awRaG0ilBVlaHQ2xK5JgehLjkBzLNthp" $$ AUTH0_PACKI_BACKEND_APP_ID
            backendSecret_rem ""
            backendSecret "1iDRuv92BtmZA521Od3BIU923cDL-EsoSNNTAUJkGfrpNmEDr85I_lsWqZAe5UNG" $$ AUTH0_PACKI_BACKEND_APP_SECRET

        useAuthentication false
        { authentication
            tenant "dev-qwf9-zob.eu"
            clientId "dJoAkgjkJmbElAgqMxqsBPlfoZ3xdAdV"
            longRandomString "gdftr75ujgklfòlvposg908495r7o34tklvgklgeòmvojg"
            baseURL "${http}://localhost:5000"
            authRequired false
            userInfo false
            useLocal true
            { local
            useGithub true
            { github
                clientId "6a42cd4cb7247bb4e823"
                clientSecret "dedced0ac262cae62557e4c3f567a6227b17bfb7"
                callbackURL "${http}://localhost:5000/authenticate/github/callback"
            
        useCrypto false
        { crypto
        useJwt false
        { jwt

        
        useGithub false
        { github
            clientId "6a42cd4cb7247bb4e823"
            clientSecret "dedced0ac262cae62557e4c3f567a6227b17bfb7"
            callbackURL "${http}://localhost:5000/authenticate/github/callback" 

        useAuthorization false
        { authorization
        
        useAccount false
        { account
        
        useConfig true
        { config
            useEnvalid true
            { envalid
        
        useLogger false
        { logger
            useMorgan false
            { morgan
        
        useCors false
        { cors
            clientOrigin "${http}://localhost:5000"
        
        usePassport false
        { passport
        
        usePassportAuth0 false
        { passportAuth0

        useCompression false
        { compression
        
        useHelmet false
        { helmet
        

        useTailwindcss true
        { tailwindcss
        
        useWebpack true
        { webpack
            useCss true
            { css
            useMiniCssExtract true
            { miniCssExtract
            useSass false
            { sass
            useHtml true
            { html
                template "./src/index.html"
                filename "index.html"
            useMinimizer true
            useWorker true
            useStatsWriter true
            useIgnore true
            useEnv true
            { env
                [ items
                    {
                        name "NODE_ENV"
                        value "env('NODE_ENV')"
                    {
                        name "SERVER_URL"
                        value "env('SERVER_URL')"
                    {
                        name "API_SERVER_URL"
                        value "env('API_SERVER_URL')"
                    {
                        name "SNACK_SEGMENT_KEY"
                        value "env('SNACK_SEGMENT_KEY')"
                    {
                        name "SNACK_AMPLITUDE_KEY"
                        value "env('SNACK_AMPLITUDE_KEY')"
                    {
                        name "SNACK_WEBPLAYER_URL"
                        value "env('SNACK_WEBPLAYER_URL')"
                    {
                        name "IMPORT_SERVER_URL"
                        value "env('IMPORT_SERVER_URL')"
                    {
                        name "DEPLOY_ENVIRONMENT"
                        value "env('DEPLOY_ENVIRONMENT')"
                    {
                        name "BUILD_TIMESTAMP"
                        value "Date.now()"
            useDevServer true
            { devServer
                contentBase "path.join(__dirname, 'src')"

        useWebpackApp false
        { webpackApp
            [ items
                {
                    name "..."
                    writeToDisk false

        useBabel true
        { babel
            useParser true
            useRuntime false
            useVendor true
            useDinamicImport true
            addModuleExport false
            { vendor
                compactPath "./src/vendor"

        useReact true
        { react
            useV16 true
            useRedux true
            { redux
            useRouter true
            useHelmetAsync true
            useSimpleCodeEditor true
            useTextareaAutosize true
            useVirtualized false
            
        useHoistNonReactStatic true
        
        useStyledComponents true
        { styledComponents

        useAphrodite true
        { aphrodite
            disableImportant true

        useMarked true

        useExpoStyles true
        { expoStyles

        useMonacoEditor true

        usePrettier true
        { prettier

        usePrismjs true
        { prismjs
            [ modes

        useGraphql false
        { graphql
            excludePolyfill true
        
        useMongoDb false
        { mongoDb
            user "yanez"
            password "x5csosPN5YAsrl4Z"
            dbPath "@cluster0.idlk7.mongodb.net"
            dbName "wizzi"
        
        useFilesystem false
        { filesystem

        useBlog false
        { blog
            name "blog"
            Name "Blog"
            [ dataModels
                { 
                    name "post"
                    Name "Post"
                    Title "Blog post"
                    Titles "Blog posts"
                    collectionName "posts"
                    [ fields
                        {
                            name "_id"
                            type "oid"
                            isListItem true
                            ctrlId "fd_1_post_id"
                            test "id"
                        {
                            name "author"
                            type "string"
                            isListItem true
                            ctrlId "fd_1_post_author"
                            test "Stefi"
                        {
                            name "title"
                            type "string"
                            isListItem true
                            ctrlId "fd_1_post_title"
                            test "My postulates"
                        {
                            name "content"
                            type "string"
                            ctrlId "fd_1_post_content"
                            test "Bla bla"