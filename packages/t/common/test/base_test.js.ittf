module 
	$params name, isWizziUtils:boolean|false
    kind jsfile
	+
	import path
	import util
	+
	var del = require('del')
    var expect = require('expect.js')
	+
    $if isWizziUtils == false
        var _ = require('lodash')
	    var mtree = require('@wizzi/mtree')
        var file = require('@wizzi/utils').file
        var vfile = require('@wizzi/utils').vfile
        var verify = require('@wizzi/utils').verify
        var mocks = require('@wizzi/utils').mocks
    $else
        var verify = require('@wizzi/helpers').verify
	+
	$hook imports
	+
	describe ${name}
		$hook

	$if isWizziUtils == false
        +
        function getWizziObject
            return 
                {
                    @ loadMTree 
                        _ mtree.createLoadMTree
                            @ mocks.repo.getCreateFilesystemStore()
                            {
                                @ useCache false
                    @ file file
                    @ verify verify
	+
	function getLoadModelContext
		param mTreeBuildupContext
		return 
			_ mocks.getLoadModelContext
				@ mTreeBuildupContext
	+
	function getTestModelInfo
		param schemaName
		param modelName
		+
		var expectedPath
			_ path.join
				@ __dirname
				@ 'ittf'
				@ modelName + '.' + schemaName + '.expected'
		var expectedContent
			_ file.read
				@ expectedPath
		return 
			{
				@ ittfPath
					_ path.join
						@ __dirname
						@ 'ittf'
						@ modelName + '.' + schemaName + '.ittf'
				@ expectedPath expectedPath
				@ expectedContent expectedContent
				@ writeResult
					function
						param content
						_ file.write
							_ path.join
								@ __dirname
								@ 'ittf'
								@ modelName + '.' + schemaName + '.result'
							@ content