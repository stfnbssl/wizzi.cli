module
	$params pkgname, version|0.0.0
	kind jsfile
	+
    $include versions
    +
	var util = require('util')
	var path = require('path')
	var stringify = require('json-stringify-safe')
	+
	var md = module.exports = {}
	set md.name = '${pkgname}'
    +
	$hook model-transform-artifacts
	+
	#
		# FactoryPlugin class
	class FactoryPlugin
		ctor
			param wizziPackage
			param provides
			set this.file = wizziPackage.file
			set this.provides = provides
			set this.modelFactories = {}
			set this.modelTransformers = {}
			set this.artifactGenerators = {}
			set this.schemaDefinitions = {}
		m initialize
			param options
			param callback
			# TODO
			return
				_ callback(null)
		m getName
			return '${pkgname}'
		
		m getFilename
			return __filename
		
		m getVersion
			return '${versions[pkgname + '@next']}'

		m getProvides
			return this.provides

		$include ./v3-model-factory
		$include ./v3-model-transformation
		$include ./v3-artifact-generation
		$include ./v3-schema-definition
	+
    function getTrueSchemaName
		param schemaOrAlias
        $foreach schema in wzCtx.schemas
            $if schema.aliases && schema.aliases.length
                $foreach alias in schema.aliases
                    if schemaOrAlias == '${alias.name}'
                        return '${schema.name}'
		return schemaOrAlias
	+
	function error
		param code
		param message
		return
			{
				@ __is_error true
				@ source '${pkgname}/FactoryPlugin'
				@ code code
				@ message message
	+
	set module.exports
		{
            @ provides
                {
                    @ schemas
                        [
                            $foreach schema in wzCtx.schemas
                                $ var sn = schema.name
                                @ '${sn}'

                                $if schema.aliases && schema.aliases.length
                                    $foreach alias in schema.aliases
                                        @ '${alias.name}'
                    @ modelTransformers
                        [
                            $foreach schema in wzCtx.schemas
                                $foreach transformer in schema.transformers
                                    $ var tn = transformer.name
                                    @ '${tn}'
                    @ artifactGenerators
                        [
                            $foreach schema in wzCtx.schemas
                                $foreach artifact in schema.artifacts
                                    $ var an = artifact.name
                                    @ '${an}'
			$hook
			@ createFactoryPlugin
				function
					param wizziPackage
					param options
					param callback
					var plugin
						new FactoryPlugin
							@ wizziPackage
							@ this.provides
					_ plugin.initialize
						@ options
						a_cb( notUsed )
							return
								_ callback
									@ null
									@ plugin
	+

