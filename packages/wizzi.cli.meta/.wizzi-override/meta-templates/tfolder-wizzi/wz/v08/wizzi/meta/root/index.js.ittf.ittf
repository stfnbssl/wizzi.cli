$group
	+
	var util = require('util')
	var path = require('path')
	var stringify = require('json-stringify-safe')
    var errors = require('./errors')
	+
	var md = module.exports = {}
	set md.name = '${'$'}{wzCtx.name}.index'
	+
	#
		# FactoryMeta class
	class FactoryMeta
		ctor
			param wizziPackage
			param provides
			set this.file = wizziPackage.file
			set this.provides = provides
			set this.metaProductions = {}
		+
        m initialize
			param options
			param callback
			# TODO
			return
				_ callback(null)
		+
        m getName
			return '${'$'}{wzCtx.name}'
		
		+
        m getFilename
			return __filename
		
		+
        m getProvides
			return this.provides

		+
        ${'$'}include meta-production
		+
	+
	function error
        param errorName
        param method
        param message
        param innerError
		return
            new errors.WizziMetaError
                @ message
                @ null
                {
                    @ errorName errorName
                    @ method md.name + '.' + method
                    @ sourcePath __filename
                    @ inner innerError           
	+
	set module.exports
		{
            @ provides
                {
                    @ metaProductions
                        [
                            ${'$'}foreach production in wzCtx.Productions
                                @ '${'$'}{production.name}'
			@ createFactoryMeta
				function
					param wizziPackage
					param options
					param callback
					var meta
						new FactoryMeta
							@ wizziPackage
							@ this.provides
					_ meta.initialize
						@ options
						a_cb${'('} notUsed )
							return
								_ callback
									@ null
									@ meta
