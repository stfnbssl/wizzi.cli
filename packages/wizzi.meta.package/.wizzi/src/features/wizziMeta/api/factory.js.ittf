module
    kind es6
    import path from 'path'
    import wizzi from '@wizzi/factory'
    import
        @ fSystem
        from '@wizzi/utils'
    import
        @ JsonComponents
        @ JsonDocumentDto
        @ JsonFs
        from '@wizzi/repo'
    $if wzCtx.Build.useWizziJsonFactory
        import
            @ packiFilePrefix
            from '../config/env'
        import
            @ packiTypes
            from '../packi'
    import
        @ config
            as appConfig
        from '../config'
    import
        as wizziMaps
        from './maps'
    import
        @ JsonWizziFactory
        @ FilesystemWizziFactory
        from './types'
    +
    const myname = 'features/wizzi/factory'
    +
    $if wzCtx.Build.useWizziJsonFactory
        export
            function packiFilesToJsonDocuments
                param files
                const jsonDocuments = []
                _ Object.keys(files).map
                    =>
                        param value
                        if files[value].type === 'CODE'
                            const filePath = ensurePackiFilePrefix(value)
                            _ jsonDocuments.push
                                {
                                    @ path filePath
                                    @ content files[value].contents
                return jsonDocuments
        +
    export
        async-function createFilesystemFactoryWithParameters
            param pluginsBaseFolder
            param plugins
            param globalContext
            r_promise()
                _ wizzi.fsFactory
                    {
                        { repo
                            @ storeKind "filesystem"
                        { plugins
                            @ items plugins
                            @ pluginsBaseFolder pluginsBaseFolder
                        @ globalContext globalContext
                    function
                        param err
                        param wf
                        if err
                            return reject(err)
                        return resolve(wf)
    export
        async-function createFilesystemFactory
            param globalContext
            if appConfig.isWizziDev
            const gc = {}
            set gc['isWizziStudio'] = true
            return
                new Promise
                    =>
                        param resolve
                        param reject
                        _ wizzi.fsFactory
                            {
                                { repo
                                    @ storeKind "filesystem"
                                { plugins
                                    [ items
                                        $foreach item in wzCtx.Build.wizziMeta.plugins
                                            @ '${item}'
                                    @ pluginsBaseFolder '${wzCtx.Build.wizziMeta.pluginsBaseFolder}'
                                @ globalContext
                                    _ Object.assign
                                        {
                                        @ gc
                                        ||
                                            + globalContext
                                            {
                            function
                                param err
                                param wf
                                if err
                                    return reject(err)
                                _ resolve(wf)
    +
    $if wzCtx.Build.useWizziJsonFactory
        export
            async-function createJsonFsAndFactory
                param files
                const jsonDocuments = []
                _ Object.keys(files).map
                    =>
                        param value
                        if files[value].type === 'CODE' && files[value].contents && files[value].contents.length > 0
                            const filePath = ensurePackiFilePrefix(value)
                            _ jsonDocuments.push
                                {
                                    @ path filePath
                                    @ content files[value].contents
                return
                    new Promise
                        =>
                            param resolve
                            param reject
                            _ JsonComponents.createJsonFs
                                @ jsonDocuments
                                =>
                                    param err
                                    param jsonFs
                                    if err
                                        return reject(err)
                                    _ wizzi.jsonFactory
                                        {
                                            @ jsonFs
                                            { plugins
                                                [ items
                                                    $foreach item in wzCtx.Build.wizziMeta.plugins
                                                        @ '${item}'
                                                @ pluginsBaseFolder '${wzCtx.Build.wizziMeta.pluginsBaseFolder}'
                                        function
                                            param err
                                            param wf
                                            if err
                                                return reject(err)
                                            _ resolve
                                                {
                                                    @ wf
                                                    @ jsonFs
        +
        export
            async-function createJsonFs
                param files
                const jsonDocuments = []
                _ Object.keys(files).map
                    =>
                        param value
                        if files[value].type === 'CODE'
                            const filePath = ensurePackiFilePrefix(value)
                            _ jsonDocuments.push
                                {
                                    @ path filePath
                                    @ content files[value].contents
                return
                    new Promise
                        =>
                            param resolve
                            param reject
                            _ JsonComponents.createJsonFs
                                @ jsonDocuments
                                =>
                                    param err
                                    param result
                                    if err
                                        return reject(err)
                                    _ resolve(result)
        +
        export
            async-function extractGeneratedFiles
                param jsonFs
                return
                const files = {}
                    new Promise
                        =>
                            param resolve
                            param reject
                            _ jsonFs.toFiles
                                {
                                    @ removeRoot packiFilePrefix
                                =>
                                    param err
                                    param result
                                    if err
                                        _ reject(err)
                                    _ result.forEach
                                        =>
                                            param value
                                            if value.relPath.endsWith('.ittf') == false
                                                set files[value.relPath] =
                                                    {
                                                        @ type 'CODE'
                                                        @ contents value.content
                                                        @ generated true
                                    _ resolve(files)
        +
        export
            function ensurePackiFilePrefix
                param filePath
                var newFilePath = normalizePath(filePath)
                return
                    iif newFilePath.startsWith(packiFilePrefix)
                        then newFilePath
                        else packiFilePrefix + newFilePath
        function normalizePath
            param path
            return path.replace(/\\/g, '/')
