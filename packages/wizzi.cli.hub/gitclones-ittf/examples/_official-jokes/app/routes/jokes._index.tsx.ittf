module
    :import-type 
        @ LoaderArgs
        from "@remix-run/node"
    import 
        @ json
        from "@remix-run/node"
    import 
        @ isRouteErrorResponse
        @ Link
        @ useLoaderData
        @ useRouteError
        from "@remix-run/react"
    import 
        @ db
        from "~/utils/db.server"
    import 
        @ getUserId
        from "~/utils/session.server"
    export 
        const loader
            async=> 
                { 
                    @ request
                    :ref LoaderArgs
                const userId
                    await 
                        _ getUserId(request)
                if !userId
                    throw 
                        new Response
                            @ "No random joke found"
                            { 
                                @ status 404
                const count
                    await 
                        _ db.joke.count
                            { 
                                { where
                                    @ jokesterId userId
                    # In the official deployed version of the app, we don't want to deploy
                    # a site with none-moderated content, so we only show users their own jokes
                const randomRowNumber = Math.floor(Math.random() * count)
                const [randomJoke]
                    await 
                        _ db.joke.findMany
                            { 
                                @ skip randomRowNumber
                                @ take 1
                                { where
                                    @ jokesterId userId
                if !randomJoke
                    throw 
                        new Response
                            @ "No random joke found"
                            { 
                                @ status 404
                return 
                    _ json
                        { 
                            @ randomJoke
    export-default 
        function JokesIndexRoute
            const data
                _ useLoaderData
                    :param 
                        :typeof loader
            return 
                div 
                    p 
                        + Here's a random joke:
                    p 
                        + {data.randomJoke.content}
                    < Link 
                        @ to {data.randomJoke.id}
                        + "
                        + {data.randomJoke.name}
                        + " Permalink
    export 
        function ErrorBoundary
            const error = useRouteError()
            _ console.error(error)
            if isRouteErrorResponse(error) && error.status === 404
                return 
                    div 
                        @ className "error-container"
                        p 
                            + There are no jokes to display.
                            br 
                            small 
                                + Note: this is the deployed version of the jokes app example and&lf;            because we don't want to show you none-moderated content, we only&lf;            display jokes you create in this version.
                        < Link 
                            @ to "new"
                            + Add your own
            return 
                div 
                    @ className "error-container"
                    + I did a whoopsies.
