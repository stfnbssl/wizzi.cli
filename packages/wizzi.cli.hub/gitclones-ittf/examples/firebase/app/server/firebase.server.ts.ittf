module
    import 
        @ getApps
            as getServerApps
        @ initializeApp
            as initializeServerApp
        @ cert
            as serverCert
        from "firebase-admin/app"
    import 
        @ getAuth
            as getServerAuth
        from "firebase-admin/auth"
    import 
        as firebaseRest
        from "../firebase-rest"
        # Warning: though getRestConfig is only run server side, its return value may be sent to the client
    export 
        const getRestConfig
            => 
                :return
                    :{ 
                        :p apiKey
                            :string 
                        :p domain
                            :string 
                if process.env.NODE_ENV === "development" && !process.env.API_KEY
                    return 
                        { 
                            @ apiKey "fake-api-key"
                            @ domain "http://localhost:9099/identitytoolkit.googleapis.com"
                else
                    if !process.env.API_KEY
                        throw new Error("Missing API_KEY environment variable")
                    else
                        return 
                            { 
                                @ apiKey process.env.API_KEY
                                @ domain "https://identitytoolkit.googleapis.com"
        # Warning: though getRestConfig is only run server side, its return value may be sent to the client
    const restConfig = getRestConfig()
    if getServerApps().length === 0
        let config
        if process.env.NODE_ENV === "development" && !process.env.SERVICE_ACCOUNT
            _ console.warn("Missing SERVICE_ACCOUNT environment variable, using local emulator")
                # https://github.com/firebase/firebase-admin-node/issues/776
            set process.env.FIRESTORE_EMULATOR_HOST = "localhost:8080"
                # https://github.com/firebase/firebase-admin-node/issues/776
            set process.env.FIREBASE_AUTH_EMULATOR_HOST = "localhost:9099"
            set config =
                { 
                    @ projectId "remix-emulator"
        else
            if !process.env.SERVICE_ACCOUNT
                throw new Error("Missing SERVICE_ACCOUNT environment variable")
            else
                try 
                    const serviceAccount = JSON.parse(process.env.SERVICE_ACCOUNT)
                    set config =
                        { 
                            @ credential serverCert(serviceAccount)
                catch 
                    throw Error("Invalid SERVICE_ACCOUNT environment variable")
        _ initializeServerApp(config)
    const signInWithPassword
        async=> 
            param email
                :string 
            param password
                :string 
            const signInResponse
                await 
                    _ firebaseRest.signInWithPassword
                        { 
                            @ email
                            @ password
                            @ returnSecureToken true
                        @ restConfig
            if firebaseRest.isError(signInResponse)
                throw new Error(signInResponse.error.message)
            return signInResponse
    export 
        const auth
            { 
                @ server getServerAuth()
                @ signInWithPassword
