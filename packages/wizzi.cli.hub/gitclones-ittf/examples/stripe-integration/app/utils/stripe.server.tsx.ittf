module
    import initStripe from "stripe"
        # copied from (https://github.com/kentcdodds/kentcdodds.com/blob/ebb36d82009685e14da3d4b5d0ce4d577ed09c63/app/utils/misc.tsx#L229-L237)
    export 
        function getDomainUrl
            param request
                :ref Request
            const host = request.headers.get("X-Forwarded-Host") ?? request.headers.get("host")
            if !host
                throw new Error("Could not determine domain URL.")
            const protocol
                iif host.includes("localhost")
                    then "http"
                    else "https"
            return 
                `lit 
                    + 
                    @ protocol
                    + ://
                    @ host
                    + 
        # copied from (https://github.com/kentcdodds/kentcdodds.com/blob/ebb36d82009685e14da3d4b5d0ce4d577ed09c63/app/utils/misc.tsx#L229-L237)
    export 
        const getStripeSession
            async=> 
                param priceId
                    :string 
                param domainUrl
                    :string 
                :return
                    :ref Promise
                        :param string
                const stripe = initStripe(process.env.STRIPE_SECRET_KEY)
                const lineItems
                    [ 
                        { 
                            @ price priceId
                            @ quantity 1
                const session
                    await 
                        _ stripe.checkout.sessions.create
                            { 
                                @ mode "payment"
                                [ payment_method_types
                                    @ "card"
                                @ line_items lineItems
                                @ success_url
                                    `lit 
                                        + 
                                        @ domainUrl
                                        + /payment/success
                                @ cancel_url
                                    `lit 
                                        + 
                                        @ domainUrl
                                        + /payment/cancelled
                return session.url
