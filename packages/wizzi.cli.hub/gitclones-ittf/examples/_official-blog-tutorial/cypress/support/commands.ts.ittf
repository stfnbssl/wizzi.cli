module
    import 
        @ faker
        from "@faker-js/faker"
    :declare 
        :module global
            :module Cypress
                :interface Chainable
                    :p login
                        :typeof login
                        #
                            # *
                            # * Logs in with a random user. Yields the user and adds an alias to the user
                            # *
                            # * @returns {typeof login}
                            # * @memberof Chainable
                            # * @example
                            # *    cy.login()
                            # * @example
                            # *    cy.login({ email: 'whatever@example.com' })
                            # 
                        #
                            # *
                            # * Deletes the current @user
                            # *
                            # * @returns {typeof cleanupUser}
                            # * @memberof Chainable
                            # * @example
                            # *    cy.cleanupUser()
                            # * @example
                            # *    cy.cleanupUser({ email: 'whatever@example.com' })
                            # 
                    :p cleanupUser
                        :typeof cleanupUser
                        #
                            # *
                            # * Deletes the current @user
                            # *
                            # * @returns {typeof cleanupUser}
                            # * @memberof Chainable
                            # * @example
                            # *    cy.cleanupUser()
                            # * @example
                            # *    cy.cleanupUser({ email: 'whatever@example.com' })
                            # 
                        #
                            # *
                            # * Extends the standard visit command to wait for the page to load
                            # *
                            # * @returns {typeof visitAndCheck}
                            # * @memberof Chainable
                            # * @example
                            # *    cy.visitAndCheck('/')
                            # *  @example
                            # *    cy.visitAndCheck('/', 500)
                            # 
                    :p visitAndCheck
                        :typeof visitAndCheck
                        #
                            # *
                            # * Extends the standard visit command to wait for the page to load
                            # *
                            # * @returns {typeof visitAndCheck}
                            # * @memberof Chainable
                            # * @example
                            # *    cy.visitAndCheck('/')
                            # *  @example
                            # *    cy.visitAndCheck('/', 500)
                            # 
    function login
        param 
            @ email
                = faker.internet.email(undefined, undefined, "example.com")
            :{ 
                :p email
                    :optional 
                    :string 
            = 
        _ cy.then
            => 
                (
                    { 
                        @ email
            ._ as
                @ "user"
        _ cy.exec
            `lit 
                + npx ts-node --require tsconfig-paths/register ./cypress/support/create-user.ts "
                @ email
                + "
            ._ then
                => 
                    { 
                        @ stdout
                    const cookieValue = stdout.replace(/.*<cookie>(?<cookieValue>.*)<\/cookie>.*/s, "$<cookieValue>").trim()
                    _ cy.setCookie("__session", cookieValue)
        return cy.get("@user")
    function cleanupUser
        param 
            @ email
            :{ 
                :p email
                    :optional 
                    :string 
            = 
        if email
            _ deleteUserByEmail(email)
        else
            _ cy.get("@user").then
                => 
                    param user
                    const email
                        @expr 
                            ( 
                                + user
                                    :as 
                                        :{ 
                                            :p email
                                                :optional 
                                                :string 
                            . email
                    if email
                        _ deleteUserByEmail(email)
        _ cy.clearCookie("__session")
    function deleteUserByEmail
        param email
            :string 
        _ cy.exec
            `lit 
                + npx ts-node --require tsconfig-paths/register ./cypress/support/delete-user.ts "
                @ email
                + "
        _ cy.clearCookie("__session")
        # We're waiting a second because of this issue happen randomly
        # https://github.com/cypress-io/cypress/issues/7306
        # Also added custom types to avoid getting detached
        # https://github.com/cypress-io/cypress/issues/7306#issuecomment-1152752612
        # ===========================================================
    function visitAndCheck
        param url
            :string 
        param waitTime
            :number 
            = 1000
        _ cy.visit(url)
        _ cy.location("pathname").should("contain", url).wait(waitTime)
        # We're waiting a second because of this issue happen randomly
        # https://github.com/cypress-io/cypress/issues/7306
        # Also added custom types to avoid getting detached
        # https://github.com/cypress-io/cypress/issues/7306#issuecomment-1152752612
        # ===========================================================
    _ Cypress.Commands.add("login", login)
    _ Cypress.Commands.add("cleanupUser", cleanupUser)
    _ Cypress.Commands.add("visitAndCheck", visitAndCheck)
