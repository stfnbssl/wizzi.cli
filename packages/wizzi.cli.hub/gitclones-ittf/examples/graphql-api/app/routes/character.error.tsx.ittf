module
    import 
        @ json
        from "@remix-run/node"
    import 
        @ Link
        @ useLoaderData
        from "@remix-run/react"
    import 
        @ Code
        from "~/components/Code"
    import 
        @ fetchFromGraphQL
        @ gql
        from "~/utils/index"
        #
            # *
            # * @description Here we query an external GraphQL API directly via "fetch".
            # 
    export 
        const loader
            async=> 
                const getCharacterQuery
                    _` gql
                        + &lf;
                        + &nbsp;   fragment CharacterFields on Character {&lf;
                        + &nbsp;     gender&lf;
                        + &nbsp;     id&lf;
                        + &nbsp;     image&lf;
                        + &nbsp;     name&lf;
                        + &nbsp;     origin {&lf;
                        + &nbsp;       dimension&lf;
                        + &nbsp;       name&lf;
                        + &nbsp;       type&lf;
                        + &nbsp;     }&lf;
                        + &nbsp;     species&lf;
                        + &nbsp;     status&lf;
                        + &nbsp;     type&lf;
                        + &nbsp;   }&lf;
                        + &lf;
                        + &nbsp;   query getCharacter($id: ID!) {&lf;
                        + &nbsp;     character(id: $id) {&lf;
                        + &nbsp;       ...CharacterFields&lf;
                        + &nbsp;     }&lf;
                        + &nbsp;   }&lf;
                        + &nbsp;&nbsp;
                    # ⚠️ Force an error using an invalid ID
                const invalidId = 8675309
                    # ⚠️ Force an error using an invalid ID
                const res
                    await 
                        _ fetchFromGraphQL
                            @ getCharacterQuery
                            { 
                                @ id invalidId
                return 
                    _ json
                        await 
                            _ res.json()
        #
            # *
            # * @description Here we query an external GraphQL API directly via "fetch".
            # 
        #
            # *
            # * @description This route triggers an error of type "ApolloError" which is
            # * an array of errors coming back from the GraphQL API.
            # 
    export-default 
        function CharacterError
            const loader
                _ useLoaderData
                    :param 
                        :typeof loader
            return 
                main 
                    @ className "ui-main"
                    h1 
                        + Ex: GraphQL Error
                    < Code 
                        @ data {loader}
                        @ summary "Loader Data"
                    p 
                        + Uh oh, we've intentionally triggered an error, expand the details above&lf;        to see what's going on.
                    hr 
                        @ style
                            { 
                                @ margin "40px auto"
                    < Link 
                        @ to "/"
                        @ style
                            { 
                                @ display "block"
                                @ marginTop 40
                        + View all characters
        #
            # *
            # * @description This route triggers an error of type "ApolloError" which is
            # * an array of errors coming back from the GraphQL API.
            # 
