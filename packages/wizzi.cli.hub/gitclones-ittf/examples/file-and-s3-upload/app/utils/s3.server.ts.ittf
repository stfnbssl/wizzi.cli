module
    import 
        @ PassThrough
        from "stream"
    :import-type 
        @ UploadHandler
        from "@remix-run/node"
    import 
        @ writeAsyncIterableToWritable
        from "@remix-run/node"
    import AWS from "aws-sdk"
    const 
        { 
            @ STORAGE_ACCESS_KEY
            @ STORAGE_SECRET
            @ STORAGE_REGION
            @ STORAGE_BUCKET
        = process.env
    if !(STORAGE_ACCESS_KEY && STORAGE_SECRET && STORAGE_REGION && STORAGE_BUCKET)
        throw 
            new Error
                `lit 
                    + Storage is missing required configuration.
    const uploadStream
        => 
            { 
                @ Key
                :ref Pick
                    :param 
                        :ref AWS.S3.Types.PutObjectRequest
                    :param 
                        :literal "Key"
            const s3
                new AWS.S3
                    { 
                        { credentials
                            @ accessKeyId STORAGE_ACCESS_KEY
                            @ secretAccessKey STORAGE_SECRET
                        @ region STORAGE_REGION
            const pass = new PassThrough()
            return 
                { 
                    @ writeStream pass
                    @ promise
                        _ s3.upload
                            { 
                                @ Bucket STORAGE_BUCKET
                                @ Key
                                @ Body pass
                            ._ promise
    export 
        async-function uploadStreamToS3
            param data
                :any 
            param filename
                :string 
            const stream
                _ uploadStream
                    { 
                        @ Key filename
            await 
                _ writeAsyncIterableToWritable(data, stream.writeStream)
            const file
                await 
                    @expr stream.promise
            return file.Location
    export 
        const s3UploadHandler
            :ref UploadHandler
            =
                async=> 
                    { 
                        @ name
                        @ filename
                        @ data
                    if name !== "img"
                        return undefined
                    const uploadedFileLocation
                        await 
                            _ uploadStreamToS3
                                @ data
                                :! filename
                    return uploadedFileLocation
