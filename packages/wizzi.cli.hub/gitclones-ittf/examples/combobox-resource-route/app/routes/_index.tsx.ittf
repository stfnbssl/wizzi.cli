module
    import 
        @ Combobox
        @ ComboboxInput
        @ ComboboxList
        @ ComboboxOption
        @ ComboboxPopover
        from "@reach/combobox"
    import comboboxStyles from "@reach/combobox/styles.css"
    :import-type 
        @ LinksFunction
        from "@remix-run/node"
    import 
        @ Form
        @ useFetcher
        @ useSearchParams
        from "@remix-run/react"
    :import-type 
        @ Lang
        from "~/models/langs"
    export 
        const links
            :ref LinksFunction
            =
                => 
                    [ 
                        { 
                            @ rel "stylesheet"
                            @ href comboboxStyles
                            # Add them to the page when this route is active:
                            # https://remix.run/route/links
    export-default 
        function Index
            const langs
                _ useFetcher
                    :param 
                        :[ 
                            :ref Lang
                # Set up a fetcher to fetch languages as the user types
                # ComboboxInput is just an <input/> in the end, so we can read the submitted
                # value from teh search params when we submit the form (because it's a "get"
                # form instead of "post", it will be in the URL as a search param).
            const [searchParams] = useSearchParams()
                # ComboboxInput is just an <input/> in the end, so we can read the submitted
                # value from teh search params when we submit the form (because it's a "get"
                # form instead of "post", it will be in the URL as a search param).
            return 
                < Form 
                    label 
                        @ htmlFor "showSearch"
                        + Two-Character Language Code:
                    br 
                    < Combobox 
                        div 
                            @ className "combobox-wrapper"
                            < ComboboxInput 
                                @ id "showSearch"
                                @ name "lang"
                                @ onChange
                                    => 
                                        param e
                                        _ langs.load
                                            `lit 
                                                + /lang-search?q=
                                                @ e.target.value
                                                + 
                                            # When the input changes, load the languages
                            { 
                                # 
                                    # Add a nice spinner when the fetcher is loading
                            { 
                                iif langs.state === "loading"
                                    then
                                        < Spinner 
                                    else null
                        { 
                            # 
                                # Only show the popover if we have results
                        { 
                            iif langs.data && langs.data.length > 0
                                then
                                    < ComboboxPopover 
                                        < ComboboxList 
                                            { 
                                                _ langs.data.map
                                                    => 
                                                        param lang
                                                        param index
                                                        < ComboboxOption 
                                                            @ key {index}
                                                            @ value {lang.alpha2}
                                                            + {lang.name}
                                                            + (
                                                            + {lang.alpha2}
                                                            + )
                                else null
                    p 
                        button 
                            @ type "submit"
                            + Submit
                        + {" "}
                        { 
                            iif searchParams.has("lang")
                                then
                                    span 
                                        + You submitted:
                                        + {searchParams.get("lang")}
                                else null
    function Spinner
        return 
            svg 
                @ xmlns "http://www.w3.org/2000/svg"
                @ fill "none"
                @ viewBox "0 0 24 24"
                @ className "spinner"
                path 
                    @ stroke "#000"
                    @ strokeLinecap "round"
                    @ strokeLinejoin "round"
                    @ strokeWidth "2"
                    @ d "M20 4v5h-.582m0 0a8.001 8.001 0 00-15.356 2m15.356-2H15M4 20v-5h.581m0 0a8.003 8.003 0 0015.357-2M4.581 15H9"
