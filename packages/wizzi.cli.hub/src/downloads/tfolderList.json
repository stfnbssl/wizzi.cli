{
  "oper": "getTFolderList",
  "ok": true,
  "item": [
    {
      "_id": "62de7dd7493996d69cbaef94",
      "id": "62de7dd7493996d69cbaef94",
      "owner": "stfnbssl",
      "name": "css",
      "description": "...",
      "packiFiles": "{\"t/css/ace-edit-browse.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. ittf-editor\\r\\n\\t\\tdisplay flex\\r\\n\\t\\tflex-direction column !important\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t# ittf-editor-title\\r\\n\\t\\theight 20px !important\\r\\n\\t\\twidth 100% !important\\r\\n\\t\\tpadding 2px 8px\\r\\n\\r\\n\\t. ittf-editor-panel\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t# editorContainer\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t. result-browser\\r\\n\\t\\tdisplay flex\\r\\n\\t\\tflex-direction column !important\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t# result-browser-title\\r\\n\\t\\theight 20px !important\\r\\n\\t\\twidth 100% !important\\r\\n\\t\\tpadding 2px 8px\\r\\n\\r\\n\\t. result-browser-panel\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t. result-browser-container\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t. result-browser-control\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t. result-iframe\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\"},\"t/css/file-explorer.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. fl\\r\\n\\t\\tmargin 12px 0\\r\\n\\r\\n\\t. fl-nodes\\r\\n\\t\\tpadding 0 8px\\r\\n\\r\\n    . fl-icon\\r\\n        height 16px !important\\r\\n        width 16px !important\\r\\n        @ fill currentcolor !important\\r\\n        vertical-align middle !important\\r\\n        opacity 0.7 !important\"},\"t/css/shell.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. sh\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction column !important\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\t\\tbackground-color rgb(250, 250, 250) !important\\r\\n\\t\\tcolor rgb(17, 17, 17) !important\\r\\n\\t\\toverflow hidden !important\\r\\n\\r\\n\\t. sh-he\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction row\\r\\n\\t\\talign-items center !important\\r\\n\\t\\tjustify-content space-between !important\\r\\n\\t\\theight 60px !important\\r\\n\\t\\tbackground-color rgb(255, 255, 255) !important\\r\\n\\t\\tborder-bottom 1px solid rgba(0, 0, 0, 0.08) !important\\r\\n\\t\\tpadding 10px 20px\\r\\n\\r\\n\\t. sh-bo\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction row\\r\\n\\t\\tmin-height 0px !important\\r\\n\\t\\tmin-width 0px !important\\r\\n\\t\\tflex 1 1 0% !important\\r\\n        width 100% !important\\r\\n\\r\\n\\t. sh-bo-lsb\\r\\n        -webkit-box-direction normal !important\\r\\n        -webkit-box-orient vertical !important\\r\\n        display flex !important\\r\\n\\t\\tmin-width 10rem !important\\r\\n        flex-direction column !important\\r\\n\\t\\t# bg for test\\r\\n\\t\\tbackground-color rgb(230, 230, 230) !important\\r\\n\\r\\n    . sh-bo-lsb-schema-button        \\r\\n        font-size 1.3em\\r\\n        font-weight bold\\r\\n        margin 5px\\r\\n        padding 5px\\r\\n        background-color #434343\\r\\n        color #bbb\\r\\n        border-radius 5px\\r\\n        text-align center\\r\\n        cursor pointer\\r\\n        & :hover\\r\\n            color #ddd\\r\\n    . sh-bo-lsb-schema-button.selected\\r\\n        color #fff\\r\\n        font-size 1.35em\\r\\n\\r\\n\\t. sh-bo-co\\r\\n        -webkit-box-direction normal !important\\r\\n        -webkit-box-orient vertical !important\\r\\n        display flex !important\\r\\n        flex-direction column !important\\r\\n        min-width 0px !important\\r\\n        min-height 0px !important\\r\\n        flex 1 1 0% !important\\r\\n        background-color #bcbcbc\\r\\n\\r\\n    . sh-bo-co-title        \\r\\n        font-size 1.5em\\r\\n        font-weight bold\\r\\n\\t\\r\\n\\t. sh-bo-co-ge\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction row\\r\\n\\t\\tmin-height 0px !important\\r\\n\\t\\tmin-width 0px !important\\r\\n\\t\\tflex 1 1 0% !important\\r\\n        margin 5px\\r\\n\\r\\n\\t. sh-bo-co-ge-ittf\\r\\n\\t\\theight 100% !important\\r\\n        width 50%\\r\\n\\r\\n\\t. sh-bo-co-ge-result\\r\\n\\t\\tflex 1 1 0% !important\\r\\n\\t\\theight 100% !important\\r\\n        width 50%\\r\\n\\r\\n\\t. sh-bo-co-wi\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction row\\r\\n\\t\\tmin-height 0px !important\\r\\n\\t\\tmin-width 0px !important\\r\\n\\t\\tflex 1 1 0% !important\\r\\n        margin 5px\\r\\n        \\r\\n\\r\\n\\t. sh-bo-co-wi-snippet\\r\\n\\t\\theight 100% !important\\r\\n        width 50%\\r\\n\\r\\n\\t. sh-bo-co-wi-result\\r\\n\\t\\tflex 1 1 0% !important\\r\\n\\t\\theight 100% !important\\r\\n        width 50%\\r\\n\\r\\n\\t. sh-fo\\r\\n        -webkit-box-align center !important\\r\\n        -webkit-box-direction normal !important\\r\\n        -webkit-box-orient horizontal !important\\r\\n        position relative !important\\r\\n        display flex !important\\r\\n        flex-direction row !important\\r\\n        align-items center !important\\r\\n        height 30px !important\\r\\n        z-index 10 !important\\r\\n        background-color rgb(255, 255, 255) !important\\r\\n        color rgb(153, 153, 153) !important\\r\\n        padding 0px 0.25em !important\\r\\n        border-top 1px solid rgba(0, 0, 0, 0.08) !important\\r\\n\\r\\n\\t# gen-ittf-editor\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n        max-height 41vh\\r\\n        \\r\\n\\r\\n\\t# gen-result-editor\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n        max-height 41vh\\r\\n\\r\\n\\t# snippet-source-editor\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n        max-height 41vh\\r\\n\\r\\n\\t# snippet-result-editor\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n        max-height 41vh\"},\"t/css/bars.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. result-bar\\r\\n\\t\\tpadding 3rem 0.1rem\\r\\n\\r\\n\\t. result-cmd\\r\\n\\t\\tmargin 1rem 0\\r\\n\\r\\n\\t. result-cmd-btn\\r\\n\\t\\twidth 100%\\r\\n\\t\\tbackground-color #ddd\\r\\n        display inline-block\\r\\n        padding 0.3em\\r\\n        border 0.16em solid rgba(255,255,255,0)\\r\\n        border-radius 1em\\r\\n        box-sizing border-box\\r\\n        text-decoration none\\r\\n        font-family 'Roboto',sans-serif\\r\\n        font-weight 300\\r\\n        color #333333\\r\\n        text-shadow 0 0.04em 0.04em rgba(0,0,0,0.35)\\r\\n        text-align center\\r\\n        transition all 0.2s\\r\\n\\t\\t& :hover\\r\\n\\t\\t\\tborder-color rgba(255,255,255,1)\\r\\n\"},\"t/css/splash.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. splash-editor\\r\\n\\t\\theight 100%\\r\\n\\t\\twidth 100%\\r\\n\\t\\tbackground-color rgb(230, 230, 230) !important\\r\\n\\r\\n\\t. splash-result\\r\\n\\t\\theight 100%\\r\\n\\t\\twidth 100%\\r\\n\\t\\tbackground-color rgb(230, 230, 230) !important\"},\"t/css/tree-node.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. tree-node\\r\\n        position relative\\r\\n\\t\\tfont-size 13px\\r\\n\\t\\tline-height 1.8\\r\\n\\t\\t. copying\\r\\n\\t\\t\\tborder 1px dashed #dedede\\r\\n\\t\\t. cutting\\r\\n\\t\\t\\tborder 1px dashed #dedede\\r\\n\\t\\t\\topacity 0.5\\r\\n\\t\\t. icon-item-group\\r\\n\\t\\t\\tposition relative !important\\r\\n\\t\\t\\tdisplay inline-block !important\\r\\n\\t\\t\\twidth 100% !important\\r\\n\\t\\t\\tcursor pointer !important\\r\\n\\t\\t\\tz-index 1 !important\\r\\n\\t\\t\\twhite-space nowrap !important\\r\\n\\t\\t\\toutline 0px !important\\r\\n\\t\\t\\tpadding 0px 16px !important\\r\\n\\t\\t. item-name\\r\\n\\t\\t\\tvertical-align -1px !important\\r\\n\\t\\t\\tuser-select none !important\\r\\n\\t\\t\\tmargin 0px 6px !important\\r\\n    \\r\\n\\t. tree-node .tree-child-leaves\\r\\n        display block\\r\\n        margin-left 15px\\r\\n    \\r\\n\\t. tree-node .hidden\\r\\n        display none\\r\\n    \\r\\n\\t. tree-node .tree-expando\\r\\n        background #ddd\\r\\n        border-radius 3px\\r\\n        cursor pointer\\r\\n        float left\\r\\n        height 10px\\r\\n        line-height 10px\\r\\n        position relative\\r\\n        text-align center\\r\\n        top 5px\\r\\n        width 10px\\r\\n    \\r\\n\\t. tree-node .hidden\\r\\n        visibility hidden\\r\\n    \\r\\n\\t. tree-node .tree-expando:hover\\r\\n        background #aaa\\r\\n    \\r\\n\\t. tree-node .tree-node-text\\r\\n        cursor pointer\\r\\n        float left\\r\\n        margin-left 5px\\r\\n    \\r\\n\\t. tree-node .tree-node-text:hover\\r\\n        color blue\\r\\n    \\r\\n\\t. tree-node .tree-node-content\\r\\n\\t\\tdisplay flex\\r\\n\\t\\tflex-direction row\\r\\n\\t\\t& :hover\\r\\n\\t\\t\\tbackground #dedede\\r\\n\\r\\n\\t. tree-node-context-menu-on\\r\\n\\t\\tbackground #cdcdcd\\r\\n\\t\\r\\n\\t$*\\r\\n\\t. tree-node .tree-node-content:before\\r\\n        + .tree-node .tree-node-content:after\\r\\n        content \\\" \\\"\\r\\n        display table\\r\\n    \\r\\n\\t. tree-node .tree-node-content:after\\r\\n        clear both\\r\\n\\t*$\\r\\n\"},\"t/css/widgets/file-explorer.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. fl\\r\\n\\t\\tmargin 12px 0\\r\\n\\r\\n\\t. fl-nodes\\r\\n\\t\\tpadding 0 8px\\r\\n\\r\\n    . fl-icon\\r\\n        height 16px !important\\r\\n        width 16px !important\\r\\n        @ fill currentcolor !important\\r\\n        vertical-align middle !important\\r\\n        opacity 0.7 !important\"},\"t/css/widgets/tree-node.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. tree-node\\r\\n        position relative\\r\\n\\t\\tfont-size 13px\\r\\n\\t\\tline-height 1.8\\r\\n\\t\\t. copying\\r\\n\\t\\t\\tborder 1px dashed #dedede\\r\\n\\t\\t. cutting\\r\\n\\t\\t\\tborder 1px dashed #dedede\\r\\n\\t\\t\\topacity 0.5\\r\\n\\t\\t. icon-item-group\\r\\n\\t\\t\\tposition relative !important\\r\\n\\t\\t\\tdisplay inline-block !important\\r\\n\\t\\t\\twidth 100% !important\\r\\n\\t\\t\\tcursor pointer !important\\r\\n\\t\\t\\tz-index 1 !important\\r\\n\\t\\t\\twhite-space nowrap !important\\r\\n\\t\\t\\toutline 0px !important\\r\\n\\t\\t\\tpadding 0px 16px !important\\r\\n\\t\\t\\t& .selected\\r\\n\\t\\t\\t\\tbackground #cdcdcd\\r\\n\\t\\t. item-name\\r\\n\\t\\t\\tvertical-align -1px !important\\r\\n\\t\\t\\tuser-select none !important\\r\\n\\t\\t\\tmargin 0px 6px !important\\r\\n    \\r\\n\\t. tree-node .tree-child-leaves\\r\\n        display block\\r\\n        margin-left 15px\\r\\n    \\r\\n\\t. tree-node .hidden\\r\\n        display none\\r\\n    \\r\\n\\t. tree-node .tree-expando\\r\\n        background #ddd\\r\\n        border-radius 3px\\r\\n        cursor pointer\\r\\n        float left\\r\\n        height 10px\\r\\n        line-height 10px\\r\\n        position relative\\r\\n        text-align center\\r\\n        top 5px\\r\\n        width 10px\\r\\n    \\r\\n\\t. tree-node .hidden\\r\\n        visibility hidden\\r\\n    \\r\\n\\t. tree-node .tree-expando:hover\\r\\n        background #aaa\\r\\n    \\r\\n\\t. tree-node .tree-node-text\\r\\n        cursor pointer\\r\\n        float left\\r\\n        margin-left 5px\\r\\n    \\r\\n\\t. tree-node .tree-node-text:hover\\r\\n        color blue\\r\\n    \\r\\n\\t. tree-node .tree-node-content\\r\\n\\t\\tdisplay flex\\r\\n\\t\\tflex-direction row\\r\\n\\t\\t& :hover\\r\\n\\t\\t\\tbackground #dedede\\r\\n\\r\\n\\t. tree-node-context-menu-on\\r\\n\\t\\tbackground #cdcdcd\\r\\n\\t\\r\\n\\t$*\\r\\n\\t. tree-node .tree-node-content:before\\r\\n        + .tree-node .tree-node-content:after\\r\\n        content \\\" \\\"\\r\\n        display table\\r\\n    \\r\\n\\t. tree-node .tree-node-content:after\\r\\n        clear both\\r\\n\\t*$\\r\\n\"},\"t/css/tailwind/layout/index.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params &md\\r\\n\\r\\n  $\\r\\n      var count = [0,1,2,3,4,5];\\r\\n      var sizes = ['s','m','l','x','xl','xxl'];\\r\\n      var scale = ['0.6','0.8','1','1.3','1.6','2'];\\r\\n      var scaleRad = ['3','6','12','18','30','48'];\\r\\n      var scaleWidth = [15,25,35,65,75,85];\\r\\n      var scale50 = [50,100,150,200];\\r\\n      //\\r\\n\\r\\n  flex( &md )\\r\\n  grid( &md )\\r\\n\\r\\n  . m-0-auto\\r\\n      margin 0 auto\\r\\n  \\r\\n  $foreach c in scale50\\r\\n      . m-${c}\\r\\n          margin ${c}px\\r\\n      . m-l-${c}\\r\\n          margin-left ${c}px\\r\\n      . m-r-${c}\\r\\n          margin-right ${c}px\\r\\n      . m-t-${c}\\r\\n          margin-top ${c}px\\r\\n      . m-b-${c}\\r\\n          margin-bottom ${c}px\\r\\n  \\r\\n  $foreach c in count\\r\\n      . m-${sizes[c]}\\r\\n          margin ${scale[c]}em\\r\\n      . m-t-${sizes[c]}\\r\\n          margin-top ${scale[c]}em\\r\\n      . m-b-${sizes[c]}\\r\\n          margin-bottom ${scale[c]}em\\r\\n      . m-l-${sizes[c]}\\r\\n          margin-left ${scale[c]}em\\r\\n      . m-r-${sizes[c]}\\r\\n          margin-right ${scale[c]}em\\r\\n      . m-w-${sizes[c]}\\r\\n          margin-left ${scale[c]}em\\r\\n          margin-right ${scale[c]}em\\r\\n      . m-y-${sizes[c]}\\r\\n          margin-top ${scale[c]}em\\r\\n          margin-bottom ${scale[c]}em\\r\\n      . p-${sizes[c]}\\r\\n          padding ${scale[c]}em\\r\\n      . p-t-${sizes[c]}\\r\\n          padding-top ${scale[c]}em\\r\\n      . p-b-${sizes[c]}\\r\\n          padding-bottom ${scale[c]}em\\r\\n      . p-l-${sizes[c]}\\r\\n          padding-left ${scale[c]}em\\r\\n      . p-r-${sizes[c]}\\r\\n          padding-right ${scale[c]}em\\r\\n      . p-w-${sizes[c]}\\r\\n          padding-left ${scale[c]}em\\r\\n          padding-right ${scale[c]}em\\r\\n      . p-y-${sizes[c]}\\r\\n          padding-top ${scale[c]}em\\r\\n          padding-bottom ${scale[c]}em\\r\\n\"},\"t/css/tailwind/layout/t/flex.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params &md\\r\\n\\r\\n  $if md.useFlex\\r\\n    . flex\\r\\n        display flex\\r\\n        flex-direction row\\r\\n    . flex-row\\r\\n        display flex\\r\\n        flex-direction row\\r\\n    . flex-column\\r\\n        display flex\\r\\n        flex-direction column\\r\\n    . justify-content-start\\r\\n        justify-content start\\r\\n    . justify-content-center\\r\\n        justify-content center\\r\\n    . justify-content-space-between\\r\\n        justify-content space-between\\r\\n    . space-between\\r\\n        justify-content space-between\\r\\n    . align-items-start\\r\\n        align-items start\\r\\n    . align-items-center\\r\\n        align-items center\"},\"t/css/tailwind/layout/t/grid.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params &md\\r\\n\\r\\n  $if md.useGrid\\r\\n    . grid\\r\\n        display grid\\r\\n\"},\"test.css.ittf\":{\"type\":\"CODE\",\"contents\":\"css\\r\\n  $\\r\\n    var md = {\\r\\n      useFlex: true,\\r\\n      useGrid: true,\\r\\n    }\\r\\n    //\\r\\n\\r\\n  css/tailwind/layout/index(&md)\\r\\n  css/tailwind/text(&md)\\r\\n  $include css/droplist-menu\\r\\n  $include css/shell\\r\\n  $include css/responsive-multi-level-menu-three.css.ittf\"},\"t/css/tailwind/text.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params &md\\r\\n  \\r\\n  $\\r\\n    var count = [0,1,2,3,4,5];\\r\\n    var sizes = ['s','m','l','x','xl','xxl'];\\r\\n    var scale = ['0.6','0.8','1','1.3','1.6','2'];\\r\\n    //\\r\\n\\r\\n  $foreach c in count\\r\\n    . font-${sizes[c]}\\r\\n      font-size ${scale[c]}em\\r\\n\\r\\n  . font-weight-s\\r\\n      font-weight 300\\r\\n  . font-weight-m\\r\\n      font-weight 300\\r\\n  . font-weight-l\\r\\n      font-weight 500\\r\\n  . font-weight-x\\r\\n      font-weight 500\\r\\n  . font-weight-xl\\r\\n      font-weight 700\\r\\n  . font-weight-xxl\\r\\n      font-weight 700\"},\"toIttf/file.css\":{\"type\":\"CODE\",\"contents\":\"\\r\\n/* ================================================================ \\r\\nThis copyright notice must be untouched at all times.\\r\\n\\r\\nThe original version of this stylesheet and the associated (x)html\\r\\nis available at http://www.cssplay.co.uk/menus/cssplay-responsive-multi-level-menu-three.html\\r\\nCopyright (c) Stu Nicholls. All rights reserved.\\r\\nThis stylesheet and the assocaited (x)html may be modified in any \\r\\nway to fit your requirements.\\r\\n=================================================================== */\\r\\n.cssplay_menu {width:100%; background:#ccc; text-align:center; height:45px; position:relative; z-index:100;}\\r\\n.cssplay_menu > span {display:none;}\\r\\n.cssplay_menu input {position:absolute; display:none;}\\r\\n.cssplay_menu label {display:none;}\\r\\n.cssplay_menu ul {margin:0; padding:0; list-style:none; white-space:nowrap; text-align:left;}\\r\\n.cssplay_menu ul {display:inline-block;} \\r\\n.cssplay_menu ul {*display:inline;}\\r\\n\\r\\n.cssplay_menu li {margin:0; padding:0; list-style:none;}\\r\\n.cssplay_menu li {display:inline-block; display:inline;}\\r\\n.cssplay_menu ul ul {position:absolute; left:-9999px; border-left:1px solid #ddd; border-right:1px solid #ddd;}\\r\\n.cssplay_menu > ul {margin:0 auto;}\\r\\n.cssplay_menu > ul > li {float:left; display:block; position:relative;}\\r\\n.cssplay_menu ul ul li a {border-top:1px solid #ddd}\\r\\n.cssplay_menu > ul > li.has-sub > a {background-image:url(down.png); background-repeat: no-repeat; background-position: right center;}\\r\\n.cssplay_menu ul ul > li.has-sub > a {background-image:url(right.png); background-repeat: no-repeat; background-position: right center;}\\r\\n.cssplay_menu ul li.left ul > li.has-sub > a {background-image:url(left.png); background-repeat: no-repeat; background-position:left center;}\\r\\n\\r\\n.cssplay_menu ul li b {display:block; width:100%; height:45px; background:transparent; position:relative; z-index:10;\\r\\n-webkit-transition: 0s 0.5s;\\r\\ntransition: 0s 0.5s;\\r\\n}\\r\\n.cssplay_menu ul ul li b {margin-top:-45px;}\\r\\n\\r\\n.cssplay_menu ul li b {*display:none;}\\r\\n\\r\\n.cssplay_menu ul {background:#ccc;}\\r\\n\\r\\n.cssplay_menu a {display:block; font:normal 14px \\\"PT Sans\\\", arial, sans-serif; color:#000; line-height:45px; text-decoration:none; padding:0 30px 0 10px;}\\r\\n.cssplay_menu > ul > li > a {float:left; text-transform:uppercase;}\\r\\n\\r\\n.cssplay_menu ul li:hover > ul {visibility:visible; left:-1px; top:45px; opacity:1;}\\r\\n.cssplay_menu ul ul li:hover > ul {visibility:visible; left:100%; top:auto; margin-top:-46px;}\\r\\n.cssplay_menu li.left:hover > ul {visibility:visible; left:auto; right:-1px; top:45px;}\\r\\n.cssplay_menu li.left ul li:hover > ul {visibility:visible; left:auto; right:100%; top:auto; margin-top:-46px;}\\r\\n.cssplay_menu ul li:hover > b {width:0;}\\r\\n\\r\\n.cssplay_menu li.left ul a {text-align:right; padding:0 10px 0 30px;}\\r\\n\\r\\n.cssplay_menu li:hover > a,\\r\\n.cssplay_menu li.left ul li:hover > a {background-color:#bbb; text-decoration:underline;}\\r\\n\\r\\n.backimage {display:block; width:100%; height:500px; background:url(ski.jpg) no-repeat center center; background-size:cover;}\\r\\n\\r\\n\\r\\n\\r\\n@media only screen and (max-width:768px){\\r\\n.cssplay_menu ul li b {display:none;}\\r\\n.cssplay_menu {height:0; padding-top:45px; background:#bbb; position:relative;}\\r\\n.cssplay_menu > label {display:block; width:36px; height:36px; background:#ddd; border-radius:5px; position:absolute; right:10px; top:5px; cursor:pointer;}\\r\\n.cssplay_menu > label:before {display:block; content:\\\"\\\"; width:18px; height:2px; background:#000; position:absolute; left:50%; top:50%; margin-left:-9px; margin-top:-1px;\\r\\n-webkit-transition:0.25s;\\r\\ntransition:0.25s\\r\\n}\\r\\n.cssplay_menu > label:after {display:block; content:\\\"\\\"; width:2px; height:18px; background:#000; position:absolute; left:50%; top:50%; margin-left:-1px; margin-top:-9px;\\r\\n-webkit-transition:0.25s;\\r\\ntransition:0.25s\\r\\n}\\r\\n.cssplay_menu > span {display:block; font:normal 14px \\\"PT Sans\\\", arial,sans-serif; color:#000; position:absolute; left:10px; top:15px;}\\r\\n\\r\\n.cssplay_menu li {display:block;}\\r\\n.cssplay_menu ul, \\r\\n.cssplay_menu ul ul {margin:0; display:block; position:static; max-height:0; overflow:hidden;\\r\\n-webkit-transition:0.25s;\\r\\ntransition:0.25s;\\r\\n}\\r\\n.cssplay_menu > ul > li.has-sub > a {background-image:none;}\\r\\n.cssplay_menu ul ul > li.has-sub > a {background-image:none;}\\r\\n.cssplay_menu ul li.left ul > li.has-sub > a {background-image:none;}\\r\\n\\r\\n.cssplay_menu ul li {float:none; display:block; position:relative;}\\r\\n.cssplay_menu ul li label {display:block; width:36px; height:36px; background:#ddd; border-radius:5px; position:absolute; right:10px; top:5px; cursor:pointer;}\\r\\n.cssplay_menu ul ul li label {margin-top:0;}\\r\\n\\r\\n.cssplay_menu ul li label:before {display:block; content:\\\"\\\"; width:18px; height:2px; background:#000; position:absolute; left:50%; top:50%; margin-left:-9px; margin-top:-1px;\\r\\n-webkit-transition:0.25s;\\r\\ntransition:0.25s\\r\\n}\\r\\n.cssplay_menu ul li label:after {display:block; content:\\\"\\\"; width:2px; height:18px; background:#000; position:absolute; left:50%; top:50%; margin-left:-1px; margin-top:-9px;\\r\\n-webkit-transition:0.25s;\\r\\ntransition:0.25s\\r\\n}\\r\\n\\r\\n.cssplay_menu ul {background:#ccc; border:0;}\\r\\n\\r\\n.cssplay_menu a {display:block; font:normal 14px arial,sans-serif; color:#000; line-height:45px; text-decoration:none;padding:0 20px 0 10px;}\\r\\n.cssplay_menu ul li a {float:none; border-top:1px solid #aaa;}\\r\\n.cssplay_menu ul ul li a:before {content:\\\"\\\"; display:block; width:15px; height:45px; background:url(right.png) no-repeat left 15px; float:left;}\\r\\n\\r\\n.cssplay_menu ul ul li > ul {margin-top:0;}\\r\\n.cssplay_menu li.left ul li > ul {margin-top:0;}\\r\\n\\r\\n.cssplay_menu ul ul li:hover > ul {margin-top:0;}\\r\\n.cssplay_menu li.left ul li:hover > ul {margin-top:0;}\\r\\n\\r\\n.cssplay_menu li.left ul a {text-align:left; padding:0 20px 0 10px;}\\r\\n\\r\\n.cssplay_menu li:hover > a,\\r\\n.cssplay_menu li.left ul li:hover > a {background-color:#ccc; text-decoration:none;}\\r\\n\\r\\n.cssplay_menu input:checked ~ label:before {\\r\\n-webkit-transform:rotate(360deg);\\r\\ntransform:rotate(360deg);\\r\\n}\\r\\n.cssplay_menu input:checked ~ label:after {\\r\\n-webkit-transform:rotate(270deg);\\r\\ntransform:rotate(270deg);\\r\\n}\\r\\n\\r\\n.cssplay_menu input:checked ~ ul {max-height:3000px;}\\r\\n\\r\\n.cssplay_menu ul ul {border:0; margin:0 15px;}\\r\\n}\"},\"t/css/droplist-menu.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    #\\r\\n        # \\r\\n        # * css only - responsive click/tap action droplist menu\\r\\n        # * (c) 2014 - CSSplay - Stu Nicholls\\r\\n        # *\\r\\n        # * http://www.cssplay.co.uk\\r\\n        # *\\r\\n        # \\r\\n    # defaults\\r\\n    < html\\r\\n        + body\\r\\n        padding 0\\r\\n        margin 0\\r\\n    . content\\r\\n        width 100%\\r\\n        margin 0 auto\\r\\n        max-width 1200px\\r\\n    . content img\\r\\n        width 100%\\r\\n    . content h2\\r\\n        padding 0 20px\\r\\n        margin 0\\r\\n        font normal 26px/50px 'texgyreadventorregular', 'lucida sans', arial, sans-serif\\r\\n        color #069\\r\\n    . content h3\\r\\n        padding 0 20px\\r\\n        margin 0\\r\\n        font normal 22px/40px 'texgyreadventorregular', 'lucida sans', arial, sans-serif\\r\\n        color #c60\\r\\n    . content h5\\r\\n        padding 0 20px\\r\\n        margin 0\\r\\n        font normal 12px/20px 'texgyreadventorregular', 'lucida sans', arial, sans-serif\\r\\n        color #888\\r\\n    . content p\\r\\n        padding 5px 20px\\r\\n        margin 0\\r\\n        font normal 14px/18px 'texgyreadventorregular', 'lucida sans', arial, sans-serif\\r\\n        color #666\\r\\n    . content ol li\\r\\n        padding 5px 0\\r\\n        margin 0\\r\\n        font normal 14px/18px 'texgyreadventorregular', 'lucida sans', arial, sans-serif\\r\\n        color #888\\r\\n    . content ol li a\\r\\n        color #080\\r\\n    # menu\\r\\n    . nav input\\r\\n        + #togglemenu\\r\\n        position absolute\\r\\n        left -9999px\\r\\n        display none\\r\\n    . nav label.togglemenu\\r\\n        display none\\r\\n    . nav\\r\\n        width 100%\\r\\n        max-width 1200px\\r\\n        margin 50px auto 0 auto\\r\\n    . nav ul\\r\\n        position relative\\r\\n        margin 0\\r\\n        padding 0\\r\\n        list-style none\\r\\n        z-index 100\\r\\n    . nav > ul > li\\r\\n        float left\\r\\n        max-width 180px\\r\\n        margin 0 5px 0 0\\r\\n    . nav > ul > li:before\\r\\n        position relative\\r\\n        top 10px\\r\\n        left 10px\\r\\n        content \\\"\\\"\\r\\n        height 4px\\r\\n        width 4px\\r\\n        border 2px solid #666\\r\\n        border-color transparent #666 #666 transparent\\r\\n        float left\\r\\n        margin 5px 0 0 0\\r\\n        z-index 100\\r\\n        transform rotate(45deg)\\r\\n        -webkit-transform rotate(45deg)\\r\\n        -ms-transform rotate(45deg)\\r\\n    . nav ul > li > div\\r\\n        display block\\r\\n        position absolute\\r\\n        top 87px\\r\\n        left 0\\r\\n        max-height 0\\r\\n        width 100%\\r\\n        overflow hidden\\r\\n        background rgba(237,230,224,0.9)\\r\\n        z-index 0\\r\\n        transition 0.25s\\r\\n        -webkit-transition 0.25s\\r\\n    . nav ul > li > div ul\\r\\n        display inline-block\\r\\n        width 30%\\r\\n        margin 0 2%\\r\\n        padding 45px 0 30px 0\\r\\n        vertical-align top\\r\\n    . nav ul > li > div ul:last-child\\r\\n        margin 0\\r\\n    . nav ul li label\\r\\n        display block\\r\\n        font bold 15px/15px arial, sans-serif\\r\\n        color #333\\r\\n        padding 16px 30px\\r\\n        cursor pointer\\r\\n        position relative\\r\\n        height 55px\\r\\n        border-radius 10px 10px 0 0\\r\\n    . nav ul li label.openmenu\\r\\n        background rgba(217,210,204,0)\\r\\n        transition 0.25s\\r\\n        -webkit-transition 0.25s\\r\\n    . nav ul li label.opentop\\r\\n        background rgba(217,210,204,0)\\r\\n        transition 0.5s\\r\\n        -webkit-transition 0.5s\\r\\n    . nav ul li label span\\r\\n        display block\\r\\n        font normal 12px/14px arial, sans-serif\\r\\n        color #888\\r\\n        margin 10px 0 0 0\\r\\n        text-transform uppercase\\r\\n    . nav ul li label.closetop\\r\\n        width 100%\\r\\n        padding 0\\r\\n        height 75px\\r\\n        margin-top -75px\\r\\n        display none\\r\\n    . nav #closemenu\\r\\n        display none\\r\\n        position fixed\\r\\n        top 0\\r\\n        left 0\\r\\n        height 100%\\r\\n        width 100%\\r\\n        z-index 80\\r\\n    . nav ul ul li\\r\\n        padding 1px 0\\r\\n        border-top 1px solid #aaa\\r\\n    . nav ul ul li:last-child\\r\\n        border-bottom 1px solid #aaa\\r\\n    . nav ul ul li a\\r\\n        display block\\r\\n        font normal 12px/12px arial, sans-serif\\r\\n        padding 10px 30px\\r\\n        color #555 !important\\r\\n        text-decoration none\\r\\n        padding 6px 20px\\r\\n    . nav ul ul li.noborder\\r\\n        border 0\\r\\n        padding 0\\r\\n    . nav ul ul li.noborder img\\r\\n        display block\\r\\n        width 100%\\r\\n    . nav ul ul li a img\\r\\n        display block\\r\\n        margin 0 auto\\r\\n        border 0\\r\\n    . nav ul ul li a:hover\\r\\n        color #fff !important\\r\\n        background rgb(167,160,154)\\r\\n    . nav ul ul li.noborder a:hover\\r\\n        background transparent\\r\\n    . nav ul ul li.noborder a\\r\\n        padding 0 0 5px 0\\r\\n    . nav #p1:checked ~ ul > li:nth-of-type(1) > div\\r\\n        + .nav #p2:checked ~ ul > li:nth-of-type(2) > div\\r\\n        + .nav #p3:checked ~ ul > li:nth-of-type(3) > div\\r\\n        + .nav #p4:checked ~ ul > li:nth-of-type(4) > div\\r\\n        max-height 500px\\r\\n        z-index 1\\r\\n        box-shadow 0 10px 8px -8px rgba(0,0,0,0.3)\\r\\n        transition 0.25s 0.25s\\r\\n        -webkit-transition 0.25s 0.25s\\r\\n    . nav #p1:checked ~ ul > li:nth-of-type(1) > label.opentop\\r\\n        + .nav #p2:checked ~ ul > li:nth-of-type(2) > label.opentop\\r\\n        + .nav #p3:checked ~ ul > li:nth-of-type(3) > label.opentop\\r\\n        + .nav #p4:checked ~ ul > li:nth-of-type(4) > label.opentop\\r\\n        background rgba(217,210,204,0.9)\\r\\n    . nav #p1:checked ~ ul > li:nth-of-type(1) .closetop\\r\\n        + .nav #p2:checked ~ ul > li:nth-of-type(2) .closetop\\r\\n        + .nav #p3:checked ~ ul > li:nth-of-type(3) .closetop\\r\\n        + .nav #p4:checked ~ ul > li:nth-of-type(4) .closetop\\r\\n        + .nav #p1:checked ~ #closemenu\\r\\n        + .nav #p2:checked ~ #closemenu\\r\\n        + .nav #p3:checked ~ #closemenu\\r\\n        + .nav #p4:checked ~ #closemenu\\r\\n        display block\\r\\n    media only screen and (max-width: 768px)\\r\\n        . nav label\\r\\n            display block\\r\\n            cursor pointer\\r\\n        . nav ul li label\\r\\n            height auto\\r\\n            border-radius 0\\r\\n        . nav label.togglemenu\\r\\n            float right\\r\\n            display block\\r\\n            cursor pointer\\r\\n            position relative\\r\\n            z-index 100\\r\\n            font normal 22px/22px arial, sans-serif\\r\\n            color #000\\r\\n            margin 0 20px 20px 0\\r\\n        . nav > ul\\r\\n            max-height 0\\r\\n            overflow hidden\\r\\n            width 100%\\r\\n            background #555\\r\\n            padding 0\\r\\n            clear both\\r\\n            transition 0.5s\\r\\n            -webkit-transition 0.5s\\r\\n        . nav ul li label.closetop\\r\\n            height 48px\\r\\n            margin-top -48px\\r\\n        . nav > ul > li:before\\r\\n            border-color transparent #fff #fff transparent\\r\\n        . nav ul li label.opentop\\r\\n            color #fff\\r\\n            border-top 1px solid #fff\\r\\n            text-align left\\r\\n        . nav ul li label span\\r\\n            color #fff\\r\\n            display inline\\r\\n            margin-left 10px\\r\\n        . nav > ul > li\\r\\n            width 100%\\r\\n            max-width 100%\\r\\n            text-align center\\r\\n        . nav ul > li > div\\r\\n            position static\\r\\n            padding 0\\r\\n        . nav ul > li > div ul\\r\\n            width 100%\\r\\n            max-width 100%\\r\\n            display block\\r\\n            padding 0 0 0 10px\\r\\n            margin 0\\r\\n            background #333\\r\\n        . nav ul div ul:last-child\\r\\n            display none\\r\\n        . nav #togglemenu:checked ~ ul\\r\\n            max-height 700px\\r\\n        . nav #p1:checked ~ ul > li:nth-of-type(1) > label.opentop\\r\\n            + .nav #p2:checked ~ ul > li:nth-of-type(2) > label.opentop\\r\\n            + .nav #p3:checked ~ ul > li:nth-of-type(3) > label.opentop\\r\\n            + .nav #p4:checked ~ ul > li:nth-of-type(4) > label.opentop\\r\\n            background #333\\r\\n        . nav ul ul li\\r\\n            border 0\\r\\n            padding 0\\r\\n            text-align left\\r\\n        . nav ul ul li:last-child\\r\\n            border 0\\r\\n        . nav ul ul li a\\r\\n            display block\\r\\n            padding 10px 20px\\r\\n            color #fff !important\\r\\n            background #555\\r\\n            border-top 1px solid #ccc\\r\\n        . nav ul ul li a:hover\\r\\n            background #333\\r\\n        . nav ul ul li.noborder a\\r\\n            padding-top 5px\\r\\n        . nav ul > li:nth-of-type(1) > div\\r\\n            + .nav ul > li:nth-of-type(2) > div\\r\\n            + .nav ul > li:nth-of-type(3) > div\\r\\n            + .nav ul > li:nth-of-type(4) > div\\r\\n            transition 0.4s\\r\\n            -webkit-transition 0.4s\\r\\n        . nav #p1:checked ~ ul > li:nth-of-type(1) > div\\r\\n            + .nav #p2:checked ~ ul > li:nth-of-type(2) > div\\r\\n            + .nav #p3:checked ~ ul > li:nth-of-type(3) > div\\r\\n            + .nav #p4:checked ~ ul > li:nth-of-type(4) > div\\r\\n            box-shadow none\\r\\n            transition 1.5s\\r\\n            -webkit-transition 1.5s\"},\"toIttf/file.html\":{\"type\":\"CODE\",\"contents\":\"<div class=\\\"cssplay_menu\\\"><span>MENU</span><input type=\\\"checkbox\\\" id=\\\"sub0\\\"><label for=\\\"sub0\\\"></label>\\r\\n\\t\\t\\t<ul>\\r\\n\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Home</a></li>\\r\\n\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Contact Us</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p1\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub1\\\"><label for=\\\"sub1\\\"></label> \\r\\n\\t\\t\\t\\t\\t<ul id=\\\"p1\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Email</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Telephone</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Online Form</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Snail Mail Address</a></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Resort</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p2\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub2\\\"><label for=\\\"sub2\\\"></label>\\r\\n\\t\\t\\t\\t\\t<ul id=\\\"p2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Ski Hire Facilities</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Main Ski Slopes</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p3\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub3\\\"><label for=\\\"sub3\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"p3\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Beginners Slopes</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Intermediate Slopes</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Advanced Skill Levels</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p4\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub4\\\"><label for=\\\"sub4\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"p4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Local</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Nearby</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">With instructor</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Snow boarding</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Expert</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Night Life</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Restaurants</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p5\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub5\\\"><label for=\\\"sub5\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"p5\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Snow Hotel</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">The Snowman</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Ice Cavern</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Ski Inn</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Car Hire</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p6\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub6\\\"><label for=\\\"sub6\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"p6\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">From Airport</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">In Resort</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Multiple Resorts</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Surrounding Area</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p7\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub7\\\"><label for=\\\"sub7\\\"></label>\\r\\n\\t\\t\\t\\t\\t<ul id=\\\"p7\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Where to go</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">What to do</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Places of interest</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">National parks &amp; Museums</a></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li class=\\\"has-sub left\\\"><a class=\\\"has-sub\\\" href=\\\"index.html\\\">Information</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p8\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub8\\\"><label for=\\\"sub8\\\"></label>\\r\\n\\t\\t\\t\\t\\t<ul id=\\\"p8\\\">\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Money Exchange</a></li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Resort Essential Information</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p9\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub9\\\"><label for=\\\"sub9\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"p9\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Lift Passes</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Insurance</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Gear Rental</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p10\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub10\\\"><label for=\\\"sub10\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"p10\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Boots</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Skis</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Ski Wear</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Goggles</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Ski Schools</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Snow Report</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t<li class=\\\"has-sub\\\"><a href=\\\"index.html\\\">Language</a><b aria-haspopup=\\\"true\\\" aria-controls=\\\"p11\\\"></b><input type=\\\"checkbox\\\" id=\\\"sub11\\\"><label for=\\\"sub11\\\"></label>\\r\\n\\t\\t\\t\\t\\t\\t\\t<ul id=\\\"p11\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Austrian</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">German</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">French</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">English</a></li>\\r\\n\\t\\t\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Short Breaks</a></li>\\r\\n\\t\\t\\t\\t\\t</ul>\\r\\n\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t<li><a href=\\\"index.html\\\">Privacy</a></li>\\r\\n\\t\\t\\t</ul>\\r\\n\\t\\t</div>\"},\"t/html/droplist-menu.html.ittf\":{\"type\":\"CODE\",\"contents\":\". nav\\r\\n    input \\r\\n        type checkbox\\r\\n        id togglemenu\\r\\n    label Menu &#9776;\\r\\n        for togglemenu\\r\\n        class togglemenu\\r\\n    input \\r\\n        type radio\\r\\n        id p0\\r\\n        name mainmenu\\r\\n    input \\r\\n        type radio\\r\\n        id p1\\r\\n        name mainmenu\\r\\n    input \\r\\n        type radio\\r\\n        id p2\\r\\n        name mainmenu\\r\\n    input \\r\\n        type radio\\r\\n        id p3\\r\\n        name mainmenu\\r\\n    input \\r\\n        type radio\\r\\n        id p4\\r\\n        name mainmenu\\r\\n    label \\r\\n        for p0\\r\\n        id closemenu\\r\\n    ul \\r\\n        li \\r\\n            label Womenwear\\r\\n                for p1\\r\\n                class opentop\\r\\n                span Spring &amp; Summer Collection\\r\\n            label \\r\\n                for p0\\r\\n                class closetop\\r\\n            div \\r\\n                ul \\r\\n                    li \\r\\n                        a Floral Print Dresses\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Sleeveless Dresses\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Pure Cotton Dresses\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Linen Blend Dresses\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Buttoned Dresses\\r\\n                            href index.html\\r\\n                ul \\r\\n                    li \\r\\n                        a Flared Denim Jeans\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Bootleg Jeans\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Cropped Jeans\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Jeggings\\r\\n                            href index.html\\r\\n                ul \\r\\n                    li \\r\\n                        class noborder\\r\\n                        img \\r\\n                            src /menus/cssplaydroplist/womenswear.jpg\\r\\n                            alt \\r\\n        li \\r\\n            label Mail Order\\r\\n                for p2\\r\\n                class opentop\\r\\n                span Special Offers &amp; Clearance\\r\\n            label \\r\\n                for p0\\r\\n                class closetop\\r\\n            div \\r\\n                ul \\r\\n                    li \\r\\n                        a Pleated Skirts\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Belted Skirts\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Panelled Skirts\\r\\n                            href index.html\\r\\n                ul \\r\\n                    li \\r\\n                        a Pure Cotton Blouses\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Pure Silk Blouses\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Floral Print Blouses\\r\\n                            href index.html\\r\\n                ul \\r\\n                    li \\r\\n                        class noborder\\r\\n                        img \\r\\n                            src /menus/cssplaydroplist/skirts.jpg\\r\\n                            alt \\r\\n        li \\r\\n            label Accessories\\r\\n                for p3\\r\\n                class opentop\\r\\n                span Jewellery &amp; Handbags\\r\\n            label \\r\\n                for p0\\r\\n                class closetop\\r\\n            div \\r\\n                ul \\r\\n                    li \\r\\n                        a Silk Scarves\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Chiffon Scarves\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Crinkle Scarves\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Butterfly Scarves\\r\\n                            href index.html\\r\\n                ul \\r\\n                    li \\r\\n                        a Pendant Necklaces\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Pearl Earings\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Stud Earings\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Diamond Rings\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Emerald Rings\\r\\n                            href index.html\\r\\n                ul \\r\\n                    li \\r\\n                        class noborder\\r\\n                        img \\r\\n                            src /menus/cssplaydroplist/jewellery.jpg\\r\\n                            alt \\r\\n        li \\r\\n            label Home &amp; Garden\\r\\n                for p4\\r\\n                class opentop\\r\\n                span Electrical &amp; Furniture\\r\\n            label \\r\\n                for p0\\r\\n                class closetop\\r\\n            div \\r\\n                ul \\r\\n                    li \\r\\n                        a Wide Screen Televisions\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a DVD &amp; Blue Ray Players\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Computers, Tablets &amp; Smartphones\\r\\n                            href index.html\\r\\n                ul \\r\\n                    li \\r\\n                        a Three Piece Suits\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Dining Tables &amp; Chairs\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Bedroom Furniture\\r\\n                            href index.html\\r\\n                    li \\r\\n                        a Garden Furniture\\r\\n                            href index.html\\r\\n                ul \\r\\n                    li \\r\\n                        class noborder\\r\\n                        img \\r\\n                            src /menus/cssplaydroplist/furniture.jpg\\r\\n                            alt \"},\"t/css/responsive-multi-level-menu-three.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    #\\r\\n        # ================================================================\\r\\n        # This copyright notice must be untouched at all times.\\r\\n        # The original version of this stylesheet and the associated (x)html\\r\\n        # is available at http://www.cssplay.co.uk/menus/cssplay-responsive-multi-level-menu-three.html\\r\\n        # Copyright (c) Stu Nicholls. All rights reserved.\\r\\n        # This stylesheet and the assocaited (x)html may be modified in any\\r\\n        # way to fit your requirements.\\r\\n        # ===================================================================\\r\\n    . cssplay_menu\\r\\n        width 100%\\r\\n        background #ccc\\r\\n        text-align center\\r\\n        height 45px\\r\\n        position relative\\r\\n        z-index 100\\r\\n    . cssplay_menu > span\\r\\n        display none\\r\\n    . cssplay_menu input\\r\\n        position absolute\\r\\n        display none\\r\\n    . cssplay_menu label\\r\\n        display none\\r\\n    . cssplay_menu ul\\r\\n        margin 0\\r\\n        padding 0\\r\\n        list-style none\\r\\n        white-space nowrap\\r\\n        text-align left\\r\\n    . cssplay_menu ul\\r\\n        display inline-block\\r\\n    . cssplay_menu ul\\r\\n        @ *display inline\\r\\n    . cssplay_menu li\\r\\n        margin 0\\r\\n        padding 0\\r\\n        list-style none\\r\\n    . cssplay_menu li\\r\\n        display inline-block\\r\\n        display inline\\r\\n    . cssplay_menu ul ul\\r\\n        position absolute\\r\\n        left -9999px\\r\\n        border-left 1px solid #ddd\\r\\n        border-right 1px solid #ddd\\r\\n    . cssplay_menu > ul\\r\\n        margin 0 auto\\r\\n    . cssplay_menu > ul > li\\r\\n        float left\\r\\n        display block\\r\\n        position relative\\r\\n    . cssplay_menu ul ul li a\\r\\n        border-top 1px solid #ddd\\r\\n    . cssplay_menu > ul > li.has-sub > a\\r\\n        background-image url(down.png)\\r\\n        background-repeat no-repeat\\r\\n        background-position right center\\r\\n    . cssplay_menu ul ul > li.has-sub > a\\r\\n        background-image url(right.png)\\r\\n        background-repeat no-repeat\\r\\n        background-position right center\\r\\n    . cssplay_menu ul li.left ul > li.has-sub > a\\r\\n        background-image url(left.png)\\r\\n        background-repeat no-repeat\\r\\n        background-position left center\\r\\n    . cssplay_menu ul li b\\r\\n        display block\\r\\n        width 100%\\r\\n        height 45px\\r\\n        background transparent\\r\\n        position relative\\r\\n        z-index 10\\r\\n        -webkit-transition 0s 0.5s\\r\\n        transition 0s 0.5s\\r\\n    . cssplay_menu ul ul li b\\r\\n        margin-top -45px\\r\\n    . cssplay_menu ul li b\\r\\n        @ *display none\\r\\n    . cssplay_menu ul\\r\\n        background #ccc\\r\\n    . cssplay_menu a\\r\\n        display block\\r\\n        font normal 14px \\\"PT Sans\\\", arial, sans-serif\\r\\n        color #000\\r\\n        line-height 45px\\r\\n        text-decoration none\\r\\n        padding 0 30px 0 10px\\r\\n    . cssplay_menu > ul > li > a\\r\\n        float left\\r\\n        text-transform uppercase\\r\\n    . cssplay_menu ul li:hover > ul\\r\\n        visibility visible\\r\\n        left -1px\\r\\n        top 45px\\r\\n        opacity 1\\r\\n    . cssplay_menu ul ul li:hover > ul\\r\\n        visibility visible\\r\\n        left 100%\\r\\n        top auto\\r\\n        margin-top -46px\\r\\n    . cssplay_menu li.left:hover > ul\\r\\n        visibility visible\\r\\n        left auto\\r\\n        right -1px\\r\\n        top 45px\\r\\n    . cssplay_menu li.left ul li:hover > ul\\r\\n        visibility visible\\r\\n        left auto\\r\\n        right 100%\\r\\n        top auto\\r\\n        margin-top -46px\\r\\n    . cssplay_menu ul li:hover > b\\r\\n        width 0\\r\\n    . cssplay_menu li.left ul a\\r\\n        text-align right\\r\\n        padding 0 10px 0 30px\\r\\n    . cssplay_menu li:hover > a\\r\\n        + .cssplay_menu li.left ul li:hover > a\\r\\n        background-color #bbb\\r\\n        text-decoration underline\\r\\n    . backimage\\r\\n        display block\\r\\n        width 100%\\r\\n        height 500px\\r\\n        background url(ski.jpg) no-repeat center center\\r\\n        background-size cover\\r\\n    media only screen and (max-width:768px)\\r\\n        . cssplay_menu ul li b\\r\\n            display none\\r\\n        . cssplay_menu\\r\\n            height 0\\r\\n            padding-top 45px\\r\\n            background #bbb\\r\\n            position relative\\r\\n        . cssplay_menu > label\\r\\n            display block\\r\\n            width 36px\\r\\n            height 36px\\r\\n            background #ddd\\r\\n            border-radius 5px\\r\\n            position absolute\\r\\n            right 10px\\r\\n            top 5px\\r\\n            cursor pointer\\r\\n        . cssplay_menu > label:before\\r\\n            display block\\r\\n            content \\\"\\\"\\r\\n            width 18px\\r\\n            height 2px\\r\\n            background #000\\r\\n            position absolute\\r\\n            left 50%\\r\\n            top 50%\\r\\n            margin-left -9px\\r\\n            margin-top -1px\\r\\n            -webkit-transition 0.25s\\r\\n            transition 0.25s\\r\\n        . cssplay_menu > label:after\\r\\n            display block\\r\\n            content \\\"\\\"\\r\\n            width 2px\\r\\n            height 18px\\r\\n            background #000\\r\\n            position absolute\\r\\n            left 50%\\r\\n            top 50%\\r\\n            margin-left -1px\\r\\n            margin-top -9px\\r\\n            -webkit-transition 0.25s\\r\\n            transition 0.25s\\r\\n        . cssplay_menu > span\\r\\n            display block\\r\\n            font normal 14px \\\"PT Sans\\\", arial,sans-serif\\r\\n            color #000\\r\\n            position absolute\\r\\n            left 10px\\r\\n            top 15px\\r\\n        . cssplay_menu li\\r\\n            display block\\r\\n        . cssplay_menu ul\\r\\n            + .cssplay_menu ul ul\\r\\n            margin 0\\r\\n            display block\\r\\n            position static\\r\\n            max-height 0\\r\\n            overflow hidden\\r\\n            -webkit-transition 0.25s\\r\\n            transition 0.25s\\r\\n        . cssplay_menu > ul > li.has-sub > a\\r\\n            background-image none\\r\\n        . cssplay_menu ul ul > li.has-sub > a\\r\\n            background-image none\\r\\n        . cssplay_menu ul li.left ul > li.has-sub > a\\r\\n            background-image none\\r\\n        . cssplay_menu ul li\\r\\n            float none\\r\\n            display block\\r\\n            position relative\\r\\n        . cssplay_menu ul li label\\r\\n            display block\\r\\n            width 36px\\r\\n            height 36px\\r\\n            background #ddd\\r\\n            border-radius 5px\\r\\n            position absolute\\r\\n            right 10px\\r\\n            top 5px\\r\\n            cursor pointer\\r\\n        . cssplay_menu ul ul li label\\r\\n            margin-top 0\\r\\n        . cssplay_menu ul li label:before\\r\\n            display block\\r\\n            content \\\"\\\"\\r\\n            width 18px\\r\\n            height 2px\\r\\n            background #000\\r\\n            position absolute\\r\\n            left 50%\\r\\n            top 50%\\r\\n            margin-left -9px\\r\\n            margin-top -1px\\r\\n            -webkit-transition 0.25s\\r\\n            transition 0.25s\\r\\n        . cssplay_menu ul li label:after\\r\\n            display block\\r\\n            content \\\"\\\"\\r\\n            width 2px\\r\\n            height 18px\\r\\n            background #000\\r\\n            position absolute\\r\\n            left 50%\\r\\n            top 50%\\r\\n            margin-left -1px\\r\\n            margin-top -9px\\r\\n            -webkit-transition 0.25s\\r\\n            transition 0.25s\\r\\n        . cssplay_menu ul\\r\\n            background #ccc\\r\\n            border 0\\r\\n        . cssplay_menu a\\r\\n            display block\\r\\n            font normal 14px arial,sans-serif\\r\\n            color #000\\r\\n            line-height 45px\\r\\n            text-decoration none\\r\\n            padding 0 20px 0 10px\\r\\n        . cssplay_menu ul li a\\r\\n            float none\\r\\n            border-top 1px solid #aaa\\r\\n        . cssplay_menu ul ul li a:before\\r\\n            content \\\"\\\"\\r\\n            display block\\r\\n            width 15px\\r\\n            height 45px\\r\\n            background url(right.png) no-repeat left 15px\\r\\n            float left\\r\\n        . cssplay_menu ul ul li > ul\\r\\n            margin-top 0\\r\\n        . cssplay_menu li.left ul li > ul\\r\\n            margin-top 0\\r\\n        . cssplay_menu ul ul li:hover > ul\\r\\n            margin-top 0\\r\\n        . cssplay_menu li.left ul li:hover > ul\\r\\n            margin-top 0\\r\\n        . cssplay_menu li.left ul a\\r\\n            text-align left\\r\\n            padding 0 20px 0 10px\\r\\n        . cssplay_menu li:hover > a\\r\\n            + .cssplay_menu li.left ul li:hover > a\\r\\n            background-color #ccc\\r\\n            text-decoration none\\r\\n        . cssplay_menu input:checked ~ label:before\\r\\n            -webkit-transform rotate(360deg)\\r\\n            transform rotate(360deg)\\r\\n        . cssplay_menu input:checked ~ label:after\\r\\n            -webkit-transform rotate(270deg)\\r\\n            transform rotate(270deg)\\r\\n        . cssplay_menu input:checked ~ ul\\r\\n            max-height 3000px\\r\\n        . cssplay_menu ul ul\\r\\n            border 0\\r\\n            margin 0 15px\"},\"t/html/responsive-multi-level-menu-three.html.ittf\":{\"type\":\"CODE\",\"contents\":\". cssplay_menu\\r\\n    span MENU\\r\\n    input \\r\\n        type checkbox\\r\\n        id sub0\\r\\n    label \\r\\n        for sub0\\r\\n    ul \\r\\n        li \\r\\n            a Home\\r\\n                href index.html\\r\\n        li \\r\\n            class has-sub\\r\\n            a Contact Us\\r\\n                href index.html\\r\\n            b \\r\\n                aria-haspopup true\\r\\n                aria-controls p1\\r\\n            input \\r\\n                type checkbox\\r\\n                id sub1\\r\\n            label \\r\\n                for sub1\\r\\n            ul \\r\\n                id p1\\r\\n                li \\r\\n                    a Email\\r\\n                        href index.html\\r\\n                li \\r\\n                    a Telephone\\r\\n                        href index.html\\r\\n                li \\r\\n                    a Online Form\\r\\n                        href index.html\\r\\n                li \\r\\n                    a Snail Mail Address\\r\\n                        href index.html\\r\\n        li \\r\\n            class has-sub\\r\\n            a Resort\\r\\n                href index.html\\r\\n            b \\r\\n                aria-haspopup true\\r\\n                aria-controls p2\\r\\n            input \\r\\n                type checkbox\\r\\n                id sub2\\r\\n            label \\r\\n                for sub2\\r\\n            ul \\r\\n                id p2\\r\\n                li \\r\\n                    a Ski Hire Facilities\\r\\n                        href index.html\\r\\n                li \\r\\n                    class has-sub\\r\\n                    a Main Ski Slopes\\r\\n                        href index.html\\r\\n                    b \\r\\n                        aria-haspopup true\\r\\n                        aria-controls p3\\r\\n                    input \\r\\n                        type checkbox\\r\\n                        id sub3\\r\\n                    label \\r\\n                        for sub3\\r\\n                    ul \\r\\n                        id p3\\r\\n                        li \\r\\n                            a Beginners Slopes\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a Intermediate Slopes\\r\\n                                href index.html\\r\\n                        li \\r\\n                            class has-sub\\r\\n                            a Advanced Skill Levels\\r\\n                                href index.html\\r\\n                            b \\r\\n                                aria-haspopup true\\r\\n                                aria-controls p4\\r\\n                            input \\r\\n                                type checkbox\\r\\n                                id sub4\\r\\n                            label \\r\\n                                for sub4\\r\\n                            ul \\r\\n                                id p4\\r\\n                                li \\r\\n                                    a Local\\r\\n                                        href index.html\\r\\n                                li \\r\\n                                    a Nearby\\r\\n                                        href index.html\\r\\n                                li \\r\\n                                    a With instructor\\r\\n                                        href index.html\\r\\n                                li \\r\\n                                    a Snow boarding\\r\\n                                        href index.html\\r\\n                        li \\r\\n                            a Expert\\r\\n                                href index.html\\r\\n                li \\r\\n                    a Night Life\\r\\n                        href index.html\\r\\n                li \\r\\n                    class has-sub\\r\\n                    a Restaurants\\r\\n                        href index.html\\r\\n                    b \\r\\n                        aria-haspopup true\\r\\n                        aria-controls p5\\r\\n                    input \\r\\n                        type checkbox\\r\\n                        id sub5\\r\\n                    label \\r\\n                        for sub5\\r\\n                    ul \\r\\n                        id p5\\r\\n                        li \\r\\n                            a Snow Hotel\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a The Snowman\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a Ice Cavern\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a Ski Inn\\r\\n                                href index.html\\r\\n                li \\r\\n                    class has-sub\\r\\n                    a Car Hire\\r\\n                        href index.html\\r\\n                    b \\r\\n                        aria-haspopup true\\r\\n                        aria-controls p6\\r\\n                    input \\r\\n                        type checkbox\\r\\n                        id sub6\\r\\n                    label \\r\\n                        for sub6\\r\\n                    ul \\r\\n                        id p6\\r\\n                        li \\r\\n                            a From Airport\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a In Resort\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a Multiple Resorts\\r\\n                                href index.html\\r\\n        li \\r\\n            class has-sub\\r\\n            a Surrounding Area\\r\\n                href index.html\\r\\n            b \\r\\n                aria-haspopup true\\r\\n                aria-controls p7\\r\\n            input \\r\\n                type checkbox\\r\\n                id sub7\\r\\n            label \\r\\n                for sub7\\r\\n            ul \\r\\n                id p7\\r\\n                li \\r\\n                    a Where to go\\r\\n                        href index.html\\r\\n                li \\r\\n                    a What to do\\r\\n                        href index.html\\r\\n                li \\r\\n                    a Places of interest\\r\\n                        href index.html\\r\\n                li \\r\\n                    a National parks &amp; Museums\\r\\n                        href index.html\\r\\n        li \\r\\n            class has-sub left\\r\\n            a Information\\r\\n                class has-sub\\r\\n                href index.html\\r\\n            b \\r\\n                aria-haspopup true\\r\\n                aria-controls p8\\r\\n            input \\r\\n                type checkbox\\r\\n                id sub8\\r\\n            label \\r\\n                for sub8\\r\\n            ul \\r\\n                id p8\\r\\n                li \\r\\n                    a Money Exchange\\r\\n                        href index.html\\r\\n                li \\r\\n                    class has-sub\\r\\n                    a Resort Essential Information\\r\\n                        href index.html\\r\\n                    b \\r\\n                        aria-haspopup true\\r\\n                        aria-controls p9\\r\\n                    input \\r\\n                        type checkbox\\r\\n                        id sub9\\r\\n                    label \\r\\n                        for sub9\\r\\n                    ul \\r\\n                        id p9\\r\\n                        li \\r\\n                            a Lift Passes\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a Insurance\\r\\n                                href index.html\\r\\n                        li \\r\\n                            class has-sub\\r\\n                            a Gear Rental\\r\\n                                href index.html\\r\\n                            b \\r\\n                                aria-haspopup true\\r\\n                                aria-controls p10\\r\\n                            input \\r\\n                                type checkbox\\r\\n                                id sub10\\r\\n                            label \\r\\n                                for sub10\\r\\n                            ul \\r\\n                                id p10\\r\\n                                li \\r\\n                                    a Boots\\r\\n                                        href index.html\\r\\n                                li \\r\\n                                    a Skis\\r\\n                                        href index.html\\r\\n                                li \\r\\n                                    a Ski Wear\\r\\n                                        href index.html\\r\\n                                li \\r\\n                                    a Goggles\\r\\n                                        href index.html\\r\\n                        li \\r\\n                            a Ski Schools\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a Snow Report\\r\\n                                href index.html\\r\\n                li \\r\\n                    class has-sub\\r\\n                    a Language\\r\\n                        href index.html\\r\\n                    b \\r\\n                        aria-haspopup true\\r\\n                        aria-controls p11\\r\\n                    input \\r\\n                        type checkbox\\r\\n                        id sub11\\r\\n                    label \\r\\n                        for sub11\\r\\n                    ul \\r\\n                        id p11\\r\\n                        li \\r\\n                            a Austrian\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a German\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a French\\r\\n                                href index.html\\r\\n                        li \\r\\n                            a English\\r\\n                                href index.html\\r\\n                li \\r\\n                    a Short Breaks\\r\\n                        href index.html\\r\\n        li \\r\\n            a Privacy\\r\\n                href index.html\"}}"
    },
    {
      "_id": "62de7dd8493996d69cbaf023",
      "id": "62de7dd8493996d69cbaf023",
      "owner": "stfnbssl",
      "name": "js",
      "description": "...",
      "packiFiles": "{\"t/js/a_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        if err\\n            return\\n                _ callback\\n                    @ err\\n        $hook\\n\"},\"t/js/a_cb_no_err.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        $hook\\n\"},\"t/js/a_cb_throw.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        if err\\n            log 'err', err\\n            throw err\\n        $hook\\n\"},\"t/js/event_emit.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\t$params name\\r\\n\\r\\n\\t_ glEventHub.emit\\r\\n\\t\\t@ '${name}'\\r\\n\\t\\t{\\r\\n\\t\\t\\t$hook\\r\\n\"},\"t/js/event_on.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\t$params name\\r\\n\\r\\n\\t_ glEventHub.on\\r\\n\\t\\t@ '${name}'\\r\\n\\t\\t=>\\r\\n\\t\\t\\tparam data\\r\\n\\t\\t\\tlog 'on ${name}', data\\r\\n\\t\\t\\t$hook\\r\\n\"},\"t/js/f_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        if err\\n            return\\n                _ callback\\n                    @ err\\n        $hook\\n\"},\"t/js/f_cb_no_err.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        $hook\\n\"},\"t/js/f_cb_throw.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        if err\\n            log 'err', err\\n            throw err\\n        $hook\\n\"},\"t/js/r_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|@@null\\n    return\\n        _ callback\\n            @ null\\n            $if result !== null\\n                @ ${result}\\n            $hook\\n\"},\"t/js/models/docs/wzctx.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $global\\n        var wzCtx = {\\n            name: \\\"stfnbssl.github.io/wizzi\\\",\\n            version: \\\"0.7.1\\\",\\n            description: \\\"Wizzi github page\\\",\\n            author: \\\"Stefano Bassoli\\\",\\n            license: \\\"MIT\\\",\\n            Params: {\\n                title: \\\"Wizzi\\\",\\n                baseUrl: \\\"https://stfnbssl.github.io/wizzi\\\"\\n            },\\n            Section: {\\n                items: [\\n                    {\\n                        title: \\\"Concepts\\\",\\n                        url: \\\"/ittf/site/docs/concepts/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"How to\\\",\\n                        url: \\\"/ittf/site/docs/howtos/getstarted.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Sample code\\\",\\n                        url: \\\"/ittf/site/docs/samplecode/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Geeky\\\",\\n                        url: \\\"/ittf/site/docs/geeky/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Cheatsheets\\\",\\n                        url: \\\"/docs/cheatsheet/html\\\"\\n                    },\\n                    {\\n                        title: \\\"Play\\\",\\n                        url: \\\"/ittf/site/docs/play/index.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Docs: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Ittf Documents\\\",\\n                        url: \\\"./ittfdocuments.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model Instances\\\",\\n                        url: \\\"./wizzimodelinstances.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi CLI\\\",\\n                        url: \\\"./wizzicli.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            HowTos: {\\n                items: [\\n                    {\\n                        title: \\\"Get started\\\",\\n                        url: \\\"./getstarted.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            SampleCode: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Geeky: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi CLI\\\",\\n                        url: \\\"./wizzicli.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Starter: {\\n                \\\"items\\\": [\\n                    {\\n                        title: \\\"wizzi-starter-wizzi-plugin\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-wizzi-plugin\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-webpack-react\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-webpack-react\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-mern\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-mern\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-nextjs\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-nextjs\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-gatsby\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-gatsby\\\"\\n                    }\\n                ]\\n            },\\n            \\\"Plugin\\\": {\\n                items: [\\n                    {\\n                        title: \\\"wizzi-js\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-js/dist\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-web\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-web/dist\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-lab\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-lab/dist\\\"\\n                    }\\n                ]\\n            },\\n            Colors: {\\n                \\\"bg_0\\\": \\\"#333\\\",\\n                \\\"bg_f_0\\\": \\\"#000\\\",\\n                \\\"c_0\\\": \\\"#fff\\\",\\n                \\\"bg_dark\\\": \\\"#333\\\",\\n                \\\"bg_dark_medium\\\": \\\"#444\\\",\\n                \\\"c_dark\\\": \\\"#ddd\\\",\\n                \\\"c_dark_medium\\\": \\\"#bbb\\\",\\n                \\\"h3_c_dark\\\": \\\"#fc0\\\"\\n            },\\n            Fonts: {\\n                \\\"useMaterialIcons\\\": true,\\n                \\\"materialIcons\\\": {\\n                    \\\"baseUrl\\\": \\\"https://stfnbssl.github.io/wizzi/fonts\\\",\\n                    \\\"fontWeight\\\": \\\"400\\\",\\n                    \\\"size\\\": \\\"24px\\\"\\n                }\\n            }\\n        }\\n        var mpage = {\\n            Colors: {\\n                background: \\\"#ffffff\\\",\\n                scheme1Fade90: \\\"whiteFade-90,rgba(255,255,255,0.9)\\\",\\n                themeBack: \\\"#ffffff\\\",\\n                primary: \\\"#BDF3EE\\\",\\n                primaryDark: \\\"#122944\\\",\\n                primary30: \\\"#BDF3EE\\\",\\n                gray70: \\\"grey-70,#222B31\\\",\\n                grad1: \\\"#81B6CF\\\",\\n                grad2: \\\"#222B31\\\"\\n            }\\n        }\\n\"}}"
    },
    {
      "_id": "62de9150493996d69cd4adab",
      "id": "62de9150493996d69cd4adab",
      "owner": "stfnbssl",
      "name": "html",
      "description": "...",
      "packiFiles": "{\"t/html/images/logo.html.ittf\":{\"type\":\"CODE\",\"contents\":\"svg\\n    $params color|#000, bgcolor|#fff, viewBox|0 0 660 280\\n    $\\n        var opt = {};\\n        opt.y0 = 10;\\n        opt.y1 = 10;\\n        opt.y1a = 90;\\n        opt.y2 = 210;\\n        opt.ybottom = 250;\\n        opt.color = color;\\n        //\\n    preserve-aspect-ratio xMidYMid meet\\n    viewBox ${viewBox}\\n    rect\\n        x 0\\n        y 0\\n        width 660\\n        height 280\\n        fill ${bgcolor}\\n        stroke none\\n    polyline\\n        stroke ${color}\\n        fill ${color}\\n        stroke-width 2\\n        points 10 ${opt.ybottom} 45 ${opt.y0} 60 ${opt.y0} 75 ${opt.y1a + 40} 120 ${opt.y2} 120 ${opt.y1a + 40} 175 ${opt.y2} 175 ${opt.y1a + 20} 230 ${opt.y2} 230 ${opt.ybottom}\\n    i( 250, &opt )\\n    z( 320, &opt )\\n    z( 450, &opt )\\n    i( 590, &opt )\\n\"},\"t/html/images/t/z.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params l:integer, &opt\\n    polyline\\n        stroke ${opt.color}\\n        fill ${opt.color}\\n        stroke-width 2\\n        points ${l} ${opt.ybottom} ${l} ${opt.ybottom - 20} ${l+100} ${opt.y1a+40} ${l+80} ${opt.y1a+20} ${l+80} ${opt.y1a} ${l+130} ${opt.y1a} ${l+100} ${opt.ybottom - 20} ${l+120} ${opt.ybottom - 20} ${l+120} ${opt.ybottom}\\n\"},\"t/html/images/t/i.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params l:integer, &opt\\n    polyline\\n        stroke ${opt.color}\\n        fill ${opt.color}\\n        stroke-width 2\\n        points ${l} ${opt.ybottom} ${l+10} ${opt.y1+80} ${l+40} ${opt.y1+80} ${l+50} ${opt.ybottom}\\n    path\\n        stroke ${opt.color}\\n        fill ${opt.color}\\n        stroke-width 2\\n        d M${l+30}, ${opt.y1+20} C${l+60},${opt.y1+40} ${l+0},${opt.y1+60} ${l+30}, ${opt.y1+74}\\n\"},\"t/html/layouts/site-scripts.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n\\t$params &opt\\n\\n    $$ $include v08/env/vars\\n\\n    $\\n        var useReact = opt.useReact || opt.useMaterialUI;\\n        var useBabel = useReact || opt.useBabel;\\n        //\\n\\n    $*\\n    FIREBASE MUST BE FIRST\\n    BABEL IS LAST\\n    *$\\n\\n    $if opt.useFirebase\\n        js https://www.gstatic.com/firebasejs/5.8.1/firebase.js\\n        js https://www.gstatic.com/firebasejs/5.8.1/firebase-app.js\\n        js https://www.gstatic.com/firebasejs/5.8.1/firebase-auth.js\\n        js https://www.gstatic.com/firebasejs/5.8.1/firebase-firestore.js\\n        $*\\n        js https://www.gstatic.com/firebasejs/5.8.1/firebase-database.js\\n        js https://www.gstatic.com/firebasejs/5.8.1/firebase-messaging.js\\n        js https://www.gstatic.com/firebasejs/5.8.1/firebase-functions.js\\n        *$\\n        script\\n            module\\n                kind es6\\n                # Initialize Firebase\\n                $if opt.project === 'wizzifactory'\\n                    var config\\n                        {\\n                            @ apiKey \\\"${stfnbssl_env.firebaseApiKey}\\\"\\n                            @ authDomain \\\"wizzifactory.firebaseapp.com\\\"\\n                            @ databaseURL \\\"https://wizzifactory.firebaseio.com\\\"\\n                            @ projectId \\\"wizzifactory\\\"\\n                            # NOT YET storageBucket \\\"wizzifactory.appspot.com\\\"\\n                            @ storageBucket \\\"\\\" \\n                            @ messagingSenderId \\\"676985835415\\\"\\n                    _ firebase.initializeApp(config)\\n                    log 'firebase', firebase\\n                    var firestore = firebase.firestore();\\n\\n    $if opt.useAce\\n        $if isWizziStudio\\n            $if opt.production\\n                j( /static/lib/ace/src-min-noconflict/ace.js\\n            $else\\n                j( /static/lib/ace/src-noconflict/ace.js\\n        $else\\n            j( https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.2/ace.js\\n\\n\\t$if opt.useBootstrap\\n\\t\\tj( /static/lib/bootstrap/dist/js/bootstrap.min.js\\n    \\n    $if opt.useEventEmitter\\n        j( https://unpkg.com/eventemitter3@latest/umd/eventemitter3.min.js\\n\\n    $if opt.useCodemirror\\n        j( /static/lib/codemirror/lib/codemirror.js\\n        j( /static/lib/codemirror/mode/javascript/javascript.js\\n        j( /static/lib/codemirror/mode/xml/xml.js\\n        j( /static/lib/codemirror/theme/monokai.css\\n        j( /static/lib/codemirror/theme/twilight.css\\n\\n    $if opt.useDeepDiff\\n        $if isWizziStudio\\n            j( /static/lib/flitbit/deep-diff.min.js\\n        $else\\n            j( https://cdnjs.cloudflare.com/ajax/libs/deep-diff/0.3.3/deep-diff.min.js\\n\\n    $if opt.useKeycode\\n        $if isWizziStudio\\n            j( /static/lib/material-ui/keycode.min.2.2.0.js\\n        $else\\n            $$ j( https://cdn.jsdelivr.net/npm/keycode@2.2.0/index.min.js\\n            j( https://cdn.jsdelivr.net/npm/keycode.js\\n\\n    $if opt.useHighlight\\n        $if isWizziStudio\\n            j( https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js\\n            $$ j( /static/lib/highlight/highlight.pack.js\\n        $else\\t   \\n            j( https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js\\n\\n    $if opt.useInteractJs\\n        j( /static/lib/interactjs/interact.js\\n\\n    $if opt.useJarallax\\n        j( /static/lib/object-fit-images/ofi.min.js\\n        $if opt.production\\n            j( /static/lib/jarallax/jarallax.min.js\\n            j( /static/lib/jarallax/jarallax-video.min.js\\n            j( /static/lib/jarallax/jarallax-element.min.js\\n        $else\\n            j( /static/lib/jarallax/jarallax.js\\n            j( /static/lib/jarallax/jarallax-video.js\\n            j( /static/lib/jarallax/jarallax-element.js\\n\\n    $if opt.useJQuery || opt.useBootstrap\\n        $if opt.production\\n            j( /static/lib/jquery/jquery.min.js\\n        $else\\n            j( /static/lib/jquery/jquery.js\\n\\n    $if opt.useJsonFormatter\\n        $if isWizziStudio\\n            j( /static/lib/json-formatter/json-formatter.js\\n        $else\\t     \\n            j( https://cdn.jsdelivr.net/npm/json-formatter-js@2.2.1/dist/json-formatter.min.js\\n\\n\\t$if opt.useJss\\n        js /static/lib/jss/jss.js\\n\\t\\tjs /static/lib/jss/jss-preset-default.js\\n\\n    $if opt.useMarkdown\\n        j( https://cdn.jsdelivr.net/npm/marked/marked.min.js\\n\\n    $if opt.useMathJax\\n        j( https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\n\\n    $if opt.usePopper\\n        j( /static/lib/popper/popper.js\\n\\n\\t$if opt.usePrism\\n\\t\\t$if isWizziStudio\\n\\t\\t    js /static/lib/prism/prism.js\\n\\t\\t$else\\n            js https://cdnjs.cloudflare.com/ajax/libs/prism/1.6.0/prism.min.js\\t\\t\\n\\n    $if opt.usePubSub\\n        js /static/lib/pubsub/pubsub.js\\n\\n    $if useReact\\n        $if opt.production\\n            j( https://unpkg.com/prop-types@15.8.1/prop-types.min.js\\n        $else\\n            j( https://unpkg.com/prop-types@15.8.1/prop-types.js\\n\\n        $if opt.useReactLatest\\n            $if opt.production\\n                j( https://unpkg.com/react@18.2.0/umd/react.production.min.js\\n                j( https://unpkg.com/react-dom@latest/umd/react-dom.production.min.js\\n            $else\\n                j( https://unpkg.com/react@latest/umd/react.development.js\\n                j( https://unpkg.com/react-dom@latest/umd/react-dom.development.js\\n        $else\\n            $if opt.production\\n                j( https://unpkg.com/react@18.2.0/umd/react.production.min.js\\n                j( https://unpkg.com/react-dom@18.2.0/umd/react-dom.production.min.js\\n            $else\\n                j( https://unpkg.com/react@18.2.0/umd/react.development.js\\n                j( https://unpkg.com/react-dom@18.2.0/umd/react-dom.development.js\\n\\n        $if opt.useClassNames\\n            j( /static/lib/react/classnames.js\\n\\n        $if opt.useMaterialUI\\n            $if opt.materialUI.latest\\n                $if opt.production\\n                    j( https://unpkg.com/@mui/material@latest/umd/material-ui.production.min.js\\n                $else\\n                    j( https://unpkg.com/@mui/material@latest/umd/material-ui.development.js\\n            $else\\n                $if opt.production\\n                    $if opt.materialUI.v4\\n                        j( https://unpkg.com/@material-ui/core@4.12.4/umd/material-ui.development.min.js\\n                    $else\\n                        j( https://unpkg.com/@mui/material@5.8.7/umd/material-ui.production.min.js\\n                $else\\n                    $if opt.materialUI.v4\\n                        j( https://unpkg.com/@material-ui/core@4.12.4/umd/material-ui.development.js\\n                    $else\\n                        j( https://unpkg.com/@mui/material@5.8.7/umd/material-ui.development.js\\n        $if opt.useRouter\\n            $if opt.local || isWizziStudio\\n                j( /static/lib/react/react-router.min.4.3.1.js\\n            $else\\n                $if opt.useRouterLatest\\n                    j( https://unpkg.com/react-router-dom@latest/umd/react-router-dom.js\\n                $else\\n                    j( https://unpkg.com/react-router-dom@4.3.1/umd/react-router-dom.js\\n\\n        $if opt.useReactGrid\\n            j( /static/lib/react/react-grid-layout.min.js\\n\\n        $if opt.useDownshift\\n            $if opt.local || isWizziStudio\\n                $$ j( /static/lib/react/downshift.umd.min.2.0.10.js\\n                j( https://unpkg.com/downshift@6.1.7/dist/downshift.umd.js\\n            $else\\n                j( https://cdn.jsdelivr.net/npm/downshift@2.0.10/dist/downshift.umd.min.js\\n\\n\\n        $if opt.useGridLayout\\n            $if opt.useGridLayoutLatest\\n                j( https://unpkg.com/react-grid-layout@latest/dist/react-grid-layout.min.js\\n            $else\\n                j( https://unpkg.com/react-grid-layout@1.3.4/dist/react-grid-layout.min.js\\n\\n        $if opt.react.useStyledComponents\\n            js //unpkg.com/styled-components@4.0.1/dist/styled-components.min.js\\n        \\n        $if opt.react.useTransitionGroup\\n            js https://cdnjs.cloudflare.com/ajax/libs/react-transition-group/4.4.1/react-transition-group.min.js\\n\\n    \\n    $if opt.useRxJs\\n        j( /static/lib/rxjs/rxjs.umd.min.js\\n        \\n    $if opt.useScrollReveal\\n        j( /static/lib/scrollreveal/scrollreveal.js\\n\\n\\t$if opt.useSplit\\n\\t\\tjs /static/lib/controls/split.js\\n\\t\\n    $if opt.useSweetalert\\n\\t    j( https://cdn.jsdelivr.net/npm/sweetalert2@7.31.1/dist/sweetalert2.all.min.js\\n\\t\\n    $if opt.useUnderscore\\n        $if opt.production\\n            j( /static/lib/underscore/underscore.min.js\\n        $else\\n            j( /static/lib/underscore/underscore.js\\n    \\n    $if opt.useVue\\n\\t\\tj( https://unpkg.com/vue\\n\\n\\t$if opt.useWizzi\\n\\t    $if isWizziStudio\\n\\t\\t    j( /static/wizzi-play/scripts/wizzi.standalone.js\\n        $else\\t\\t  \\n            j( /scripts/wizzi.standalone.js\\t\\n\\n\\t$if opt.useMathJax\\n        script\\n            # \\n                _ MathJax.Hub.Config\\n                    {\\n                        @ tex2jax\\n                            {\\n                                @ inlineMath [['$','$'], ['\\\\\\\\(','\\\\\\\\)']]\\n                                @ processEscapes true\\n    \\n    $if useBabel\\n        j( https://unpkg.com/babel-standalone@latest/babel.min.js\\n\\n    $if opt.useMonaco\\n        $$ j( /static/lib/monaco-editor/min/vs/loader.js\\n        j( https://cdn.bootcdn.net/ajax/libs/monaco-editor/0.20.0/min/vs/loader.min.js\\n\\n    $if opt.mainJs && opt.mainJs.length > 0\\n        $if useBabel\\n            script\\n                src ${opt.mainJs}\\n                type text/babel         \\n        $else\\n            js ${opt.mainJs}\\n\\n\\n\"},\"t/html/layouts/site.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &opt\\n    $\\n        var ca = 'm-s p-s color-header font-l font-w-xxl';\\n        var ca_inverse = 'm-s p-s color-header-inverse bg-color-header-inverse font-l font-w-xxl';\\n        var ca2 = 'color-header font-x font-w-s';\\n        //\\n    head\\n        $if opt.title\\n            @title ${opt.title}\\n        meta\\n            charset utf-8\\n        meta\\n            name viewport\\n            content width=device-width, initial-scale=1\\n        link\\n            rel preconnect\\n            href https://fonts.googleapis.com\\n        link\\n            rel preconnect\\n            href https://fonts.gstatic.com\\n            crossorigin\\n        link\\n            @ rel \\\"stylesheet\\\"\\n            @ href \\\"https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.min.css\\\"\\n        css /ittf/css/main.css.ittf\\n        script\\n            module\\n                set window.__filename = 'browser'\\n                $if opt.isWizziStudio && !opt.useFirebase\\n                    var WizziBrowser\\n                        {\\n                            @ log\\n                                function\\n                                    var line\\n                                        _ Array.prototype.slice.call(arguments).map\\n                                            function\\n                                                param argument\\n                                                return\\n                                                    iif typeof argument === 'string'\\n                                                        then argument\\n                                                        else JSON.stringify(argument)\\n                                            ._ join\\n                                                @ '\\\\n '\\n                                    if arguments.length > 1 && arguments[arguments.length-1] === '-'\\n                                        set line += new Array(50).join('-')\\n                                    set document.querySelector('#wizzi-browser-log').textContent += line + '\\\\n'\\n                            @ clearLog\\n                                function\\n                                    set document.querySelector('#wizzi-browser-log').textContent = ''\\n                            @ setStatus\\n                                function\\n                                    param status\\n                                    set document.querySelector('#wizzi-browser-status').textContent = status\\n                            @ setContent\\n                                function\\n                                    param newContent\\n                                    var content = document.querySelector('#wizzi-browser-content')\\n                                    while content.hasChildNodes()\\n                                        _ content.removeChild(content.lastChild)\\n                                    _ content.appendChild(newContent)\\n        $hook head-styles-0\\n        $if opt.isWizziStudio && !opt.useFirebase\\n            @style\\n                css\\n                    # wizzi-browser-status\\n                        margin .5em 0\\n                        font-style italic\\n                    # wizzi-browser-log\\n                        margin .5em 0\\n                        white-space pre-wrap\\n                    # wizzi-browser-content\\n                        margin .5em 0\\n                    # status:empty, #log:empty, #content:empty\\n                        display none\\n        ./site-styles( &opt )\\n        $if opt.stickyNav\\n            style\\n                # ${opt.stickyNav}.sticky\\n                    position fixed\\n                    top 0\\n                . ${opt.stickyNav}OffsetMargin\\n                    padding-top ${opt.stickyNavOffset}px\\n                $if opt.stickyNavLogo\\n                    # ${opt.stickyNavLogo}.visible\\n                        display block\\n                    # ${opt.stickyNavLogo}.hidden\\n                        display none\\n        $hook head-styles\\n        $hook head-styles-2\\n        $hook head-styles-3\\n        $hook head-scripts\\n    body\\n        . flex-row space-between bg-color-header color-header align-items-center\\n            id __main_navbar\\n            . flex-row\\n                a( , /, ${ca2}\\n                    div\\n                        style width: 80px; margin-top: 5px; margin-left: 20px;\\n                        images/logo(#efefef, #434343)\\n            . flex-row\\n                $if locals.user\\n                    $if opt.section != 'Starter'\\n                        a( Starter, /ittf/site/starter.html.ittf, ${ca}\\n                    $else\\n                        . ${ca_inverse}\\n                            + Starter\\n                    $if opt.section != 'Lab'\\n                        a( Lab, /ittf/site/lab.html.ittf, ${ca}\\n                    $else\\n                        . ${ca_inverse}\\n                            + Lab\\n                    $if opt.section != 'Productions'\\n                        a( Productions, /ittf/site/productions.html.ittf, ${ca}\\n                    $else\\n                        . ${ca_inverse}\\n                            + Productions\\n                    $if opt.section != 'Project'\\n                        a( Project, /ittf/site/project.html.ittf, ${ca}\\n                    $else\\n                        . ${ca_inverse}\\n                            + Project\\n            . flex-row\\n                $if opt.section != 'Docs'\\n                    a( Docs, /ittf/site/docs/concepts/overview.html.ittf, ${ca}\\n                $else\\n                    . ${ca_inverse}\\n                        + Docs\\n                a( Github, https://github.com/stfnbssl/wizzi, ${ca}\\n            . flex-row m-r-x\\n                $if locals.user\\n                    a( Profile, /account/profile, ${ca}\\n                    a( Log Out, /auth/logout, ${ca}\\n                $else\\n                    a( Log In, /auth/login, ${ca}\\n        $hook\\n        $hook body-scripts-0\\n        $if opt.isWizziStudio && !opt.useFirebase\\n            div\\n                # wizzi-browser-status\\n                # wizzi-browser-log\\n                # wizzi-browser-content\\n        ./site-scripts( &opt )\\n        $if opt.stickyNav\\n            script\\n                let header = document.getElementById(\\\"__main_navbar\\\")\\n                let stickyBar = document.getElementById(\\\"${opt.stickyNav}\\\")\\n                $if opt.stickyNavLogo\\n                    let stickyLogo = document.getElementById(\\\"${opt.stickyNavLogo}\\\")\\n                let stickyPos = ${opt.stickyNavOffset}\\n                _ window.addEventListener\\n                    @ \\\"scroll\\\"\\n                    =>\\n                        param e\\n                        let scrollPos = window.scrollY\\n                        log 'pre sticki', stickyPos, scrollPos, scrollPos > stickyPos\\n                        if scrollPos > stickyPos\\n                            _ stickyBar.classList.add('sticky')\\n                            _ header.classList.add('${opt.stickyNav}OffsetMargin')\\n                            $if opt.stickyNavLogo\\n                                _ stickyLogo.classList.add('visible')\\n                                _ stickyLogo.classList.remove('hidden')\\n                            log 'sticki', scrollPos\\n                        else\\n                            _ stickyBar.classList.remove('sticky')\\n                            _ header.classList.remove('${opt.stickyNav}OffsetMargin')\\n                            $if opt.stickyNavLogo\\n                                _ stickyLogo.classList.remove('visible')\\n                                _ stickyLogo.classList.add('hidden')\\n        $hook body-scripts\\n        $hook body-scripts-2\\n        $hook body-scripts-3\\n        $if opt.useHighlight\\n            script\\n                _ document.addEventListener\\n                    @ 'DOMContentLoaded'\\n                    =>\\n                        param event\\n                        _ document.querySelectorAll\\n                            @ 'pre .hljs'\\n                            ._ forEach\\n                                =>\\n                                    param block\\n                                    _ hljs.highlightBlock(block)\\n\"},\"t/html/layouts/site-styles.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &opt\\n    $if opt.useBootstrap\\n        css /public/lib/bootstrap/dist/css/bootstrap.min.css\\n    $if opt.useCodemirror\\n        s( /public/lib/codemirror/lib/codemirror.css\\n        s( /public/lib/codemirror/theme/monokai.css\\n        s( /public/lib/codemirror/theme/twilight.css\\n    $if typeof(wzCtx.aspect) !== 'undefined'\\n        $if wzCtx.aspect.AnimateCss\\n            $if wzCtx.aspect.production\\n                s( /public/lib/animatecss/animate.min.css\\n            $else\\n                s( /public/lib/animatecss/animate.css\\n    $if opt.useFontAwesome\\n        $\\n            var fontAwesomeKey = 'eab461efef';\\n            //\\n        script\\n            src https://kit.fontawesome.com/${fontAwesomeKey}.js\\n            crossorigin anonymous\\n    $if opt.useFontRoboto\\n        s( https://fonts.googleapis.com/css?family=Roboto:300,400,500\\n    $if opt.useFontMaterialIcons\\n        s( https://fonts.googleapis.com/icon?family=Material+Icons\\n    $if opt.useGoogleFonts\\n        $foreach item in opt.googleFonts\\n            css https://fonts.googleapis.com/css?family=${item}\\n    $if opt.useHighlight\\n        $if opt.isWizziStudio\\n            s( /public/lib/highlight/styles/github.css\\n            s( /public/lib/highlightjs-master/dracula.css\\n        $else\\n            s( https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/styles/default.min.css\\n    $if opt.useJarallax\\n        s( /public/lib/jarallax/jarallax.css\\n    $if opt.useJsonFormatter\\n        $if opt.isWizziStudio\\n            s( https://cdnjs.cloudflare.com/ajax/libs/json-formatter/0.7.0/json-formatter.min.css\\n        $else\\n            s( https://cdnjs.cloudflare.com/ajax/libs/json-formatter/0.7.0/json-formatter.min.css\\n    $if opt.useMaterialUI\\n        s( https://fonts.googleapis.com/icon?family=Material+Icons\\n    $if opt.usePopper\\n        s( /public/lib/popper/main.css\\n    $if opt.usePrism\\n        $if opt.isWizziStudio\\n            css /public/lib/prism/prism.css\\n        $else\\n            css https://cdnjs.cloudflare.com/ajax/libs/prism/1.6.0/themes/prism.min.css\\n    $if opt.useSocial\\n        s( /public/lib/social/social-icons.css\\n    $if opt.useSweetalert\\n        s( https://cdn.jsdelivr.net/npm/sweetalert2@7.31.1/dist/sweetalert2.min.css\\n    $if opt.mainCss && opt.mainCss.length > 0\\n        s( ${opt.mainCss}\\n\"},\"t/html/models/docs/wzctx.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $global\\n        var wzCtx = {\\n            name: \\\"stfnbssl.github.io/wizzi\\\",\\n            version: \\\"0.7.1\\\",\\n            description: \\\"Wizzi github page\\\",\\n            author: \\\"Stefano Bassoli\\\",\\n            license: \\\"MIT\\\",\\n            Params: {\\n                title: \\\"Wizzi\\\",\\n                baseUrl: \\\"https://stfnbssl.github.io/wizzi\\\"\\n            },\\n            Section: {\\n                items: [\\n                    {\\n                        title: \\\"Concepts\\\",\\n                        url: \\\"/ittf/site/docs/concepts/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"How to\\\",\\n                        url: \\\"/ittf/site/docs/howtos/getstarted.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Sample code\\\",\\n                        url: \\\"/ittf/site/docs/samplecode/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Geeky\\\",\\n                        url: \\\"/ittf/site/docs/geeky/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Cheatsheets\\\",\\n                        url: \\\"/docs/cheatsheet/html\\\"\\n                    },\\n                    {\\n                        title: \\\"Play\\\",\\n                        url: \\\"/ittf/site/docs/play/index.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Docs: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Ittf Documents\\\",\\n                        url: \\\"./ittfdocuments.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model Instances\\\",\\n                        url: \\\"./wizzimodelinstances.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi CLI\\\",\\n                        url: \\\"./wizzicli.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            HowTos: {\\n                items: [\\n                    {\\n                        title: \\\"Get started\\\",\\n                        url: \\\"./getstarted.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            SampleCode: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Geeky: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi CLI\\\",\\n                        url: \\\"./wizzicli.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Starter: {\\n                \\\"items\\\": [\\n                    {\\n                        title: \\\"wizzi-starter-wizzi-plugin\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-wizzi-plugin\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-webpack-react\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-webpack-react\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-mern\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-mern\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-nextjs\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-nextjs\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-gatsby\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-gatsby\\\"\\n                    }\\n                ]\\n            },\\n            \\\"Plugin\\\": {\\n                items: [\\n                    {\\n                        title: \\\"wizzi-js\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-js/dist\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-web\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-web/dist\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-lab\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-lab/dist\\\"\\n                    }\\n                ]\\n            },\\n            Colors: {\\n                \\\"bg_0\\\": \\\"#333\\\",\\n                \\\"bg_f_0\\\": \\\"#000\\\",\\n                \\\"c_0\\\": \\\"#fff\\\",\\n                \\\"bg_dark\\\": \\\"#333\\\",\\n                \\\"bg_dark_medium\\\": \\\"#444\\\",\\n                \\\"c_dark\\\": \\\"#ddd\\\",\\n                \\\"c_dark_medium\\\": \\\"#bbb\\\",\\n                \\\"h3_c_dark\\\": \\\"#fc0\\\"\\n            },\\n            Fonts: {\\n                \\\"useMaterialIcons\\\": true,\\n                \\\"materialIcons\\\": {\\n                    \\\"baseUrl\\\": \\\"https://stfnbssl.github.io/wizzi/fonts\\\",\\n                    \\\"fontWeight\\\": \\\"400\\\",\\n                    \\\"size\\\": \\\"24px\\\"\\n                }\\n            }\\n        }\\n        var mpage = {\\n            Colors: {\\n                background: \\\"#ffffff\\\",\\n                scheme1Fade90: \\\"whiteFade-90,rgba(255,255,255,0.9)\\\",\\n                themeBack: \\\"#ffffff\\\",\\n                primary: \\\"#BDF3EE\\\",\\n                primaryDark: \\\"#122944\\\",\\n                primary30: \\\"#BDF3EE\\\",\\n                gray70: \\\"grey-70,#222B31\\\",\\n                grad1: \\\"#81B6CF\\\",\\n                grad2: \\\"#222B31\\\"\\n            }\\n        }\\n\"},\"t/html/layouts/basic.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params &opt\\r\\n    $\\r\\n        //\\r\\n    head\\r\\n        $if opt.title\\r\\n            @title ${opt.title}\\r\\n        meta\\r\\n            charset utf-8\\r\\n        meta\\r\\n            name viewport\\r\\n            content width=device-width, initial-scale=1\\r\\n        link\\r\\n            rel preconnect\\r\\n            href https://fonts.googleapis.com\\r\\n        link\\r\\n            rel preconnect\\r\\n            href https://fonts.gstatic.com\\r\\n            crossorigin\\r\\n        link\\r\\n            @ rel \\\"stylesheet\\\"\\r\\n            @ href \\\"https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.min.css\\\"\\r\\n        script\\r\\n            module\\r\\n                set window.__filename = 'browser'\\r\\n                $if opt.useWizziBrowser\\r\\n                    var WizziBrowser\\r\\n                        {\\r\\n                            @ log\\r\\n                                function\\r\\n                                    var line\\r\\n                                        _ Array.prototype.slice.call(arguments).map\\r\\n                                            function\\r\\n                                                param argument\\r\\n                                                return\\r\\n                                                    iif typeof argument === 'string'\\r\\n                                                        then argument\\r\\n                                                        else JSON.stringify(argument)\\r\\n                                            ._ join\\r\\n                                                @ '\\\\n '\\r\\n                                    if arguments.length > 1 && arguments[arguments.length-1] === '-'\\r\\n                                        set line += new Array(50).join('-')\\r\\n                                    set document.querySelector('#wizzi-browser-log').textContent += line + '\\\\n'\\r\\n                            @ clearLog\\r\\n                                function\\r\\n                                    set document.querySelector('#wizzi-browser-log').textContent = ''\\r\\n                            @ setStatus\\r\\n                                function\\r\\n                                    param status\\r\\n                                    set document.querySelector('#wizzi-browser-status').textContent = status\\r\\n                            @ setContent\\r\\n                                function\\r\\n                                    param newContent\\r\\n                                    var content = document.querySelector('#wizzi-browser-content')\\r\\n                                    while content.hasChildNodes()\\r\\n                                        _ content.removeChild(content.lastChild)\\r\\n                                    _ content.appendChild(newContent)\\r\\n        $hook head-styles-0\\r\\n        $if opt.useWizziBrowser\\r\\n            @style\\r\\n                css\\r\\n                    # wizzi-browser-status\\r\\n                        margin .5em 0\\r\\n                        font-style italic\\r\\n                    # wizzi-browser-log\\r\\n                        margin .5em 0\\r\\n                        white-space pre-wrap\\r\\n                    # wizzi-browser-content\\r\\n                        margin .5em 0\\r\\n                    # status:empty, #log:empty, #content:empty\\r\\n                        display none\\r\\n        ./site-styles( &opt )\\r\\n        $if opt.stickyNav\\r\\n            style\\r\\n                # ${opt.stickyNav}.sticky\\r\\n                    position fixed\\r\\n                    top 0\\r\\n                . ${opt.stickyNav}OffsetMargin\\r\\n                    padding-top ${opt.stickyNavOffset}px\\r\\n                $if opt.stickyNavLogo\\r\\n                    # ${opt.stickyNavLogo}.visible\\r\\n                        display block\\r\\n                    # ${opt.stickyNavLogo}.hidden\\r\\n                        display none\\r\\n        $hook head-styles\\r\\n        $hook head-styles-1\\r\\n        $hook head-scripts\\r\\n    body\\r\\n        $hook body-scripts-0\\r\\n        $if opt.useWizziBrowser\\r\\n            div\\r\\n                # wizzi-browser-status\\r\\n                # wizzi-browser-log\\r\\n                # wizzi-browser-content\\r\\n        ./site-scripts( &opt )\\r\\n        $if opt.stickyNav\\r\\n            script\\r\\n                let header = document.getElementById(\\\"__main_navbar\\\")\\r\\n                let stickyBar = document.getElementById(\\\"${opt.stickyNav}\\\")\\r\\n                $if opt.stickyNavLogo\\r\\n                    let stickyLogo = document.getElementById(\\\"${opt.stickyNavLogo}\\\")\\r\\n                let stickyPos = ${opt.stickyNavOffset}\\r\\n                _ window.addEventListener\\r\\n                    @ \\\"scroll\\\"\\r\\n                    =>\\r\\n                        param e\\r\\n                        let scrollPos = window.scrollY\\r\\n                        log 'pre sticki', stickyPos, scrollPos, scrollPos > stickyPos\\r\\n                        if scrollPos > stickyPos\\r\\n                            _ stickyBar.classList.add('sticky')\\r\\n                            _ header.classList.add('${opt.stickyNav}OffsetMargin')\\r\\n                            $if opt.stickyNavLogo\\r\\n                                _ stickyLogo.classList.add('visible')\\r\\n                                _ stickyLogo.classList.remove('hidden')\\r\\n                            log 'sticki', scrollPos\\r\\n                        else\\r\\n                            _ stickyBar.classList.remove('sticky')\\r\\n                            _ header.classList.remove('${opt.stickyNav}OffsetMargin')\\r\\n                            $if opt.stickyNavLogo\\r\\n                                _ stickyLogo.classList.remove('visible')\\r\\n                                _ stickyLogo.classList.add('hidden')\\r\\n        $hook body-scripts\\r\\n        $hook body-scripts-1\\r\\n        $if opt.useHighlight\\r\\n            script\\r\\n                _ document.addEventListener\\r\\n                    @ 'DOMContentLoaded'\\r\\n                    =>\\r\\n                        param event\\r\\n                        _ document.querySelectorAll\\r\\n                            @ 'pre .hljs'\\r\\n                            ._ forEach\\r\\n                                =>\\r\\n                                    param block\\r\\n                                    _ hljs.highlightBlock(block)\\r\\n\"},\"t/a_cb_no_err.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        $hook\\n\"},\"t/j.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params url\\n    script\\n        src ${url}\\n        crossorigin anonymous\\n\"},\"t/s.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params url\\n    link\\n        href ${url}\\n        rel stylesheet\\n\"},\"t/js_wz.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params url\\n    $if isWizziStudio\\n        script\\n            src ${url}.ittf\\n            crossorigin anonymous\\n    $else\\n        script\\n            src ${url}\\n            crossorigin anonymous\\n\"},\"t/r_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|@@null\\n    return\\n        _ callback\\n            @ null\\n            $if result !== null\\n                @ ${result}\\n            $hook\\n\"},\"t/f_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        if err\\n            return\\n                _ callback\\n                    @ err\\n        $hook\\n\"},\"t/f_cb_throw.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        if err\\n            log 'err', err\\n            throw err\\n        $hook\\n\"},\"t/f_cb_no_err.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        $hook\\n\"},\"t/css_wz.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params url\\n    $if isWizziStudio\\n        link\\n            href ${url}.ittf\\n            rel stylesheet\\n    $else\\n        link\\n            href ${url}\\n            rel stylesheet\\n\"},\"t/a.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params text, href|#, ca|@@null\\n    a ${text}\\n        href ${href}\\n        $if ca\\n            class ${ca}\\n        $hook\\n\"},\"t/a_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        if err\\n            return\\n                _ callback\\n                    @ err\\n        $hook\\n\"},\"t/a_cb_throw.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        if err\\n            log 'err', err\\n            throw err\\n        $hook\\n\"},\"t/html/forms/inject_styles.js.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    function inject_form_styles\\r\\n\\r\\n        _ styles.InjectCss.addText\\r\\n            {\\r\\n                # ==========================================================================\\r\\n                # FORM\\r\\n                # ==========================================================================\\r\\n                { \\\".form-card\\\"\\r\\n                    @ \\\"padding\\\" \\\"30px\\\"\\r\\n                    @ border \\\"1px solid #ebebeb\\\"\\r\\n                { \\\".form-title\\\"\\r\\n                    @ \\\"font-size\\\" \\\"30px\\\"\\r\\n                    @ \\\"font-weight\\\" \\\"700\\\"\\r\\n                    @ \\\"margin-bottom\\\" \\\"20px\\\"\\r\\n                # ==========================================================================\\r\\n                # Control\\r\\n                # ==========================================================================\\r\\n                { \\\".control-group\\\"\\r\\n                    @ \\\"width\\\" \\\"100%\\\"\\r\\n                    @ \\\"margin-bottom\\\" \\\"5px\\\"\\r\\n                { \\\".single-control\\\"\\r\\n                    @ \\\"width\\\" \\\"100%\\\"\\r\\n                    @ \\\"margin-bottom\\\" \\\"5px\\\"\\r\\n                { \\\".control-label\\\"\\r\\n                    @ \\\"font-weight\\\" \\\"bold\\\"\\r\\n                    @ \\\"margin-bottom\\\" \\\"7px\\\"\\r\\n                    @ \\\"text-transform\\\" \\\"uppercase\\\"\\r\\n                { \\\".control-error\\\"\\r\\n                    @ \\\"font-size\\\" \\\"12px\\\"\\r\\n                    @ \\\"color\\\" \\\"red\\\"\\r\\n                # ==========================================================================\\r\\n                # Label\\r\\n                # ==========================================================================\\r\\n                { \\\"label.required\\\"\\r\\n                    @ \\\"position\\\" \\\"relative\\\"\\r\\n                { \\\"label.required:after\\\"\\r\\n                    @ \\\"content\\\" \\\"'*'\\\"\\r\\n                    @ \\\"margin-left\\\" \\\"2px\\\"\\r\\n                    @ color \\\"#b90000\\\"\\r\\n                # ==========================================================================\\r\\n                # GRID\\r\\n                # ==========================================================================\\r\\n                { \\\".grid-row-2\\\"\\r\\n                    @ display \\\"grid\\\"\\r\\n                    @ \\\"grid-template-columns\\\" \\\"1fr 1fr\\\"\\r\\n                { \\\".grid-row-3\\\"\\r\\n                    @ display \\\"grid\\\"\\r\\n                    @ \\\"grid-template-columns\\\" \\\"1fr 1fr 1fr\\\"\\r\\n                { \\\".input-group\\\"\\r\\n                    @ position \\\"relative\\\"\\r\\n                    @ \\\"width\\\" \\\"100%\\\"\\r\\n                    $if md.hasBorderedControls\\r\\n                        @ \\\"margin-bottom\\\" \\\"2px\\\"\\r\\n                        @ \\\"padding-bottom\\\" \\\"12px\\\"\\r\\n                    $else\\r\\n                        @ \\\"margin-bottom\\\" \\\"12px\\\"\\r\\n                        @ \\\"padding-bottom\\\" \\\"22px\\\"\\r\\n                        @ \\\"border-bottom\\\" \\\"1px solid #e5e5e5\\\"\\r\\n                # ==========================================================================\\r\\n                # BUTTON\\r\\n                # ==========================================================================\\r\\n                { \\\".btn\\\"\\r\\n                    @ \\\"line-height\\\" \\\"40px\\\"\\r\\n                    @ display \\\"inline-block\\\"\\r\\n                    @ padding \\\"0 25px\\\"\\r\\n                    @ cursor \\\"pointer\\\"\\r\\n                    @ color \\\"#fff\\\"\\r\\n                    @ \\\"font-family\\\" '\\\"Roboto\\\", \\\"Arial\\\", \\\"Helvetica Neue\\\", sans-serif'\\r\\n                    @ \\\"-webkit-transition\\\" \\\"all 0.4s ease\\\"\\r\\n                    @ \\\"-o-transition\\\" \\\"all 0.4s ease\\\"\\r\\n                    @ \\\"-moz-transition\\\" \\\"all 0.4s ease\\\"\\r\\n                    @ \\\"transition\\\" \\\"all 0.4s ease\\\"\\r\\n                    @ \\\"font-size\\\" \\\"14px\\\"\\r\\n                    @ \\\"font-weight\\\" \\\"700\\\"\\r\\n                { \\\".btn--radius\\\"\\r\\n                    @ \\\"-webkit-border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"-moz-border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"border-radius\\\" \\\"3px\\\"\\r\\n                { \\\".btn--green\\\"\\r\\n                    @ background \\\"#57b846\\\"\\r\\n                { \\\".btn--green:hover\\\"\\r\\n                    @ background \\\"#4dae3c\\\"\\r\\n                # ==========================================================================\\r\\n                # Input\\r\\n                # ==========================================================================\\r\\n                { input\\r\\n                    $if md.hasBorderedControls\\r\\n                        @ \\\"box-sizing\\\" \\\"border-box\\\"\\r\\n                        @ border \\\"1px solid #ebebeb\\\"\\r\\n                        @ padding \\\"14px 20px\\\"\\r\\n                        @ \\\"border-radius\\\" \\\"5px\\\"\\r\\n                        @ \\\"-moz-border-radius\\\" \\\"5px\\\"\\r\\n                        @ \\\"-webkit-border-radius\\\" \\\"5px\\\"\\r\\n                        @ \\\"-o-border-radius\\\" \\\"5px\\\"\\r\\n                        @ \\\"-ms-border-radius\\\" \\\"5px\\\"\\r\\n                    $else\\r\\n                        @ outline \\\"none\\\"\\r\\n                        @ margin 0\\r\\n                        @ border \\\"none\\\"\\r\\n                        @ \\\"-webkit-box-shadow\\\" \\\"none\\\"\\r\\n                        @ \\\"-moz-box-shadow\\\" \\\"none\\\"\\r\\n                        @ \\\"box-shadow\\\" \\\"none\\\"\\r\\n                    $$ @ \\\"width\\\" \\\"100%\\\"\\r\\n                    @ \\\"font-size\\\" \\\"14px\\\"\\r\\n                    @ \\\"font-family\\\" \\\"inherit\\\"\\r\\n                $if md.hasBorderedControls\\r\\n                    { \\\"input:focus\\\"\\r\\n                        @ border \\\"1px solid #009e00\\\"\\r\\n                    { \\\"input.error\\\"\\r\\n                        @ border \\\"1px solid #c70000\\\"\\r\\n                { \\\".input-icon\\\"\\r\\n                    @ position \\\"absolute\\\"\\r\\n                    @ \\\"font-size\\\" \\\"18px\\\"\\r\\n                    @ \\\"color\\\" \\\"#ccc\\\"\\r\\n                    @ \\\"right\\\" \\\"8px\\\"\\r\\n                    @ \\\"top\\\" \\\"50%\\\"\\r\\n                    @ \\\"-webkit-transform\\\" \\\"translateY(-50%)\\\"\\r\\n                    @ \\\"-moz-transform\\\" \\\"translateY(-50%)\\\"\\r\\n                    @ \\\"-ms-transform\\\" \\\"translateY(-50%)\\\"\\r\\n                    @ \\\"-o-transform\\\" \\\"translateY(-50%)\\\"\\r\\n                    @ \\\"transform\\\" \\\"translateY(-50%)\\\"\\r\\n                    @ \\\"cursor\\\" \\\"pointer\\\"\\r\\n                { \\\".input--style-2\\\"\\r\\n                    $if !md.hasBorderedControls\\r\\n                        @ padding \\\"9px 0\\\"\\r\\n                    @ color \\\"#666\\\"\\r\\n                    @ \\\"font-size\\\" \\\"16px\\\"\\r\\n                    @ \\\"font-weight\\\" \\\"500\\\"\\r\\n                { \\\".input--style-2::-webkit-input-placeholder\\\"\\r\\n                    $$ /* WebKit, Blink, Edge */\\r\\n                    @ color \\\"#808080\\\"\\r\\n                    @ opacity .4\\r\\n                { \\\".input--style-2:-moz-placeholder\\\"\\r\\n                    $$ /* Mozilla Firefox 4 to 18 */\\r\\n                    @ color \\\"#808080\\\"\\r\\n                    @ opacity .4\\r\\n                { \\\".input--style-2::-moz-placeholder\\\"\\r\\n                    $$ /* Mozilla Firefox 19+ */\\r\\n                    @ color \\\"#808080\\\"\\r\\n                    @ opacity .4\\r\\n                { \\\".input--style-2:-ms-input-placeholder\\\"\\r\\n                    $$ /* Internet Explorer 10-11 */\\r\\n                    @ color \\\"#808080\\\"\\r\\n                    @ opacity .4\\r\\n                { \\\".input--style-2:-ms-input-placeholder\\\"\\r\\n                    $$ /* Microsoft Edge */\\r\\n                    @ color \\\"#808080\\\"\\r\\n                    @ opacity .4\\r\\n                # ==========================================================================\\r\\n                # DATE PICKER\\r\\n                # ==========================================================================\\r\\n                { \\\"td.active\\\"\\r\\n                    @ \\\"background-color\\\" \\\"#2c6ed5\\\"\\r\\n                { 'input[type=\\\"date\\\" i]'\\r\\n                    @ padding \\\"14px\\\"\\r\\n                { \\\".table-condensed td, .table-condensed th\\\"\\r\\n                    @ \\\"font-size\\\" \\\"14px\\\"\\r\\n                    @ \\\"font-family\\\" '\\\"Roboto\\\", \\\"Arial\\\", \\\"Helvetica Neue\\\", sans-serif'\\r\\n                    @ \\\"font-weight\\\" \\\"400\\\"\\r\\n                { \\\".daterangepicker td\\\"\\r\\n                    @ width \\\"40px\\\"\\r\\n                    @ height \\\"30px\\\"\\r\\n                { \\\".daterangepicker\\\"\\r\\n                    @ border \\\"none\\\"\\r\\n                    @ \\\"-webkit-box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ \\\"-moz-box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ \\\"box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ display \\\"none\\\"\\r\\n                    @ border \\\"1px solid #e0e0e0\\\"\\r\\n                    @ \\\"margin-top\\\" \\\"5px\\\"\\r\\n                { \\\".daterangepicker::after, .daterangepicker::before\\\"\\r\\n                    @ display \\\"none\\\"\\r\\n                { \\\".daterangepicker thead tr th\\\"\\r\\n                    @ padding \\\"10px 0\\\"\\r\\n                { \\\".daterangepicker .table-condensed th select\\\"\\r\\n                    @ border \\\"1px solid #ccc\\\"\\r\\n                    @ \\\"-webkit-border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"-moz-border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"font-size\\\" \\\"14px\\\"\\r\\n                    @ \\\"padding\\\" \\\"5px\\\"\\r\\n                    @ \\\"outline\\\" \\\"none\\\"\\r\\n                # =========================================================================\\r\\n                # SELECT2\\r\\n                # =========================================================================\\r\\n                { \\\".select--no-search .select2-search\\\"\\r\\n                    @ display \\\"none !important\\\"\\r\\n                { \\\".rs-select2 .select2-container\\\"\\r\\n                    @ width \\\"100% !important\\\"\\r\\n                    $if md.hasBorderedControls\\r\\n                        @ border \\\"1px solid #ebebeb\\\"\\r\\n                    $else\\r\\n                        @ outline \\\"none\\\"\\r\\n                { \\\".rs-select2 .select2-container .select2-selection--single\\\"\\r\\n                    @ outline \\\"none\\\"\\r\\n                    @ border \\\"none\\\"\\r\\n                    @ height \\\"36px\\\"\\r\\n                { \\\".rs-select2 .select2-container .select2-selection--single .select2-selection__rendered\\\"\\r\\n                    @ \\\"line-height\\\" \\\"36px\\\"\\r\\n                    @ \\\"padding-left\\\" 0\\r\\n                    @ color \\\"#808080\\\"\\r\\n                    @ \\\"font-size\\\" \\\"16px\\\"\\r\\n                    @ \\\"font-family\\\" \\\"inherit\\\"\\r\\n                    @ \\\"font-weight\\\" 500\\r\\n                { \\\".rs-select2 .select2-container .select2-selection--single .select2-selection__arrow\\\"\\r\\n                    @ height \\\"34px\\\"\\r\\n                    @ right  \\\"4px\\\"\\r\\n                    @ display \\\"-webkit-box\\\"\\r\\n                    @ display \\\"-webkit-flex\\\"\\r\\n                    @ display \\\"-moz-box\\\"\\r\\n                    @ display \\\"-ms-flexbox\\\"\\r\\n                    @ display \\\"flex\\\"\\r\\n                    @ \\\"-webkit-box-pack\\\" \\\"center\\\"\\r\\n                    @ \\\"-webkit-justify-content\\\" \\\"center\\\"\\r\\n                    @ \\\"-moz-box-pack\\\" \\\"center\\\"\\r\\n                    @ \\\"-ms-flex-pack\\\" \\\"center\\\"\\r\\n                    @ \\\"justify-content\\\" \\\"center\\\"\\r\\n                    @ \\\"-webkit-box-align\\\" \\\"center\\\"\\r\\n                    @ \\\"-webkit-align-items\\\" \\\"center\\\"\\r\\n                    @ \\\"-moz-box-align\\\" \\\"center\\\"\\r\\n                    @ \\\"-ms-flex-align\\\" \\\"center\\\"\\r\\n                    @ \\\"align-items\\\" \\\"center\\\"\\r\\n                { \\\".rs-select2 .select2-container .select2-selection--single .select2-selection__arrow b\\\"\\r\\n                    @ \\\"display\\\" \\\"none\\\"\\r\\n                { \\\".rs-select2 .select2-container .select2-selection--single .select2-selection__arrow:after\\\"\\r\\n                    @ \\\"font-family\\\" \\\"Material-Design-Iconic-Font\\\"\\r\\n                    @ content \\\"'\\\\f2f9'\\\"\\r\\n                    @ \\\"font-size\\\" \\\"18px\\\"\\r\\n                    @ color \\\"#ccc\\\"\\r\\n                    @ \\\"-webkit-transition\\\" \\\"all 0.4s ease\\\"\\r\\n                    @ \\\"-o-transition\\\" \\\"all 0.4s ease\\\"\\r\\n                    @ \\\"-moz-transition\\\" \\\"all 0.4s ease\\\"\\r\\n                    @ transition \\\"all 0.4s ease\\\"\\r\\n                { \\\".rs-select2 .select2-container.select2-container--open .select2-selection--single .select2-selection__arrow::after\\\"\\r\\n                    @ \\\"-webkit-transform\\\" \\\"rotate(-180deg)\\\"\\r\\n                    @ \\\"-moz-transform\\\" \\\"rotate(-180deg)\\\"\\r\\n                    @ \\\"-ms-transform\\\" \\\"rotate(-180deg)\\\"\\r\\n                    @ \\\"-o-transform\\\" \\\"rotate(-180deg)\\\"\\r\\n                    @ transform \\\"rotate(-180deg)\\\"\\r\\n                { \\\".select2-container--open .select2-dropdown--below\\\"\\r\\n                    @ border \\\"none\\\"\\r\\n                    @ \\\"-webkit-border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"-moz-border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"-webkit-box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ \\\"-moz-box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ \\\"box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ border \\\"1px solid #e0e0e0\\\"\\r\\n                    @ \\\"margin-top\\\" \\\"5px\\\"\\r\\n                    @ overflow \\\"hidden\\\"\\r\\n                # ==========================================================================\\r\\n                # CHECKBOX\\r\\n                # ==========================================================================\\r\\n                { \\\".checkbox-item\\\"\\r\\n                    @ \\\"padding-left\\\" \\\"30px\\\"\\r\\n                    @ \\\"padding-bottom\\\" \\\"10px\\\"\\r\\n                    @ \\\"padding-top\\\" \\\"12px\\\"\\r\\n                # ==========================================================================\\r\\n                # RADIO\\r\\n                # ==========================================================================\\r\\n                { \\\".radio-group\\\"\\r\\n                    @ display \\\"flex\\\"\\r\\n                    @ \\\"padding-bottom\\\" \\\"10px\\\"\\r\\n                    @ \\\"padding-top\\\" \\\"12px\\\"\\r\\n                { \\\".radio-item\\\"\\r\\n                    @ position \\\"relative\\\"\\r\\n                    @ display \\\"grid\\\"\\r\\n                    @ \\\"grid-template-columns\\\" \\\"1fr 3fr\\\"\\r\\n                    @ \\\"margin-right\\\" \\\"30px\\\"\\r\\n                { \\\".radio-item label\\\"\\r\\n                    @ \\\"font-weight\\\" 500\\r\\n                    @ \\\"padding-left\\\" \\\"10px\\\"\\r\\n                    @ position \\\"relative\\\"\\r\\n                    @ \\\"z-index\\\" 9\\r\\n                    @ display \\\"block\\\"\\r\\n                    @ cursor \\\"pointer\\\"\\r\\n                    @ \\\"text-transform\\\" \\\"none\\\"\\r\\n                $*\\r\\n                { \\\"input[type=radio]\\\"\\r\\n                    @ position \\\"absolute\\\"\\r\\n                    @ appearance \\\"radio !important\\\"\\r\\n                    @ \\\"-moz-appearance\\\" \\\"radio !important\\\"\\r\\n                    @ \\\"-webkit-appearance\\\" \\\"radio !important\\\"\\r\\n                    @ \\\"-o-appearance\\\" \\\"radio !important\\\"\\r\\n                    @ \\\"-ms-appearance\\\" \\\"radio !important\\\"\\r\\n                *$\\r\\n                { \\\".form-radio input\\\"\\r\\n                    @ width \\\"auto\\\"\\r\\n                    @ display \\\"inline-block\\\"\\r\\n                # ==========================================================================\\r\\n                # SLIDER\\r\\n                # ========================================================================== \\r\\n                { \\\".slider-group\\\"\\r\\n                    @ position \\\"relative\\\"\\r\\n                    @ \\\"margin-top\\\" \\\"22px\\\"\\r\\n                { \\\".slider-item\\\"\\r\\n                    @ height \\\"5px\\\"\\r\\n                    @ border \\\"none\\\"\\r\\n                    @ \\\"box-shadow\\\" \\\"none\\\"\\r\\n                    @ \\\"-moz-box-shadow\\\" \\\"none\\\"\\r\\n                    @ \\\"-webkit-box-shadow\\\" \\\"none\\\"\\r\\n                    @ \\\"-o-box-shadow\\\" \\\"none\\\"\\r\\n                    @ \\\"-ms-box-shadow\\\" \\\"none\\\"\\r\\n                    @ background \\\"#f8f8f8\\\"\\r\\n                    @ \\\"border-radius\\\" \\\"2.5px\\\"\\r\\n                    @ \\\"-moz-border-radius\\\" \\\"2.5px\\\"\\r\\n                    @ \\\"-webkit-border-radius\\\" \\\"2.5px\\\"\\r\\n                    @ \\\"-o-border-radius\\\" \\\"2.5px\\\"\\r\\n                    @ \\\"-ms-border-radius\\\" \\\"2.5px\\\"\\r\\n                { \\\".slider-item .noUi-connect\\\"\\r\\n                    @ background \\\"#329e5e\\\"\\r\\n                { \\\".slider-item .noUi-handle\\\"\\r\\n                    @ width \\\"100px\\\"\\r\\n                    @ height \\\"30px\\\"\\r\\n                    @ top \\\"-12px\\\"\\r\\n                    @ background \\\"#329e5e\\\"\\r\\n                    @ \\\"box-shadow\\\" \\\"0px 3px 2.85px 0.15px rgba(0, 0, 0, 0.1)\\\"\\r\\n                    @ \\\"-moz-box-shadow\\\" \\\"0px 3px 2.85px 0.15px rgba(0, 0, 0, 0.1)\\\"\\r\\n                    @ \\\"-webkit-box-shadow\\\" \\\"0px 3px 2.85px 0.15px rgba(0, 0, 0, 0.1)\\\"\\r\\n                    @ \\\"-o-box-shadow\\\" \\\"0px 3px 2.85px 0.15px rgba(0, 0, 0, 0.1)\\\"\\r\\n                    @ \\\"-ms-box-shadow\\\" \\\"0px 3px 2.85px 0.15px rgba(0, 0, 0, 0.1)\\\"\\r\\n                    @ \\\"border-radius\\\" \\\"5px\\\"\\r\\n                    @ \\\"-moz-border-radius\\\" \\\"5px\\\"\\r\\n                    @ \\\"-webkit-border-radius\\\" \\\"5px\\\"\\r\\n                    @ \\\"-o-border-radius\\\" \\\"5px\\\"\\r\\n                    @ \\\"-ms-border-radius\\\" \\\"5px\\\"\\r\\n                    @ outline \\\"none\\\"\\r\\n                    @ border \\\"none\\\"\\r\\n                    @ right \\\"-50px\\\"\\r\\n                { \\\".slider-item .noUi-handle:after, .slider-item .noUi-handle:before\\\"\\r\\n                    @ background \\\"transparent\\\"\\r\\n                    @ height \\\"0px\\\"\\r\\n                    @ width \\\"20px\\\"\\r\\n                    @ top \\\"-2px\\\"\\r\\n                    @ \\\"font-size\\\" \\\"18px\\\"\\r\\n                    @ outline \\\"none\\\"\\r\\n                { \\\".slider-item .noUi-handle:before\\\"\\r\\n                    @ \\\"font-family\\\" \\\"Material-Design-Iconic-Font\\\"\\r\\n                    @ color \\\"#fff\\\"\\r\\n                    @ content \\\"'\\\\f2fa'\\\"\\r\\n                    @ left \\\"10px\\\"\\r\\n                { \\\".slider-item .noUi-handle:after\\\"\\r\\n                    @ \\\"font-family\\\" \\\"'Material-Design-Iconic-Font'\\\"\\r\\n                    @ color \\\"#fff\\\"\\r\\n                    @ content \\\"'\\\\f2fb'\\\"\\r\\n                    @ left \\\"auto\\\"\\r\\n                    @ right \\\"-5px\\\"\\r\\n                { \\\".slider-item .noUi-handle .noUi-tooltip\\\"\\r\\n                    @ bottom \\\"2px\\\"\\r\\n                    @ border \\\"none\\\"\\r\\n                    @ background \\\"transparent\\\"\\r\\n                    @ \\\"font-weight\\\" \\\"bold\\\"\\r\\n                    @ color \\\"#fff\\\"\\r\\n                    @ padding \\\"0px\\\"\\r\\n                { \\\".donate-us\\\"\\r\\n                    @ \\\"margin-bottom\\\" \\\"93px\\\"\\r\\n                    @ \\\"margin-top\\\" \\\"30px\\\"\\r\\n                { \\\".donate-us label\\\"\\r\\n                    @ \\\"margin-bottom\\\" \\\"32px\\\"\\r\\n                { \\\".price_slider\\\"\\r\\n                    @ position \\\"relative\\\"\\r\\n                { \\\".donate-value\\\"\\r\\n                    @ position \\\"absolute\\\"\\r\\n                    @ top \\\"-9px\\\"\\r\\n                    @ left \\\"50%\\\"\\r\\n                    @ \\\"z-index\\\" \\\"99\\\"\\r\\n                    @ transform \\\"translateX(-50%)\\\"\\r\\n                    @ \\\"-moz-transform\\\" \\\"translateX(-50%)\\\"\\r\\n                    @ \\\"-webkit-transform\\\" \\\"translateX(-50%)\\\"\\r\\n                    @ \\\"-o-transform\\\" \\\"translateX(-50%)\\\"\\r\\n                    @ \\\"-ms-transform\\\" \\\"translateX(-50%)\\\"\\r\\n                # ==========================================================================\\r\\n                # CODEMIRROR\\r\\n                # ========================================================================== \\r\\n                { \\\".CodeMirror\\\"\\r\\n                    @ \\\"font-size\\\" \\\"15px\\\"\\r\\n                    $$ @ width \\\"30rem\\\"\\r\\n                    $$ @ height \\\"100%\\\"\\r\\n                    @ border \\\"1px solid #eee\\\"\\r\\n                    $$ @ height \\\"auto\\\"\\r\\n                    @ height \\\"20rem\\\"\\r\\n                # ==========================================================================\\r\\n                # SUBMIT\\r\\n                # ========================================================================== \\r\\n                { \\\".form-submit\\\"\\r\\n                    @ \\\"text-align\\\" \\\"right\\\"\\r\\n                { \\\".submit\\\"\\r\\n                    @ width \\\"150px\\\"\\r\\n                    @ height \\\"50px\\\"\\r\\n                    @ display \\\"inline-block\\\"\\r\\n                    @ \\\"font-family\\\" \\\"'Poppins'\\\"\\r\\n                    @ \\\"font-weight\\\" \\\"bold\\\"\\r\\n                    @ \\\"font-size\\\" \\\"14px\\\"\\r\\n                    @ padding \\\"10px\\\"\\r\\n                    @ border \\\"none\\\"\\r\\n                    @ cursor \\\"pointer\\\"\\r\\n                    @ \\\"text-transform\\\" \\\"uppercase\\\"\\r\\n                    @ \\\"border-radius\\\" \\\"5px\\\"\\r\\n                    @ \\\"-moz-border-radius\\\" \\\"5px\\\"\\r\\n                    @ \\\"-webkit-border-radius\\\" \\\"5px\\\"\\r\\n                    @ \\\"-o-border-radius\\\" \\\"5px\\\"\\r\\n                    @ \\\"-ms-border-radius\\\" \\\"5px\\\"\\r\\n                { \\\"#reset\\\"\\r\\n                    @ background \\\"#fff\\\"\\r\\n                    @ color \\\"#999\\\"\\r\\n                    @ border \\\"2px solid #ebebeb\\\"\\r\\n                { \\\"#reset:hover\\\"\\r\\n                    @ border \\\"2px solid #329e5e\\\"\\r\\n                    @ background \\\"#329e5e\\\"\\r\\n                    @ color \\\"#fff\\\"\\r\\n                { \\\"#submit\\\"\\r\\n                    @ background \\\"#329e5e\\\"\\r\\n                    @ color \\\"#fff\\\"\\r\\n                    @ \\\"margin-right\\\" \\\"25px\\\"\\r\\n                { \\\"#submit:hover\\\"\\r\\n                    @ \\\"background-color\\\" \\\"#267747\\\"\\r\\n                # ==========================================================================\\r\\n                # TITLE\\r\\n                # ========================================================================== \\r\\n                { \\\".title\\\"\\r\\n                    @ \\\"text-transform\\\" \\\"uppercase\\\"\\r\\n                    @ \\\"font-weight\\\" 700\\r\\n                    @ \\\"margin-bottom\\\" \\\"37px\\\"\\r\\n                # ==========================================================================\\r\\n                # CARD\\r\\n                # ========================================================================== \\r\\n                { \\\".card\\\"\\r\\n                    @ overflow \\\"hidden\\\"\\r\\n                    @ \\\"-webkit-border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"-moz-border-radius\\\" \\\"3px\\\"\\r\\n                    @ \\\"border-radius\\\" \\\"3px\\\"\\r\\n                    @ background \\\"#fff\\\"\\r\\n                { \\\".card-2\\\"\\r\\n                    @ \\\"-webkit-box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ \\\"-moz-box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ \\\"box-shadow\\\" \\\"0px 8px 20px 0px rgba(0, 0, 0, 0.15)\\\"\\r\\n                    @ \\\"-webkit-border-radius\\\" \\\"10px\\\"\\r\\n                    @ \\\"-moz-border-radius\\\" \\\"10px\\\"\\r\\n                    @ \\\"border-radius\\\" \\\"10px\\\"\\r\\n                    @ \\\"width\\\" \\\"100%\\\"\\r\\n                    @ display \\\"table\\\"\\r\\n                { \\\".card-2 .card-heading\\\"\\r\\n                    @ background 'url(\\\"./images/stefano_stop.jpg\\\") top left/cover no-repeat'\\r\\n                    @ width \\\"24.1%\\\"\\r\\n                    @ display \\\"table-cell\\\"\\r\\n                { \\\".card-2 .card-body\\\"\\r\\n                    @ display \\\"table-cell\\\"\\r\\n                    @ padding \\\"80px 90px\\\"\\r\\n                    @ \\\"padding-bottom\\\" \\\"88px\\\"\\r\\n                $*\\r\\n                { \\\"@media (max-width: 767px)\\\"\\r\\n                    { \\\".card-2\\\"\\r\\n                        @ display \\\"block\\\"\\r\\n                    { \\\".card-2 .card-heading\\\"\\r\\n                        @ width  \\\"100%\\\"\\r\\n                        @ display \\\"block\\\"\\r\\n                        @ \\\"padding-top\\\" \\\"300px\\\"\\r\\n                        @ \\\"background-position\\\" \\\"left center\\\"\\r\\n                    { \\\".card-2 .card-body\\\"\\r\\n                        @ display \\\"block\\\"\\r\\n                        @ padding \\\"60px 50px\\\"\\r\\n                        *$\\r\\n\\r\\n\"},\"t/html/images/goback.svg.html.ittf\":{\"type\":\"CODE\",\"contents\":\"svg\\r\\n    $params color|#000, bgcolor|#fff, viewBox|0 0 24 24\\r\\n    $\\r\\n        //\\r\\n    preserve-aspect-ratio xMidYMid meet\\r\\n    viewBox ${viewBox}\\r\\n    polygon\\r\\n      stroke ${color}\\r\\n      fill ${color}\\r\\n      @ points 4,12, 12,20 6,14 22,14 22,10 6,10 12,4 4,12\\r\\n\"},\"test.svg.html.ittf\":{\"type\":\"CODE\",\"contents\":\"html\\r\\n  body\\r\\n    html/images/goback.svg()\"},\"t/html/images/addDocument.svg.html.ittf\":{\"type\":\"CODE\",\"contents\":\"svg\\r\\n    $params color|#000, bgcolor|#fff, viewBox|0 0 24 24\\r\\n    $\\r\\n        //\\r\\n    preserve-aspect-ratio xMidYMid meet\\r\\n    viewBox ${viewBox}\\r\\n    path\\r\\n        d M8 6.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V11a.5.5 0 0 1-1 0V9.5H6a.5.5 0 0 1 0-1h1.5V7a.5.5 0 0 1 .5-.5z\\r\\n    path\\r\\n        d M14 4.5V14a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2h5.5L14 4.5zm-3 0A1.5 1.5 0 0 1 9.5 3V1H4a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V4.5h-2z\\r\\n\"}}"
    },
    {
      "_id": "6314c65fd1a6c0ebf3dd35f7",
      "id": "6314c65fd1a6c0ebf3dd35f7",
      "owner": "stfnbssl",
      "name": "wizzihub",
      "description": "...",
      "packiFiles": "{\"t/a_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        if err\\n            return\\n                _ callback\\n                    @ err\\n        $hook\\n\"},\"t/a.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params text, href|#, ca|@@null\\n    a ${text}\\n        href ${href}\\n        $if ca\\n            class ${ca}\\n        $hook\\n\"},\"t/a_cb_no_err.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        $hook\\n\"},\"t/a_cb_throw.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    =>\\n        param err\\n        param ${result}\\n        if err\\n            log 'err', err\\n            throw err\\n        $hook\\n\"},\"t/css_wz.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params url\\n    $if isWizziStudio\\n        link\\n            href ${url}.ittf\\n            rel stylesheet\\n    $else\\n        link\\n            href ${url}\\n            rel stylesheet\\n\"},\"t/event_emit.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\t$params name\\r\\n\\r\\n\\t_ glEventHub.emit\\r\\n\\t\\t@ '${name}'\\r\\n\\t\\t{\\r\\n\\t\\t\\t$hook\\r\\n\"},\"t/f_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        if err\\n            return\\n                _ callback\\n                    @ err\\n        $hook\\n\"},\"t/event_on.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\t$params name\\r\\n\\r\\n\\t_ glEventHub.on\\r\\n\\t\\t@ '${name}'\\r\\n\\t\\t=>\\r\\n\\t\\t\\tparam data\\r\\n\\t\\t\\tlog 'on ${name}', data\\r\\n\\t\\t\\t$hook\\r\\n\"},\"t/f_cb_no_err.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        $hook\\n\"},\"t/f_cb_throw.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|notUsed\\n    function\\n        param err\\n        param ${result}\\n        if err\\n            log 'err', err\\n            throw err\\n        $hook\\n\"},\"t/j.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params url\\n    script\\n        src ${url}\\n        crossorigin anonymous\\n\"},\"t/js_wz.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params url\\n    $if isWizziStudio\\n        script\\n            src ${url}.ittf\\n            crossorigin anonymous\\n    $else\\n        script\\n            src ${url}\\n            crossorigin anonymous\\n\"},\"t/r_cb.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params result|@@null\\n    return\\n        _ callback\\n            @ null\\n            $if result !== null\\n                @ ${result}\\n            $hook\\n\"},\"t/s.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params url\\n    link\\n        href ${url}\\n        rel stylesheet\\n\"},\"t/wfjobs.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params name, &jobCtx, ext|@@null\\n    $if name == 'any_js'\\n        artifact any_js\\n            src ./**/*.js.ittf\\n            schema js\\n            generator js/module\\n            extension js\\n            ignore /**/bin/**/*.js\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_ts'\\n        artifact any_ts\\n            src ./**/*.ts.ittf\\n            schema ts\\n            generator ts/module\\n            extension ts\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_tsx'\\n        artifact any_tsx\\n            src ./**/*.tsx.ittf\\n            schema ts\\n            generator ts/module\\n            extension tsx\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_css'\\n        artifact any_css\\n            src ./**/*.css.ittf\\n            schema css\\n            generator css/document\\n            extension css\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_svg'\\n        artifact any_svg\\n            src ./**/*.svg.ittf\\n            schema svg\\n            generator svg/document\\n            extension svg\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_html'\\n        artifact any_html\\n            src ./**/*.html.ittf\\n            schema html\\n            generator html/document\\n            extension html\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_json'\\n        artifact any_json\\n            src ./**/*.json.ittf\\n            schema json\\n            generator json/document\\n            extension json\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_xml'\\n        artifact any_xml\\n            src ./**/*.xml.ittf\\n            schema xml\\n            generator xml/document\\n            extension xml\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_yml'\\n        artifact any_yml\\n            src ./**/*.yml.ittf\\n            schema yaml\\n            generator yaml/document\\n            extension yml\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_yaml'\\n        artifact any_yaml\\n            src ./**/*.yaml.ittf\\n            schema yaml\\n            generator yaml/document\\n            extension yaml\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_md'\\n        artifact any_md\\n            src ./**/*.md.ittf\\n            schema md\\n            generator md/document\\n            extension md\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_text'\\n        artifact any_text\\n            src ./**/*.text.ittf\\n            schema text\\n            generator text/document\\n            extension text\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_text_no_extension'\\n        artifact any_text\\n            src ./**/*.text.ittf\\n            schema text\\n            generator text/document\\n            extension @@null\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_ittf'\\n        artifact any_ittf\\n            src ./**/*.ittf.ittf\\n            schema ittf\\n            generator ittf/document\\n            extension ittf\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.env'\\n        artifact .env\\n            src .env.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path .env\\n            extension env\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'www'\\n        artifact www\\n            src bin/www.js.ittf\\n            schema js\\n            generator js/module\\n            dest-path bin/www\\n            extension\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.babelrc'\\n        artifact .babelrc\\n            src .babelrc.json.ittf\\n            schema json\\n            generator json/document\\n            dest-path .babelrc\\n            extension babelrc\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.gitignore'\\n        artifact .gitignore\\n            src .gitignore.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path .gitignore\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.prettierrc'\\n        artifact .prettierrc\\n            src .prettierrc.json.ittf\\n            schema json\\n            generator json/document\\n            dest-path .prettierrc.json\\n            extension json\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.prettierignore'\\n        artifact .prettierignore\\n            src .prettierignore.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path .prettierignore\\n            extension text\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.eslintrc'\\n        artifact .eslintrc\\n            src .eslintrc.js.ittf\\n            schema js\\n            generator js/module\\n            dest-path .eslintrc.js\\n            extension js\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.eslintignore'\\n        artifact .eslintignore\\n            src .eslintignore.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path .eslintignore\\n            extension text\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.npmignore'\\n        artifact .npmignore\\n            src .npmignore.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path .npmignore\\n            extension text\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'Procfile'\\n        artifact Procfile\\n            src Procfile.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path Procfile\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == '.azure_deployment'\\n        artifact .azure_deployment\\n            src .deployment.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path .deployment\\n            extension text\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'server.cert'\\n        artifact server.cert\\n            src server.cert.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path server.cert\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'server.key'\\n        artifact server.key\\n            src server.key.text.ittf\\n            schema text\\n            generator text/document\\n            dest-path server.key\\n            $if jobCtx.job_model\\n                model-ref ${jobCtx.job_model}\\n                    export-name ${jobCtx.job_model}\\n            $hook\\n    $elif name == 'any_plain'\\n        artifact any_plain_${ext}\\n            src ./**/*.${ext}\\n            extension ${ext}\\n    $elif name == 'any_plain_image'\\n        artifact any_plain_jpeg\\n            src ./**/*.jpeg\\n            extension jpeg\\n        artifact any_plain_jpg\\n            src ./**/*.jpg\\n            extension jpg\\n        artifact any_plain_gif\\n            src ./**/*.gif\\n            extension gif\\n        artifact any_plain_png\\n            src ./**/*.png\\n            extension png\\n        artifact any_plain_bmp\\n            src ./**/*.bmp\\n            extension bmp\\n        artifact any_plain_svg\\n            src ./**/*.svg\\n            extension svg\\n    $else\\n        $throw wfjob name not managed: ${name}\\n\"},\"t/css/ace-edit-browse.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. ittf-editor\\r\\n\\t\\tdisplay flex\\r\\n\\t\\tflex-direction column !important\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t# ittf-editor-title\\r\\n\\t\\theight 20px !important\\r\\n\\t\\twidth 100% !important\\r\\n\\t\\tpadding 2px 8px\\r\\n\\r\\n\\t. ittf-editor-panel\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t# editorContainer\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t. result-browser\\r\\n\\t\\tdisplay flex\\r\\n\\t\\tflex-direction column !important\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t# result-browser-title\\r\\n\\t\\theight 20px !important\\r\\n\\t\\twidth 100% !important\\r\\n\\t\\tpadding 2px 8px\\r\\n\\r\\n\\t. result-browser-panel\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t. result-browser-container\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t. result-browser-control\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\r\\n\\t. result-iframe\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\"},\"t/css/file-explorer.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. fl\\r\\n\\t\\tmargin 12px 0\\r\\n\\r\\n\\t. fl-nodes\\r\\n\\t\\tpadding 0 8px\\r\\n\\r\\n    . fl-icon\\r\\n        height 16px !important\\r\\n        width 16px !important\\r\\n        @ fill currentcolor !important\\r\\n        vertical-align middle !important\\r\\n        opacity 0.7 !important\"},\"t/css/bars.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. result-bar\\r\\n\\t\\tpadding 3rem 0.1rem\\r\\n\\r\\n\\t. result-cmd\\r\\n\\t\\tmargin 1rem 0\\r\\n\\r\\n\\t. result-cmd-btn\\r\\n\\t\\twidth 100%\\r\\n\\t\\tbackground-color #ddd\\r\\n        display inline-block\\r\\n        padding 0.3em\\r\\n        border 0.16em solid rgba(255,255,255,0)\\r\\n        border-radius 1em\\r\\n        box-sizing border-box\\r\\n        text-decoration none\\r\\n        font-family 'Roboto',sans-serif\\r\\n        font-weight 300\\r\\n        color #333333\\r\\n        text-shadow 0 0.04em 0.04em rgba(0,0,0,0.35)\\r\\n        text-align center\\r\\n        transition all 0.2s\\r\\n\\t\\t& :hover\\r\\n\\t\\t\\tborder-color rgba(255,255,255,1)\\r\\n\"},\"t/css/shell.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. sh\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction column !important\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n\\t\\tbackground-color rgb(250, 250, 250) !important\\r\\n\\t\\tcolor rgb(17, 17, 17) !important\\r\\n\\t\\toverflow hidden !important\\r\\n\\r\\n\\t. sh-he\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction row\\r\\n\\t\\talign-items center !important\\r\\n\\t\\tjustify-content space-between !important\\r\\n\\t\\theight 60px !important\\r\\n\\t\\tbackground-color rgb(255, 255, 255) !important\\r\\n\\t\\tborder-bottom 1px solid rgba(0, 0, 0, 0.08) !important\\r\\n\\t\\tpadding 10px 20px\\r\\n\\r\\n\\t. sh-bo\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction row\\r\\n\\t\\tmin-height 0px !important\\r\\n\\t\\tmin-width 0px !important\\r\\n\\t\\tflex 1 1 0% !important\\r\\n        width 100% !important\\r\\n\\r\\n\\t. sh-bo-lsb\\r\\n        -webkit-box-direction normal !important\\r\\n        -webkit-box-orient vertical !important\\r\\n        display flex !important\\r\\n\\t\\tmin-width 10rem !important\\r\\n        flex-direction column !important\\r\\n\\t\\t# bg for test\\r\\n\\t\\tbackground-color rgb(230, 230, 230) !important\\r\\n\\r\\n    . sh-bo-lsb-schema-button        \\r\\n        font-size 1.3em\\r\\n        font-weight bold\\r\\n        margin 5px\\r\\n        padding 5px\\r\\n        background-color #434343\\r\\n        color #bbb\\r\\n        border-radius 5px\\r\\n        text-align center\\r\\n        cursor pointer\\r\\n        & :hover\\r\\n            color #ddd\\r\\n    . sh-bo-lsb-schema-button.selected\\r\\n        color #fff\\r\\n        font-size 1.35em\\r\\n\\r\\n\\t. sh-bo-co\\r\\n        -webkit-box-direction normal !important\\r\\n        -webkit-box-orient vertical !important\\r\\n        display flex !important\\r\\n        flex-direction column !important\\r\\n        min-width 0px !important\\r\\n        min-height 0px !important\\r\\n        flex 1 1 0% !important\\r\\n        background-color #bcbcbc\\r\\n\\r\\n    . sh-bo-co-title        \\r\\n        font-size 1.5em\\r\\n        font-weight bold\\r\\n\\t\\r\\n\\t. sh-bo-co-ge\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction row\\r\\n\\t\\tmin-height 0px !important\\r\\n\\t\\tmin-width 0px !important\\r\\n\\t\\tflex 1 1 0% !important\\r\\n        margin 5px\\r\\n\\r\\n\\t. sh-bo-co-ge-ittf\\r\\n\\t\\theight 100% !important\\r\\n        width 50%\\r\\n\\r\\n\\t. sh-bo-co-ge-result\\r\\n\\t\\tflex 1 1 0% !important\\r\\n\\t\\theight 100% !important\\r\\n        width 50%\\r\\n\\r\\n\\t. sh-bo-co-wi\\r\\n\\t\\tdisplay flex !important\\r\\n\\t    flex-direction row\\r\\n\\t\\tmin-height 0px !important\\r\\n\\t\\tmin-width 0px !important\\r\\n\\t\\tflex 1 1 0% !important\\r\\n        margin 5px\\r\\n        \\r\\n\\r\\n\\t. sh-bo-co-wi-snippet\\r\\n\\t\\theight 100% !important\\r\\n        width 50%\\r\\n\\r\\n\\t. sh-bo-co-wi-result\\r\\n\\t\\tflex 1 1 0% !important\\r\\n\\t\\theight 100% !important\\r\\n        width 50%\\r\\n\\r\\n\\t. sh-fo\\r\\n        -webkit-box-align center !important\\r\\n        -webkit-box-direction normal !important\\r\\n        -webkit-box-orient horizontal !important\\r\\n        position relative !important\\r\\n        display flex !important\\r\\n        flex-direction row !important\\r\\n        align-items center !important\\r\\n        height 30px !important\\r\\n        z-index 10 !important\\r\\n        background-color rgb(255, 255, 255) !important\\r\\n        color rgb(153, 153, 153) !important\\r\\n        padding 0px 0.25em !important\\r\\n        border-top 1px solid rgba(0, 0, 0, 0.08) !important\\r\\n\\r\\n\\t# gen-ittf-editor\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n        max-height 41vh\\r\\n        \\r\\n\\r\\n\\t# gen-result-editor\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n        max-height 41vh\\r\\n\\r\\n\\t# snippet-source-editor\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n        max-height 41vh\\r\\n\\r\\n\\t# snippet-result-editor\\r\\n\\t\\theight 100% !important\\r\\n\\t\\twidth 100% !important\\r\\n        max-height 41vh\"},\"t/css/tree-node.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. tree-node\\r\\n        position relative\\r\\n\\t\\tfont-size 13px\\r\\n\\t\\tline-height 1.8\\r\\n\\t\\t. copying\\r\\n\\t\\t\\tborder 1px dashed #dedede\\r\\n\\t\\t. cutting\\r\\n\\t\\t\\tborder 1px dashed #dedede\\r\\n\\t\\t\\topacity 0.5\\r\\n\\t\\t. icon-item-group\\r\\n\\t\\t\\tposition relative !important\\r\\n\\t\\t\\tdisplay inline-block !important\\r\\n\\t\\t\\twidth 100% !important\\r\\n\\t\\t\\tcursor pointer !important\\r\\n\\t\\t\\tz-index 1 !important\\r\\n\\t\\t\\twhite-space nowrap !important\\r\\n\\t\\t\\toutline 0px !important\\r\\n\\t\\t\\tpadding 0px 16px !important\\r\\n\\t\\t. item-name\\r\\n\\t\\t\\tvertical-align -1px !important\\r\\n\\t\\t\\tuser-select none !important\\r\\n\\t\\t\\tmargin 0px 6px !important\\r\\n    \\r\\n\\t. tree-node .tree-child-leaves\\r\\n        display block\\r\\n        margin-left 15px\\r\\n    \\r\\n\\t. tree-node .hidden\\r\\n        display none\\r\\n    \\r\\n\\t. tree-node .tree-expando\\r\\n        background #ddd\\r\\n        border-radius 3px\\r\\n        cursor pointer\\r\\n        float left\\r\\n        height 10px\\r\\n        line-height 10px\\r\\n        position relative\\r\\n        text-align center\\r\\n        top 5px\\r\\n        width 10px\\r\\n    \\r\\n\\t. tree-node .hidden\\r\\n        visibility hidden\\r\\n    \\r\\n\\t. tree-node .tree-expando:hover\\r\\n        background #aaa\\r\\n    \\r\\n\\t. tree-node .tree-node-text\\r\\n        cursor pointer\\r\\n        float left\\r\\n        margin-left 5px\\r\\n    \\r\\n\\t. tree-node .tree-node-text:hover\\r\\n        color blue\\r\\n    \\r\\n\\t. tree-node .tree-node-content\\r\\n\\t\\tdisplay flex\\r\\n\\t\\tflex-direction row\\r\\n\\t\\t& :hover\\r\\n\\t\\t\\tbackground #dedede\\r\\n\\r\\n\\t. tree-node-context-menu-on\\r\\n\\t\\tbackground #cdcdcd\\r\\n\\t\\r\\n\\t$*\\r\\n\\t. tree-node .tree-node-content:before\\r\\n        + .tree-node .tree-node-content:after\\r\\n        content \\\" \\\"\\r\\n        display table\\r\\n    \\r\\n\\t. tree-node .tree-node-content:after\\r\\n        clear both\\r\\n\\t*$\\r\\n\"},\"t/css/splash.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. splash-editor\\r\\n\\t\\theight 100%\\r\\n\\t\\twidth 100%\\r\\n\\t\\tbackground-color rgb(230, 230, 230) !important\\r\\n\\r\\n\\t. splash-result\\r\\n\\t\\theight 100%\\r\\n\\t\\twidth 100%\\r\\n\\t\\tbackground-color rgb(230, 230, 230) !important\"},\"t/css/widgets/file-explorer.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. fl\\r\\n\\t\\tmargin 12px 0\\r\\n\\r\\n\\t. fl-nodes\\r\\n\\t\\tpadding 0 8px\\r\\n\\r\\n    . fl-icon\\r\\n        height 16px !important\\r\\n        width 16px !important\\r\\n        @ fill currentcolor !important\\r\\n        vertical-align middle !important\\r\\n        opacity 0.7 !important\"},\"t/css/widgets/tree-node.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n\\t. tree-node\\r\\n        position relative\\r\\n\\t\\tfont-size 13px\\r\\n\\t\\tline-height 1.8\\r\\n\\t\\t. copying\\r\\n\\t\\t\\tborder 1px dashed #dedede\\r\\n\\t\\t. cutting\\r\\n\\t\\t\\tborder 1px dashed #dedede\\r\\n\\t\\t\\topacity 0.5\\r\\n\\t\\t. icon-item-group\\r\\n\\t\\t\\tposition relative !important\\r\\n\\t\\t\\tdisplay inline-block !important\\r\\n\\t\\t\\twidth 100% !important\\r\\n\\t\\t\\tcursor pointer !important\\r\\n\\t\\t\\tz-index 1 !important\\r\\n\\t\\t\\twhite-space nowrap !important\\r\\n\\t\\t\\toutline 0px !important\\r\\n\\t\\t\\tpadding 0px 16px !important\\r\\n\\t\\t\\t& .selected\\r\\n\\t\\t\\t\\tbackground #cdcdcd\\r\\n\\t\\t. item-name\\r\\n\\t\\t\\tvertical-align -1px !important\\r\\n\\t\\t\\tuser-select none !important\\r\\n\\t\\t\\tmargin 0px 6px !important\\r\\n    \\r\\n\\t. tree-node .tree-child-leaves\\r\\n        display block\\r\\n        margin-left 15px\\r\\n    \\r\\n\\t. tree-node .hidden\\r\\n        display none\\r\\n    \\r\\n\\t. tree-node .tree-expando\\r\\n        background #ddd\\r\\n        border-radius 3px\\r\\n        cursor pointer\\r\\n        float left\\r\\n        height 10px\\r\\n        line-height 10px\\r\\n        position relative\\r\\n        text-align center\\r\\n        top 5px\\r\\n        width 10px\\r\\n    \\r\\n\\t. tree-node .hidden\\r\\n        visibility hidden\\r\\n    \\r\\n\\t. tree-node .tree-expando:hover\\r\\n        background #aaa\\r\\n    \\r\\n\\t. tree-node .tree-node-text\\r\\n        cursor pointer\\r\\n        float left\\r\\n        margin-left 5px\\r\\n    \\r\\n\\t. tree-node .tree-node-text:hover\\r\\n        color blue\\r\\n    \\r\\n\\t. tree-node .tree-node-content\\r\\n\\t\\tdisplay flex\\r\\n\\t\\tflex-direction row\\r\\n\\t\\t& :hover\\r\\n\\t\\t\\tbackground #dedede\\r\\n\\r\\n\\t. tree-node-context-menu-on\\r\\n\\t\\tbackground #cdcdcd\\r\\n\\t\\r\\n\\t$*\\r\\n\\t. tree-node .tree-node-content:before\\r\\n        + .tree-node .tree-node-content:after\\r\\n        content \\\" \\\"\\r\\n        display table\\r\\n    \\r\\n\\t. tree-node .tree-node-content:after\\r\\n        clear both\\r\\n\\t*$\\r\\n\"},\"t/images/logo.html.ittf\":{\"type\":\"CODE\",\"contents\":\"svg\\n    $params color|#000, bgcolor|#fff, viewBox|0 0 660 280\\n    $\\n        var opt = {};\\n        opt.y0 = 10;\\n        opt.y1 = 10;\\n        opt.y1a = 90;\\n        opt.y2 = 210;\\n        opt.ybottom = 250;\\n        opt.color = color;\\n    preserve-aspect-ratio xMidYMid meet\\n    viewBox ${viewBox}\\n    rect\\n        x 0\\n        y 0\\n        width 660\\n        height 280\\n        fill ${bgcolor}\\n        stroke none\\n    polyline\\n        stroke ${color}\\n        fill ${color}\\n        stroke-width 2\\n        points 10 ${opt.ybottom} 45 ${opt.y0} 60 ${opt.y0} 75 ${opt.y1a + 40} 120 ${opt.y2} 120 ${opt.y1a + 40} 175 ${opt.y2} 175 ${opt.y1a + 20} 230 ${opt.y2} 230 ${opt.ybottom}\\n    i( 250, &opt )\\n    z( 320, &opt )\\n    z( 450, &opt )\\n    i( 590, &opt )\\n\"},\"t/images/t/z.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params l:integer, &opt\\n    polyline\\n        stroke ${opt.color}\\n        fill ${opt.color}\\n        stroke-width 2\\n        points ${l} ${opt.ybottom} ${l} ${opt.ybottom - 20} ${l+100} ${opt.y1a+40} ${l+80} ${opt.y1a+20} ${l+80} ${opt.y1a} ${l+130} ${opt.y1a} ${l+100} ${opt.ybottom - 20} ${l+120} ${opt.ybottom - 20} ${l+120} ${opt.ybottom}\\n\"},\"t/images/t/i.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params l:integer, &opt\\n    polyline\\n        stroke ${opt.color}\\n        fill ${opt.color}\\n        stroke-width 2\\n        points ${l} ${opt.ybottom} ${l+10} ${opt.y1+80} ${l+40} ${opt.y1+80} ${l+50} ${opt.ybottom}\\n    path\\n        stroke ${opt.color}\\n        fill ${opt.color}\\n        stroke-width 2\\n        d M${l+30}, ${opt.y1+20} C${l+60},${opt.y1+40} ${l+0},${opt.y1+60} ${l+30}, ${opt.y1+74}\\n\"},\"t/layouts/site-scripts.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &opt\\n    $\\n        var useReact = opt.useReact || opt.useMaterialUI;\\n        var useBabel = useReact || opt.useBabel;\\n    \\n    $if opt.useAce\\n        $if opt.isWizziStudio\\n            $if opt.production\\n                j( /public/lib/ace/src-min-noconflict/ace.js\\n            $else\\n                j( /public/lib/ace/src-noconflict/ace.js\\n        $else\\n            j( https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.2/ace.js\\n    $if opt.useBootstrap\\n        j( /public/lib/bootstrap/dist/js/bootstrap.min.js\\n    $if opt.useEventEmitter\\n        j( https://unpkg.com/eventemitter3@latest/umd/eventemitter3.min.js\\n    $if opt.useCodemirror\\n        j( /public/lib/codemirror/lib/codemirror.js\\n        j( /public/lib/codemirror/mode/javascript/javascript.js\\n        j( /public/lib/codemirror/mode/xml/xml.js\\n        j( /public/lib/codemirror/theme/monokai.css\\n        j( /public/lib/codemirror/theme/twilight.css\\n    $if opt.useDeepDiff\\n        $if opt.isWizziStudio\\n            j( /public/lib/flitbit/deep-diff.min.js\\n        $else\\n            j( https://cdnjs.cloudflare.com/ajax/libs/deep-diff/0.3.3/deep-diff.min.js\\n    $if opt.useKeycode\\n        $if opt.isWizziStudio\\n            j( /public/lib/material-ui/keycode.min.2.2.0.js\\n        $else\\n            j( https://cdn.jsdelivr.net/npm/keycode.js\\n    $if opt.useHighlight\\n        $if opt.isWizziStudio\\n            j( https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js\\n        $else\\n            j( https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js\\n    $if opt.useInteractJs\\n        j( /public/lib/interactjs/interact.js\\n    $if opt.useJarallax\\n        j( /public/lib/object-fit-images/ofi.min.js\\n        $if opt.production\\n            j( /public/lib/jarallax/jarallax.min.js\\n            j( /public/lib/jarallax/jarallax-video.min.js\\n            j( /public/lib/jarallax/jarallax-element.min.js\\n        $else\\n            j( /public/lib/jarallax/jarallax.js\\n            j( /public/lib/jarallax/jarallax-video.js\\n            j( /public/lib/jarallax/jarallax-element.js\\n    $if opt.useJQuery || opt.useBootstrap\\n        $if opt.production\\n            j( /public/lib/jquery/jquery.min.js\\n        $else\\n            j( /public/lib/jquery/jquery.js\\n    $if opt.useJsonFormatter\\n        $if opt.isWizziStudio\\n            j( /public/lib/json-formatter/json-formatter.js\\n        $else\\n            j( https://cdn.jsdelivr.net/npm/json-formatter-js@2.2.1/dist/json-formatter.min.js\\n    $if opt.useJss\\n        js /public/lib/jss/jss.js\\n        js /public/lib/jss/jss-preset-default.js\\n    $if opt.useMarkdown\\n        j( https://cdn.jsdelivr.net/npm/marked/marked.min.js\\n    $if opt.useMathJax\\n        j( https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-MML-AM_CHTML\\n    $if opt.usePopper\\n        j( /public/lib/popper/popper.js\\n    $if opt.usePrism\\n        $if opt.isWizziStudio\\n            js /public/lib/prism/prism.js\\n        $else\\n            js https://cdnjs.cloudflare.com/ajax/libs/prism/1.6.0/prism.min.js\\n    $if opt.usePubSub\\n        js /public/lib/pubsub/pubsub.js\\n    $if useReact\\n        $if opt.production\\n            j( https://unpkg.com/prop-types@15.8.1/prop-types.min.js\\n        $else\\n            j( https://unpkg.com/prop-types@15.8.1/prop-types.js\\n        $if opt.useReactLatest\\n            $if opt.production\\n                j( https://unpkg.com/react@18.2.0/umd/react.production.min.js\\n                j( https://unpkg.com/react-dom@latest/umd/react-dom.production.min.js\\n            $else\\n                j( https://unpkg.com/react@latest/umd/react.development.js\\n                j( https://unpkg.com/react-dom@latest/umd/react-dom.development.js\\n        $else\\n            $if opt.production\\n                j( https://unpkg.com/react@18.2.0/umd/react.production.min.js\\n                j( https://unpkg.com/react-dom@18.2.0/umd/react-dom.production.min.js\\n            $else\\n                j( https://unpkg.com/react@18.2.0/umd/react.development.js\\n                j( https://unpkg.com/react-dom@18.2.0/umd/react-dom.development.js\\n        $if opt.useClassNames\\n            j( /public/lib/react/classnames.js\\n        $if opt.useMaterialUI\\n            $if opt.materialUI.latest\\n                $if opt.production\\n                    j( https://unpkg.com/@mui/material@latest/umd/material-ui.production.min.js\\n                $else\\n                    j( https://unpkg.com/@mui/material@latest/umd/material-ui.development.js\\n            $else\\n                $if opt.production\\n                    $if opt.materialUI.v4\\n                        j( https://unpkg.com/@material-ui/core@4.12.4/umd/material-ui.development.min.js\\n                    $else\\n                        j( https://unpkg.com/@mui/material@5.8.7/umd/material-ui.production.min.js\\n                $else\\n                    $if opt.materialUI.v4\\n                        j( https://unpkg.com/@material-ui/core@4.12.4/umd/material-ui.development.js\\n                    $else\\n                        j( https://unpkg.com/@mui/material@5.8.7/umd/material-ui.development.js\\n        $if opt.useRouter\\n            $if opt.local || opt.isWizziStudio\\n                j( /public/lib/react/react-router.min.4.3.1.js\\n            $else\\n                $if opt.useRouterLatest\\n                    j( https://unpkg.com/react-router-dom@latest/umd/react-router-dom.js\\n                $else\\n                    j( https://unpkg.com/react-router-dom@4.3.1/umd/react-router-dom.js\\n        $if opt.useReactGrid\\n            j( /public/lib/react/react-grid-layout.min.js\\n        $if opt.useDownshift\\n            $if opt.local || opt.isWizziStudio\\n                j( https://unpkg.com/downshift@6.1.7/dist/downshift.umd.js\\n            $else\\n                j( https://cdn.jsdelivr.net/npm/downshift@2.0.10/dist/downshift.umd.min.js\\n        $if opt.useGridLayout\\n            $if opt.useGridLayoutLatest\\n                j( https://unpkg.com/react-grid-layout@latest/dist/react-grid-layout.min.js\\n            $else\\n                j( https://unpkg.com/react-grid-layout@1.3.4/dist/react-grid-layout.min.js\\n        $if opt.react.useStyledComponents\\n            js //unpkg.com/styled-components@4.0.1/dist/styled-components.min.js\\n        $if opt.react.useTransitionGroup\\n            js https://cdnjs.cloudflare.com/ajax/libs/react-transition-group/4.4.1/react-transition-group.min.js\\n    $if opt.useRxJs\\n        j( /public/lib/rxjs/rxjs.umd.min.js\\n    $if opt.useScrollReveal\\n        j( /public/lib/scrollreveal/scrollreveal.js\\n    $if opt.useSplit\\n        js /public/lib/controls/split.js\\n    $if opt.useSweetalert\\n        j( https://cdn.jsdelivr.net/npm/sweetalert2@7.31.1/dist/sweetalert2.all.min.js\\n    $if opt.useUnderscore\\n        $if opt.production\\n            j( /public/lib/underscore/underscore.min.js\\n        $else\\n            j( /public/lib/underscore/underscore.js\\n    $if opt.useVue\\n        j( https://unpkg.com/vue\\n    $if opt.useWizzi\\n        $if opt.isWizziStudio\\n            j( /public/wizzi-play/scripts/wizzi.standalone.js\\n        $else\\n            j( /scripts/wizzi.standalone.js\\n    $if opt.useMathJax\\n        script\\n            #\\n                _ MathJax.Hub.Config\\n                    {\\n                        @ tex2jax\\n                            {\\n                                @ inlineMath [['$','$'], ['\\\\\\\\(','\\\\\\\\)']]\\n                                @ processEscapes true\\n    $if useBabel\\n        j( https://unpkg.com/babel-standalone@latest/babel.min.js\\n    $if opt.useMonaco\\n        j( /public/lib/monaco-editor/min/vs/loader.js\\n    $if opt.mainJs && opt.mainJs.length > 0\\n        $if useBabel\\n            script\\n                src ${opt.mainJs}\\n                type text/babel\\n        $else\\n            js ${opt.mainJs}\\n\"},\"t/layouts/site-styles.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &opt\\n    $if opt.useBootstrap\\n        css /public/lib/bootstrap/dist/css/bootstrap.min.css\\n    $if opt.useCodemirror\\n        s( /public/lib/codemirror/lib/codemirror.css\\n        s( /public/lib/codemirror/theme/monokai.css\\n        s( /public/lib/codemirror/theme/twilight.css\\n    $if typeof(wzCtx.aspect) !== 'undefined'\\n        $if wzCtx.aspect.AnimateCss\\n            $if wzCtx.aspect.production\\n                s( /public/lib/animatecss/animate.min.css\\n            $else\\n                s( /public/lib/animatecss/animate.css\\n    $if opt.useFontAwesome\\n        $\\n            var fontAwesomeKey = 'eab461efef';\\n        script\\n            src https://kit.fontawesome.com/${fontAwesomeKey}.js\\n            crossorigin anonymous\\n    $if opt.useFontRoboto\\n        s( https://fonts.googleapis.com/css?family=Roboto:300,400,500\\n    $if opt.useFontMaterialIcons\\n        s( https://fonts.googleapis.com/icon?family=Material+Icons\\n    $if opt.useGoogleFonts\\n        $foreach item in opt.googleFonts\\n            css https://fonts.googleapis.com/css?family=${item}\\n    $if opt.useHighlight\\n        $if opt.isWizziStudio\\n            s( /public/lib/highlight/styles/github.css\\n            s( /public/lib/highlightjs-master/dracula.css\\n        $else\\n            s( https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/styles/default.min.css\\n    $if opt.useJarallax\\n        s( /public/lib/jarallax/jarallax.css\\n    $if opt.useJsonFormatter\\n        $if opt.isWizziStudio\\n            s( https://cdnjs.cloudflare.com/ajax/libs/json-formatter/0.7.0/json-formatter.min.css\\n        $else\\n            s( https://cdnjs.cloudflare.com/ajax/libs/json-formatter/0.7.0/json-formatter.min.css\\n    $if opt.useMaterialUI\\n        s( https://fonts.googleapis.com/icon?family=Material+Icons\\n    $if opt.usePopper\\n        s( /public/lib/popper/main.css\\n    $if opt.usePrism\\n        $if opt.isWizziStudio\\n            css /public/lib/prism/prism.css\\n        $else\\n            css https://cdnjs.cloudflare.com/ajax/libs/prism/1.6.0/themes/prism.min.css\\n    $if opt.useSocial\\n        s( /public/lib/social/social-icons.css\\n    $if opt.useSweetalert\\n        s( https://cdn.jsdelivr.net/npm/sweetalert2@7.31.1/dist/sweetalert2.min.css\\n    $if opt.mainCss && opt.mainCss.length > 0\\n        s( ${opt.mainCss}\\n\"},\"t/layouts/site.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &opt\\n    $\\n        var ca = 'm-s p-s color-header font-l font-w-xxl';\\n        var ca_inverse = 'm-s p-s color-header-inverse bg-color-header-inverse font-l font-w-xxl';\\n        var ca2 = 'color-header font-x font-w-s';\\n    head\\n        $if opt.title\\n            @title ${opt.title}\\n        meta\\n            charset utf-8\\n        meta\\n            name viewport\\n            content width=device-width, initial-scale=1\\n        link\\n            rel preconnect\\n            href https://fonts.googleapis.com\\n        link\\n            rel preconnect\\n            href https://fonts.gstatic.com\\n            crossorigin\\n        link\\n            @ rel \\\"stylesheet\\\"\\n            @ href \\\"https://cdn.jsdelivr.net/npm/normalize.css@8.0.1/normalize.min.css\\\"\\n        css /ittf/css/main.css.ittf\\n        script\\n            module\\n                set window.__filename = 'browser'\\n                $if opt.isWizziStudio && !opt.useFirebase\\n                    var WizziBrowser\\n                        {\\n                            @ log\\n                                function\\n                                    var line\\n                                        _ Array.prototype.slice.call(arguments).map\\n                                            function\\n                                                param argument\\n                                                return\\n                                                    iif typeof argument === 'string'\\n                                                        then argument\\n                                                        else JSON.stringify(argument)\\n                                            ._ join\\n                                                @ '\\\\n '\\n                                    if arguments.length > 1 && arguments[arguments.length-1] === '-'\\n                                        set line += new Array(50).join('-')\\n                                    set document.querySelector('#wizzi-browser-log').textContent += line + '\\\\n'\\n                            @ clearLog\\n                                function\\n                                    set document.querySelector('#wizzi-browser-log').textContent = ''\\n                            @ setStatus\\n                                function\\n                                    param status\\n                                    set document.querySelector('#wizzi-browser-status').textContent = status\\n                            @ setContent\\n                                function\\n                                    param newContent\\n                                    var content = document.querySelector('#wizzi-browser-content')\\n                                    while content.hasChildNodes()\\n                                        _ content.removeChild(content.lastChild)\\n                                    _ content.appendChild(newContent)\\n        $hook head-styles-0\\n        $if opt.isWizziStudio && !opt.useFirebase\\n            @style\\n                css\\n                    # wizzi-browser-status\\n                        margin .5em 0\\n                        font-style italic\\n                    # wizzi-browser-log\\n                        margin .5em 0\\n                        white-space pre-wrap\\n                    # wizzi-browser-content\\n                        margin .5em 0\\n                    # status:empty, #log:empty, #content:empty\\n                        display none\\n        ./site-styles( &opt )\\n        $if opt.stickyNav\\n            style\\n                # ${opt.stickyNav}.sticky\\n                    position fixed\\n                    top 0\\n                . ${opt.stickyNav}OffsetMargin\\n                    padding-top ${opt.stickyNavOffset}px\\n                $if opt.stickyNavLogo\\n                    # ${opt.stickyNavLogo}.visible\\n                        display block\\n                    # ${opt.stickyNavLogo}.hidden\\n                        display none\\n        $hook head-styles\\n        $hook head-styles-2\\n        $hook head-styles-3\\n        $hook head-scripts\\n    body\\n        . flex-row space-between bg-color-header color-header align-items-center\\n            id __main_navbar\\n            . flex-row\\n                a( , /, ${ca2}\\n                    div\\n                        style width: 80px; margin-top: 5px; margin-left: 20px;\\n                        images/logo(#efefef, #434343)\\n            . flex-row\\n                $if locals.user\\n                    $if opt.section != 'Starter'\\n                        a( Starter, /ittf/site/starter.html.ittf, ${ca}\\n                    $else\\n                        . ${ca_inverse}\\n                            + Starter\\n                    $if opt.section != 'Lab'\\n                        a( Lab, /ittf/site/lab.html.ittf, ${ca}\\n                    $else\\n                        . ${ca_inverse}\\n                            + Lab\\n                    $if opt.section != 'Productions'\\n                        a( Productions, /ittf/site/productions.html.ittf, ${ca}\\n                    $else\\n                        . ${ca_inverse}\\n                            + Productions\\n                    $if opt.section != 'Project'\\n                        a( Project, /ittf/site/project.html.ittf, ${ca}\\n                    $else\\n                        . ${ca_inverse}\\n                            + Project\\n            . flex-row\\n                $if opt.section != 'Docs'\\n                    a( Docs, /ittf/site/docs/concepts/overview.html.ittf, ${ca}\\n                $else\\n                    . ${ca_inverse}\\n                        + Docs\\n                a( Github, https://github.com/stfnbssl/wizzi, ${ca}\\n            . flex-row m-r-x\\n                $if locals.user\\n                    a( Profile, /account/profile, ${ca}\\n                    a( Log Out, /auth/logout, ${ca}\\n                $else\\n                    a( Log In, /auth/login, ${ca}\\n        $hook\\n        $hook body-scripts-0\\n        $if opt.isWizziStudio && !opt.useFirebase\\n            div\\n                # wizzi-browser-status\\n                # wizzi-browser-log\\n                # wizzi-browser-content\\n        ./site-scripts( &opt )\\n        $if opt.stickyNav\\n            script\\n                let header = document.getElementById(\\\"__main_navbar\\\")\\n                let stickyBar = document.getElementById(\\\"${opt.stickyNav}\\\")\\n                $if opt.stickyNavLogo\\n                    let stickyLogo = document.getElementById(\\\"${opt.stickyNavLogo}\\\")\\n                let stickyPos = ${opt.stickyNavOffset}\\n                _ window.addEventListener\\n                    @ \\\"scroll\\\"\\n                    =>\\n                        param e\\n                        let scrollPos = window.scrollY\\n                        log 'pre sticki', stickyPos, scrollPos, scrollPos > stickyPos\\n                        if scrollPos > stickyPos\\n                            _ stickyBar.classList.add('sticky')\\n                            _ header.classList.add('${opt.stickyNav}OffsetMargin')\\n                            $if opt.stickyNavLogo\\n                                _ stickyLogo.classList.add('visible')\\n                                _ stickyLogo.classList.remove('hidden')\\n                            log 'sticki', scrollPos\\n                        else\\n                            _ stickyBar.classList.remove('sticky')\\n                            _ header.classList.remove('${opt.stickyNav}OffsetMargin')\\n                            $if opt.stickyNavLogo\\n                                _ stickyLogo.classList.remove('visible')\\n                                _ stickyLogo.classList.add('hidden')\\n        $hook body-scripts\\n        $hook body-scripts-2\\n        $hook body-scripts-3\\n        $if opt.useHighlight\\n            script\\n                _ document.addEventListener\\n                    @ 'DOMContentLoaded'\\n                    =>\\n                        param event\\n                        _ document.querySelectorAll\\n                            @ 'pre .hljs'\\n                            ._ forEach\\n                                =>\\n                                    param block\\n                                    _ hljs.highlightBlock(block)\\n\"},\"t/models/docs/wzctx.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $global\\n        var wzCtx = {\\n            name: \\\"stfnbssl.github.io/wizzi\\\",\\n            version: \\\"0.7.1\\\",\\n            description: \\\"Wizzi github page\\\",\\n            author: \\\"Stefano Bassoli\\\",\\n            license: \\\"MIT\\\",\\n            Params: {\\n                title: \\\"Wizzi\\\",\\n                baseUrl: \\\"https://stfnbssl.github.io/wizzi\\\"\\n            },\\n            Section: {\\n                items: [\\n                    {\\n                        title: \\\"Concepts\\\",\\n                        url: \\\"/ittf/site/docs/concepts/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"How to\\\",\\n                        url: \\\"/ittf/site/docs/howtos/getstarted.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Sample code\\\",\\n                        url: \\\"/ittf/site/docs/samplecode/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Geeky\\\",\\n                        url: \\\"/ittf/site/docs/geeky/overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Cheatsheets\\\",\\n                        url: \\\"/docs/cheatsheet/html\\\"\\n                    },\\n                    {\\n                        title: \\\"Play\\\",\\n                        url: \\\"/ittf/site/docs/play/index.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Docs: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Ittf Documents\\\",\\n                        url: \\\"./ittfdocuments.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model Instances\\\",\\n                        url: \\\"./wizzimodelinstances.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi CLI\\\",\\n                        url: \\\"./wizzicli.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            HowTos: {\\n                items: [\\n                    {\\n                        title: \\\"Get started\\\",\\n                        url: \\\"./getstarted.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            SampleCode: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Geeky: {\\n                items: [\\n                    {\\n                        title: \\\"Overview\\\",\\n                        url: \\\"./overview.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Template Engine\\\",\\n                        url: \\\"./templateengine.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"JsWizzi\\\",\\n                        url: \\\"./jswizzi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"mTrees\\\",\\n                        url: \\\"./mtrees.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Schemas\\\",\\n                        url: \\\"./wizzischemas.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Model DOMs\\\",\\n                        url: \\\"./wizzimodeldoms.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Model Transformers\\\",\\n                        url: \\\"./modeltransformers.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Artifact Generators\\\",\\n                        url: \\\"./artifactgenerators.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Jobs\\\",\\n                        url: \\\"./wizzijobs.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi Plugins\\\",\\n                        url: \\\"./wizziplugins.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi API\\\",\\n                        url: \\\"./wizziapi.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Wizzi CLI\\\",\\n                        url: \\\"./wizzicli.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Virtual Store System\\\",\\n                        url: \\\"./virtualstoresystem.html.ittf\\\"\\n                    },\\n                    {\\n                        title: \\\"Glossary\\\",\\n                        url: \\\"./glossary.html.ittf\\\"\\n                    }\\n                ]\\n            },\\n            Starter: {\\n                \\\"items\\\": [\\n                    {\\n                        title: \\\"wizzi-starter-wizzi-plugin\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-wizzi-plugin\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-webpack-react\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-webpack-react\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-mern\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-mern\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-nextjs\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-nextjs\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-starter-gatsby\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi-examples/tree/master/packages/wizzi-starter-gatsby\\\"\\n                    }\\n                ]\\n            },\\n            \\\"Plugin\\\": {\\n                items: [\\n                    {\\n                        title: \\\"wizzi-js\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-js/dist\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-web\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-web/dist\\\"\\n                    },\\n                    {\\n                        title: \\\"wizzi-lab\\\",\\n                        url: \\\"https://github.com/wizzifactory/wizzi/tree/master/packages/wizzi-lab/dist\\\"\\n                    }\\n                ]\\n            },\\n            Colors: {\\n                \\\"bg_0\\\": \\\"#333\\\",\\n                \\\"bg_f_0\\\": \\\"#000\\\",\\n                \\\"c_0\\\": \\\"#fff\\\",\\n                \\\"bg_dark\\\": \\\"#333\\\",\\n                \\\"bg_dark_medium\\\": \\\"#444\\\",\\n                \\\"c_dark\\\": \\\"#ddd\\\",\\n                \\\"c_dark_medium\\\": \\\"#bbb\\\",\\n                \\\"h3_c_dark\\\": \\\"#fc0\\\"\\n            },\\n            Fonts: {\\n                \\\"useMaterialIcons\\\": true,\\n                \\\"materialIcons\\\": {\\n                    \\\"baseUrl\\\": \\\"https://stfnbssl.github.io/wizzi/fonts\\\",\\n                    \\\"fontWeight\\\": \\\"400\\\",\\n                    \\\"size\\\": \\\"24px\\\"\\n                }\\n            }\\n        }\\n        var mpage = {\\n            Colors: {\\n                background: \\\"#ffffff\\\",\\n                scheme1Fade90: \\\"whiteFade-90,rgba(255,255,255,0.9)\\\",\\n                themeBack: \\\"#ffffff\\\",\\n                primary: \\\"#BDF3EE\\\",\\n                primaryDark: \\\"#122944\\\",\\n                primary30: \\\"#BDF3EE\\\",\\n                gray70: \\\"grey-70,#222B31\\\",\\n                grad1: \\\"#81B6CF\\\",\\n                grad2: \\\"#222B31\\\"\\n            }\\n        }\\n\"},\"t/v08/env/index.text.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    PORT=${wzCtx.App.port}\\n    $if wzCtx.Build.useSession\\n        SESSION_SECRET=${wzCtx.Build.session.secret}\\n    NO_CACHE=${wzCtx.Build.noCache}\\n    $if wzCtx.Build.useCors\\n        CORS_CLIENT_ORIGIN=${wzCtx.Build.cors.clientOrigin}\\n    $if wzCtx.Build.useWizzi\\n        IS_WIZZI_DEV=${wzCtx.Build.wizzi.isDev}\\n        WIZZI_BASE_PATH=${wzCtx.Build.wizzi.basePath}\\n    $if wzCtx.Build.useAuthentication\\n        $if wzCtx.Build.authentication.useGithub\\n            $if wzCtx.Build.authentication.isLocal\\n                GITHUB_CLIENT_ID=${wzCtx.Build.authentication.github.clientIdLocal}\\n                GITHUB_CLIENT_SECRET=${wzCtx.Build.authentication.github.clientSecretLocal}\\n                GITHUB_CALLBACK_URL=${wzCtx.Build.authentication.github.callbackURLLocal}\\n            $else\\n                GITHUB_CLIENT_ID=${wzCtx.Build.authentication.github.clientId}\\n                GITHUB_CLIENT_SECRET=${wzCtx.Build.authentication.github.clientSecret}\\n                GITHUB_CALLBACK_URL=${wzCtx.Build.authentication.github.callbackURL}\\n        $if wzCtx.Build.authentication.useGoogle\\n            $if wzCtx.Build.authentication.isLocal\\n                GOOGLE_CLIENT_ID=${wzCtx.Build.authentication.google.clientIdLocal}\\n                GOOGLE_CLIENT_SECRET=${wzCtx.Build.authentication.google.clientSecretLocal}\\n                GOOGLE_CALLBACK_URL=${wzCtx.Build.authentication.google.callbackURLLocal}\\n            $else\\n                GOOGLE_CLIENT_ID=${wzCtx.Build.authentication.google.clientId}\\n                GOOGLE_CLIENT_SECRET=${wzCtx.Build.authentication.google.clientSecret}\\n                GOOGLE_CALLBACK_URL=${wzCtx.Build.authentication.google.callbackURL}\\n    $if wzCtx.Build.useMongoDb\\n        MONGO_HOST=${wzCtx.Build.mongoDb.host}\\n        MONGO_USER=${wzCtx.Build.mongoDb.user}\\n        MONGO_PASSWORD=${wzCtx.Build.mongoDb.password}\\n        MONGO_PATH=${wzCtx.Build.mongoDb.dbPath}/${wzCtx.Build.mongoDb.dbName}\\n    $if wzCtx.Build.useRedis\\n        REDIS_CA=${wzCtx.Build.redis.ca}\\n        REDIS_URL=${wzCtx.Build.redis.url}\\n        REDIS_PASSWORD=${wzCtx.Build.redis.password}\\n\"},\"t/v08/eslint/rc/extends.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $if wzCtx.Build.useExpo\\n        @ 'universe/native'\\n        @ 'universe/node'\\n        @ 'universe/web'\\n        @ 'universe/shared/typescript-analysis'\\n    $else\\n        @ 'standard'\\n        @ 'eslint:recommended'\\n        @ 'plugin:@typescript-eslint/eslint-recommended'\\n        @ 'plugin:@typescript-eslint/recommended'\\n\"},\"t/v08/eslint/rc/overrides.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    {\\n        [ files\\n            $if wzCtx.Build.useTypescript\\n                @ '*.ts'\\n                @ '*.tsx'\\n                @ '*.d.ts'\\n        { parserOptions\\n            $if wzCtx.Build.useTypescript\\n                @ project './tsconfig.json'\\n        { rules\\n            [ '@typescript-eslint/naming-convention'\\n                @ 'warn'\\n                {\\n                    @ selector 'typeLike'\\n                    [ format\\n                        @ 'PascalCase'\\n                {\\n                    @ selector 'enumMember'\\n                    [ format\\n                        @ 'UPPER_CASE'\\n            @ 'no-unused-expressions' 'off'\\n            $if wzCtx.Build.useTypescript\\n                @ '@typescript-eslint/no-unused-expressions' 'warn'\\n\"},\"t/v08/eslint/rc/parser.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    @ parser '@typescript-eslint/parser'\\n        ## This allows ESLint to understand TypeScript syntax.\\n            # This is required, or else ESLint will throw errors\\n            # as it tries to parse TypeScript code as if it were regular JavaScript.\\n    { parserOptions\\n        @ ecmaVersion 2018\\n        @ sourceType \\\"module\\\"\\n    { env\\n        $if wzCtx.Build.useWebpack || wzCtx.Build.useReact\\n            @ browser true\\n        @ es6 true\\n\"},\"t/v08/eslint/rc/plugins.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $if wzCtx.Build.usePrettier\\n        @ 'prettier'\\n    @ '@typescript-eslint'\\n\"},\"t/v08/eslint/rc/settings.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $if wzCtx.Build.useReact\\n        { react\\n            @ version '16.8'\\n\"},\"t/v08/eslint/rc/rules.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    [ 'spaced-comment'\\n        @ 'warn'\\n        @ 'always'\\n        {\\n            { block\\n                @ balanced true\\n\"},\"t/v08/express/server.cert.text.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    -----BEGIN CERTIFICATE-----\\n    MIIDXTCCAkWgAwIBAgIJAMt/c5DHw9UFMA0GCSqGSIb3DQEBCwUAMEUxCzAJBgNV\\n    BAYTAklUMRMwEQYDVQQIDApTb21lLVN0YXRlMSEwHwYDVQQKDBhJbnRlcm5ldCBX\\n    aWRnaXRzIFB0eSBMdGQwHhcNMjEwMzA2MTMwNjUwWhcNMjEwNDA1MTMwNjUwWjBF\\n    MQswCQYDVQQGEwJJVDETMBEGA1UECAwKU29tZS1TdGF0ZTEhMB8GA1UECgwYSW50\\n    ZXJuZXQgV2lkZ2l0cyBQdHkgTHRkMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB\\n    CgKCAQEAuVkDqGIDc9RNa1ct4ad7v2PrkaYuETnTw4rM3O/s1sIxYZ993wnKwvpa\\n    hAIk92LDn9EHX4lHI762TacMpRzv09OyrIqX6Sb5iIzMARvfOuMUPJzSwt376HEu\\n    gvyt0KVos+LbORTF/AWrMdman/YBgw08ft5UAeNDo6clSEBQh0fSqcMfEjhG0p8i\\n    mhnxByu+/N5pYIAlf+zrMzYIQhKVe8NTYCfhuQxBkCfYAEDM5Dp2wAVxD2ZmSAwF\\n    gEju9VUjEtAeLU6Wja3HwooIjXZl5kxv244tQUYoIKQIrLKK7qkQg2cjyONmrp/g\\n    /iBoGXvLdoxgNQU/WSM7yrvUJk2pKwIDAQABo1AwTjAdBgNVHQ4EFgQUTCCyc7ha\\n    S+cbeFQuuwn/VF8aiIMwHwYDVR0jBBgwFoAUTCCyc7haS+cbeFQuuwn/VF8aiIMw\\n    DAYDVR0TBAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAQEAI8hslqPM45TK5JbGrkTS\\n    xsxW7g8kYF8TF/O0fumUqHJqIXnfh+amz2QjOwLQw95DfhYu+DQSM66sb3jdwyJx\\n    i67oolUcHDH67sPa1XSy3W5eOD/HXja0LPIhxlwOgr1fVU4tPwmvCXV29w/VqJtl\\n    TOOraSevvT8NLfmlgXQC2eAitr8HXfTAQSWilagFxLbG3t5GQIqTMAhIhLgN95hD\\n    Ixt93NwnGozSzUbrJmNEwyqWrCLTj+2MUGSbxFt/gqLVR79JoNH6pTPFGo/ivoQX\\n    8+NMA5nARpHR4C0SXH8pB7New8aa4erEsf4tAYE1NcsNP/2eAkYkfsu3JYICIpa3\\n    jg==\\n    -----END CERTIFICATE-----\\n\"},\"t/v08/express/server.key.text.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    -----BEGIN PRIVATE KEY-----\\n    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC5WQOoYgNz1E1r\\n    Vy3hp3u/Y+uRpi4ROdPDiszc7+zWwjFhn33fCcrC+lqEAiT3YsOf0QdfiUcjvrZN\\n    pwylHO/T07KsipfpJvmIjMwBG9864xQ8nNLC3fvocS6C/K3QpWiz4ts5FMX8Basx\\n    2Zqf9gGDDTx+3lQB40OjpyVIQFCHR9Kpwx8SOEbSnyKaGfEHK7783mlggCV/7Osz\\n    NghCEpV7w1NgJ+G5DEGQJ9gAQMzkOnbABXEPZmZIDAWASO71VSMS0B4tTpaNrcfC\\n    igiNdmXmTG/bji1BRiggpAissoruqRCDZyPI42aun+D+IGgZe8t2jGA1BT9ZIzvK\\n    u9QmTakrAgMBAAECggEAF4e1bysCRTIuofHvYTZh/2ov/c2bC5TLzYdRerr61kjQ\\n    /BPDZw1XMGmYFCoxhzaCn0dqKDbFUURk4HbUpCGIUNwPUthFcNQB2dQGEh33uQIb\\n    D5bZKuQDlv7HaNmrN1HIeQ3TxutcNyKBGVMGzkfs6TZE99ZB0/uGGsCdew6vKn08\\n    TgVWn+vcEkjrFN+lIy0jgQFHAUz+dnp/BtciMATrdk18An1AsztmJzqAUzLHUm1w\\n    uo9avDZYd0q9bDHDQyV0y2zSGrwoBtcdjDF6eifPq1bjJ4kHwVqUMm2uoeLZeie+\\n    kPhaNLeIUnfZ+qwpPcoyk9G5i4OQ7sXg3L8fD3voAQKBgQDqCR0Rgrv/sQSsK5CD\\n    ldoIPW8TKTVTOdXr6CZZjNCjmAG56GHjz7CRokb3PL2ym4NIdWO39hFZTzDsCwYR\\n    AcOPrLVJwo3ydfRszD+eW14KoyxQZ7ZqlNEgZRTxQJaUkOqN5yOeyxrN63dW+CDF\\n    3d0pKbHOW4NtQmpxOmCcvI+8MwKBgQDKviL0yIRHMDgVBdZpatlinsuk5+hd+3nI\\n    HRZMBsMRi1ue4lG1hwRCjlnA1aHLWsjOiaUBmsahOrn4QpQdTt6fre6ZG4tjBA7h\\n    wKi7j5AtYXJidHPYBAQe9pP7X8GFOkKsMDxIhxV84qkkCb+DZ1RIwuAQ8zItF/07\\n    tsG+1zBnKQKBgQCMXCTj4J1xzy+3NnV4hYH7GSUpv7gsju4+ir+dS3fB9aNrZPR4\\n    lZIW9dVL6FD48o29AjJpHRnwjy8PEdl0j7NC0tjzQMyzEo0iRykMh02SYaRtIJZl\\n    u5TksdrqicsFlRgnPO2/CZ6sy0CKl0vIf7RpQIlT8syS1ZdTCyjwN6KYwwKBgDVc\\n    X9TvZala7pfR5oHuZnLHeq/XfdgmlQHvbevqp7LZa+7ggEL3204tK0BOufvM1CdQ\\n    IQbQFtFepI3L8DHajUuXusG/dytDaStPytk6yua2zCVPoyHKxM7ldUNnC4cmM2Ag\\n    fe1U6HnrKjta+XX7XzqbV9/+MkmeE7+AtXOmLY4pAoGBAMvbqdgIZ0sJk7V7XtQ/\\n    PrWKynY88jUm2rij8SUW0iuLuuNy23hSPuWcvjmmaoZvRriqG8QJaAhTtgBik0D7\\n    D1ma/CBFwuqPo/FPVKyOV0XTBldMcMaK45KDBz7vRc/jWKlKCI/gCSNbX4hWe5d3\\n    HB5E+Wv5CU3CWLwzaUAqmrJq\\n    -----END PRIVATE KEY-----\\n\"},\"t/v08/express/common/index.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        as commonTypes\\n        from './types'\\n    +\\n    export\\n        @ commonTypes\\n\"},\"t/v08/express/common/types.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    export\\n        :type ValidateResult\\n            :{\\n                :p isValid\\n                    :boolean\\n                :p message\\n                    :string\\n                    :optional\\n    +\\n    export\\n        :type CRUDResult\\n            :{\\n                :p oper\\n                    :string\\n                :p ok\\n                    :boolean\\n                :p item\\n                    :any\\n                    :optional\\n                :p message\\n                    :string\\n                    :optional\\n    +\\n    $if wzCtx.Build.usePacki || wzCtx.Build.useWizziJsonFactory\\n        :type RequiredPackiFileAttributes\\n            :{\\n                :p contents\\n                    :string\\n                :p type\\n                    :union\\n                        :literal 'ASSET'\\n                        :literal 'CODE'\\n                :p generated\\n                    :optional\\n                    :boolean\\n                :p bothRealAndGenerated\\n                    :optional\\n                    :boolean\\n        +\\n        export\\n            :type PackiFiles\\n                :{\\n                    :index\\n                        :ref RequiredPackiFileAttributes\\n                        param x\\n                            :string\\n        +\\n    $if wzCtx.Build.useGithub\\n        export\\n            :type GitRepositoryMeta\\n                :{\\n                    :p owner\\n                        :string\\n                    :p name\\n                        :string\\n                    :p description\\n                        :string\\n                    :p branches\\n                        :[\\n                            :string\\n        +\\n        export\\n            :type ClonedGitRepository\\n                :{\\n                    :p owner\\n                        :string\\n                    :p name\\n                        :string\\n                    :p description\\n                        :string\\n                    :p branch\\n                        :string\\n                    :p commitHistory\\n                        :any\\n                    :p files\\n                        :ref PackiFiles\\n        +\\n\"},\"t/v08/express/features/filesystem/types.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ FileDef\\n        from 'wizzi-utils'\\n    import\\n        @ packiTypes\\n        from '../packi'\\n    +\\n    export\\n        :type FsDbResult\\n            :{\\n                :p writtenCount\\n                    :optional\\n                    :number\\n                :p deletedCount\\n                    :optional\\n                    :number\\n    +\\n    export\\n        :type FsDb\\n            :{\\n                :p getPackiTemplatesList\\n                    :=>\\n                        :ref Promise\\n                            :param\\n                                :[\\n                                    :string\\n                :p getPackiTemplate\\n                    :=>\\n                        :ref Promise\\n                            :param\\n                                :[\\n                                    :ref FileDef\\n                        param name\\n                            :string\\n                :p getStarterTemplate\\n                    :=>\\n                        :ref Promise\\n                            :param\\n                                :[\\n                                    :ref FileDef\\n                :p savePackiTemplate\\n                    :=>\\n                        :ref Promise\\n                            :param\\n                                :ref FsDbResult\\n                        param id\\n                            :string\\n                        param files\\n                            :ref packiTypes.PackiFiles\\n\"},\"t/v08/express/features/filesystem/index.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        as fsTypes\\n        from './types'\\n    +\\n    export\\n        @ fsTypes\\n\"},\"t/v08/express/features/github/apicalls.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import fetch from 'node-fetch'\\n    import path from 'path'\\n    import git from 'isomorphic-git'\\n    import http from 'isomorphic-git/http/node'\\n    import\\n        @ createFsFromVolume\\n        @ Volume\\n        from 'memfs'\\n    import\\n        @ vfile\\n        @ FsImpl\\n        @ FileDef\\n        from 'wizzi-utils'\\n    import\\n        @ FileDiff\\n        @ FileDiffItem\\n        from '../repo/types'\\n    import\\n        @ PackiFiles\\n        from '../packi/types'\\n    import\\n        @ GithubRepoOptions\\n        @ CreateGithubRepoOptions\\n        @ CreateGithubBranchOptions\\n        @ ClonedGitRepository\\n        @ GithubApiRepository\\n        from './types'\\n    +\\n    const volume = new Volume()\\n    +\\n    const fs = createFsFromVolume(volume)\\n    +\\n    set (fs as any).kind = 'filesystem'\\n    const wizzifs\\n        _ vfile\\n            + fs\\n                :as\\n                    :ref FsImpl\\n    +\\n    :type cb\\n        :< T\\n        :=>\\n            :void\\n            param err\\n                :any\\n            param result\\n                :ref T\\n        # const dir = fs.mkdtempSync(path.join(os.tmpdir(), 'test-'));\\n    +\\n    export\\n        async-function getRepositories\\n            param accessToken\\n                :string\\n            :return\\n                :ref Promise\\n                    :param\\n                        :[\\n                            :ref GithubApiRepository\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/user/repos\\n                    _ getOptions(accessToken)\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                                :any\\n                            return responseData\\n        # const dir = fs.mkdtempSync(path.join(os.tmpdir(), 'test-'));\\n    +\\n    export\\n        async-function getRepository\\n            param owner\\n                :string\\n            param repo\\n                :string\\n            param accessToken\\n                :string\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/repos/\\n                        @ owner\\n                        + /\\n                        @ repo\\n                        +\\n                    _ getOptions(accessToken)\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        async=>\\n                            param responseData\\n                                :any\\n                            set responseData._revisions =\\n                                await\\n                                    _ getRevisions(owner, repo, accessToken)\\n                            set responseData._commits =\\n                                await\\n                                    _ getCommits(owner, repo, accessToken)\\n                            set responseData._contents =\\n                                await\\n                                    _ getContents(owner, repo, accessToken)\\n                            return responseData\\n    +\\n    export\\n        async-function getPackiTemplateRepositories\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/users/stfnbssl/repos\\n                    _ getOptions()\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                                :[\\n                                    :ref GithubApiRepository\\n                            return\\n                                _ responseData.filter\\n                                    =>\\n                                        param value\\n                                        _ value.name.startsWith('packi-template-')\\n    +\\n    export\\n        async-function createRepository\\n            param accessToken\\n                :string\\n            param options\\n                :ref CreateGithubRepoOptions\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/user/repos\\n                    _ postOptions(accessToken, options)\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                                :any\\n                            return responseData\\n    +\\n    export\\n        async-function getRevisions\\n            param owner\\n                :string\\n            param repo\\n                :string\\n            param accessToken\\n                :string\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/repos/\\n                        @ owner\\n                        + /\\n                        @ repo\\n                        + /git/refs/heads\\n                    _ getOptions(accessToken)\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                                :any\\n                            return responseData\\n    +\\n    export\\n        async-function getBranches\\n            param owner\\n                :string\\n            param repo\\n                :string\\n            param accessToken\\n                :string\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/repos/\\n                        @ owner\\n                        + /\\n                        @ repo\\n                        + /branches\\n                    _ getOptions(accessToken)\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                                :any\\n                            return responseData\\n    +\\n    export\\n        async-function createBranch\\n            param accessToken\\n                :string\\n            param owner\\n                :string\\n            param repo\\n                :string\\n            param options\\n                :ref CreateGithubBranchOptions\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/repos/\\n                        @ owner\\n                        + /\\n                        @ repo\\n                        + /git/refs\\n                    _ postOptions\\n                        @ accessToken\\n                        {\\n                            @ ref\\n                                `lit\\n                                    + refs/heads/\\n                                    @ options.name\\n                                    + >\\n                            @ sha options.revisionFromHash\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                                :any\\n                            return responseData\\n    +\\n    export\\n        async-function cloneBranch\\n            param repo\\n                :ref GithubRepoOptions\\n            param branch\\n                :string\\n                = 'master'\\n            param kind\\n                :string\\n                = 'all'\\n            :return\\n                :ref Promise\\n                    :param\\n                        :ref ClonedGitRepository\\n            _ volume.reset()\\n            const dir = '/' + repo.name\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        _ fs.mkdir\\n                            @ dir\\n                            async=>\\n                                param err\\n                                if err\\n                                    return reject(err)\\n                                await\\n                                    _ git.clone\\n                                        {\\n                                            @ fs\\n                                            @ http\\n                                            @ dir\\n                                            @ url\\n                                                `lit\\n                                                    + https://github.com/\\n                                                    @ repo.owner\\n                                                    + /\\n                                                    @ repo.name\\n                                                    +\\n                                            @ ref\\n                                                `lit\\n                                                    +\\n                                                    @ branch\\n                                                    +\\n                                            @ singleBranch true\\n                                            @ depth 10\\n                                            @ onAuth\\n                                                =>\\n                                                    param url\\n                                                        :string\\n                                                    return\\n                                                        {\\n                                                            @ password repo.token\\n                                                            # oauth2format 'github'\\n                                let files\\n                                    _ wizzifs.getFiles\\n                                        @ dir\\n                                        {\\n                                            @ deep true\\n                                            @ documentContent true\\n                                const packies\\n                                    :ref PackiFiles\\n                                    =\\n                                        {\\n                                _ files.forEach\\n                                    =>\\n                                        param file\\n                                        if file.relPath.startsWith('.git/') == false\\n                                            if kind === 'all' || kind === 'ittf' && file.relPath.endsWith('.ittf') == true\\n                                                set packies[file.relPath] =\\n                                                    {\\n                                                        @ type \\\"CODE\\\"\\n                                                        @ contents\\n                                                            @expr file.content\\n                                                                :as\\n                                                                    :string\\n                                const log\\n                                    await\\n                                        _ git.log\\n                                            {\\n                                                @ fs\\n                                                @ dir\\n                                _ resolve\\n                                    {\\n                                        @ owner\\n                                            @expr repo.owner\\n                                                :as\\n                                                    :string\\n                                        @ name repo.name\\n                                        @ description ''\\n                                        @ branch\\n                                        @ files packies\\n                                        @ commitHistory log\\n    +\\n    export\\n        async-function updateBranch\\n            param packiFiles\\n                :ref PackiFiles\\n            param repo\\n                :ref GithubRepoOptions\\n            param branch\\n                :string\\n                = 'master'\\n            _ volume.reset()\\n            const dir = '/' + repo.name\\n            _ fs.mkdir\\n                @ dir\\n                async=>\\n                    param err\\n                    await\\n                        _ git.clone\\n                            {\\n                                @ fs\\n                                @ http\\n                                @ dir\\n                                @ url\\n                                    `lit\\n                                        + https://github.com/\\n                                        @ repo.owner\\n                                        + /\\n                                        @ repo.name\\n                                        +\\n                                @ ref\\n                                    `lit\\n                                        +\\n                                        @ branch\\n                                        +\\n                                @ singleBranch true\\n                                @ depth 10\\n                    let files = fs.readdirSync(dir)\\n                        #\\n                            #\\n                            # Object.keys(packiFiles).forEach(filePath=> {\\n                            # if (packiFiles[filePath].type === \\\"CODE\\\") {\\n                            # fs.writeFileSync(path.join(dir, filePath), packiFiles[filePath].contents);\\n                            # }\\n                            # })\\n                            #\\n                        # let msg = await git.log({fs, dir});\\n                        # console.log(msg);\\n                    _ filesDiff\\n                        @ dir\\n                        @ packiFiles\\n                        async=>\\n                            param err\\n                            param result\\n                            try\\n                                _ Object.keys(result).forEach\\n                                    =>\\n                                        param entryName\\n                                        if result[entryName].kind === '+' || result[entryName].kind === '<>'\\n                                            _ wizzifs.write\\n                                                _ path.join(dir, entryName)\\n                                                @expr\\n                                                    (\\n                                                        @expr result[entryName].b\\n                                                            :as\\n                                                                :ref FileDiffItem\\n                                                    . content\\n                                                # fs.writeFileSync(path.join(dir, entryName), (result[entryName].b as FileDiffItem).content);\\n                                        else\\n                                            if\\n                                                test\\n                                                    op<\\n                                                        [\\n                                                            @ '.gitignore'\\n                                                            @ 'LICENSE'\\n                                                            @ 'README.md'\\n                                                            ._ indexOf\\n                                                                @ entryName\\n                                                        + 0\\n                                                _ fs.unlinkSync(path.join(dir, entryName))\\n                                await\\n                                    _ printStatus(dir)\\n                                _ Object.keys(result).forEach\\n                                    async=>\\n                                        param entryName\\n                                        if result[entryName].kind === '+' || result[entryName].kind === '<>'\\n                                            await\\n                                                _ git.add\\n                                                    {\\n                                                        @ fs\\n                                                        @ dir\\n                                                        @ filepath entryName\\n                                        else\\n                                            if\\n                                                test\\n                                                    op<\\n                                                        [\\n                                                            @ '.gitignore'\\n                                                            @ 'LICENSE'\\n                                                            @ 'README.md'\\n                                                            ._ indexOf\\n                                                                @ entryName\\n                                                        + 0\\n                                                await\\n                                                    _ git.remove\\n                                                        {\\n                                                            @ fs\\n                                                            @ dir\\n                                                            @ filepath entryName\\n                                await\\n                                    _ printStatus(dir)\\n                                let msg\\n                                    await\\n                                        _ git.commit\\n                                            {\\n                                                @ fs\\n                                                @ dir\\n                                                @ message 'Packi git export ' + new Date().toDateString()\\n                                                { author\\n                                                    @ name 'packi'\\n                                                    @ email 'packi@gmail.com'\\n                                log msg\\n                                await\\n                                    _ printStatus(dir)\\n                                    # let msg = await git.listFiles({fs, dir});\\n                                    # let msg = await git.listFiles({fs, dir});\\n                                let pushResponse\\n                                    await\\n                                        _ git.push\\n                                            {\\n                                                @ fs\\n                                                @ http\\n                                                @ dir\\n                                                @ remote 'origin'\\n                                                @ ref\\n                                                    `lit\\n                                                        +\\n                                                        @ branch\\n                                                @ onAuth\\n                                                    =>\\n                                                        param url\\n                                                            :string\\n                                                        return\\n                                                            {\\n                                                                @ password repo.token\\n                                                                # oauth2format 'github'\\n                                                                # username: repo.owner,\\n                                                                # password: repo.password,\\n                                                                # username: 'stfnbssl',\\n                                                                # password: 'gi++++01',\\n                                log pushResponse\\n                            catch ex\\n                                error 'updateBranch.push. err', ex\\n                        #\\n                            #\\n                            # Object.keys(packiFiles).forEach(filePath=> {\\n                            # if (packiFiles[filePath].type === \\\"CODE\\\") {\\n                            # fs.writeFileSync(path.join(dir, filePath), packiFiles[filePath].contents);\\n                            # }\\n                            # })\\n                            #\\n                        # let msg = await git.log({fs, dir});\\n                        # console.log(msg);\\n    +\\n    export\\n        async-function getCommits\\n            param owner\\n                :string\\n            param repo\\n                :string\\n            param accessToken\\n                :string\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/repos/\\n                        @ owner\\n                        + /\\n                        @ repo\\n                        + /commits\\n                    _ getOptions(accessToken)\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                                :any\\n                            return responseData\\n    +\\n    export\\n        async-function getContents\\n            param owner\\n                :string\\n            param repo\\n                :string\\n            param accessToken\\n                :string\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/repos/\\n                        @ owner\\n                        + /\\n                        @ repo\\n                        + /contents\\n                    _ getOptions(accessToken)\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                                :any\\n                            return responseData\\n    +\\n    function filesDiff\\n        param dir\\n            :string\\n        param packiFiles\\n            :ref PackiFiles\\n        param callback\\n            :ref cb\\n                :param\\n                    :{\\n                        :index\\n                            :ref FileDiff\\n                            param k\\n                                :string\\n        :return\\n            :void\\n        _ wizzifs.getFiles\\n            @ dir\\n            {\\n                @ deep true\\n                @ documentContent true\\n            =>\\n                param err\\n                param result\\n                const diff\\n                    :{\\n                        :index\\n                            :ref FileDiff\\n                            param k\\n                                :string\\n                    =\\n                        {\\n                _ result.forEach\\n                    =>\\n                        param entry\\n                        if entry.relPath.startsWith('.git/') == false\\n                            set diff[entry.relPath] =\\n                                {\\n                                    @ kind '-'\\n                                    { a\\n                                        @ path entry.relPath\\n                                        @ content\\n                                            @expr entry.content\\n                                                :as\\n                                                    :string\\n                _ Object.keys(packiFiles).forEach\\n                    =>\\n                        param entryName\\n                        if diff[entryName]\\n                            if\\n                                test\\n                                    &&\\n                                        + diff[entryName].a\\n                                        ===\\n                                            @expr\\n                                                (\\n                                                    @expr diff[entryName].a\\n                                                        :as\\n                                                            :ref FileDiffItem\\n                                                . content\\n                                            + packiFiles[entryName].contents\\n                                delete diff[entryName]\\n                            else\\n                                set diff[entryName].kind = '<>'\\n                                set diff[entryName].b =\\n                                    {\\n                                        @ path entryName\\n                                        @ content packiFiles[entryName].contents\\n                        else\\n                            set diff[entryName] =\\n                                {\\n                                    @ kind '+'\\n                                    { b\\n                                        @ path entryName\\n                                        @ content packiFiles[entryName].contents\\n                _ callback(null, diff)\\n    +\\n    async-function printStatus\\n        param dir\\n            :string\\n        :return\\n            :ref Promise\\n                :param void\\n        return\\n            new Promise\\n                =>\\n                    param resolve\\n                    param reject\\n                    _ wizzifs.getFiles\\n                        @ dir\\n                        {\\n                            @ deep true\\n                            @ documentContent false\\n                        async=>\\n                            param err\\n                            param files\\n                            if err\\n                                return reject(err)\\n                            for\\n                                left\\n                                    let file\\n                                of files\\n                                if file.relPath.startsWith('.git/') == false\\n                                    let msg\\n                                        await\\n                                            _ git.status\\n                                                {\\n                                                    @ fs\\n                                                    @ dir\\n                                                    @ filepath file.relPath\\n                            _ resolve()\\n    +\\n    function getOptions\\n        param accessToken\\n            :string\\n            :optional\\n        return\\n            {\\n                @ method 'GET'\\n                @ headers headers(accessToken)\\n    +\\n    function postOptions\\n        param accessToken\\n            :string\\n        param body\\n            :any\\n        return\\n            {\\n                @ method 'POST'\\n                @ headers headers(accessToken)\\n                @ body JSON.stringify(body)\\n    +\\n    function headers\\n        param accessToken\\n            :string\\n            :optional\\n        :return\\n            :{\\n                :index\\n                    :string\\n                    param k\\n                        :string\\n        const ret\\n            :{\\n                :index\\n                    :string\\n                    param k\\n                        :string\\n            =\\n                {\\n                    @ 'Accept' 'application/vnd.github.v3+json'\\n                    @ 'Content-Type' 'application/json'\\n        if accessToken\\n            set ret['Authorization'] = 'token ' + (accessToken as string)\\n        return ret\\n\"},\"t/v08/express/features/github/index.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    +\\n    import\\n        as githubTypes\\n        from './types'\\n    import\\n        as githubUtils\\n        from './utils'\\n    import\\n        as githubApiCalls\\n        from './apicalls'\\n    +\\n    export\\n        @ githubTypes\\n        @ githubApiCalls\\n        @ githubUtils\\n\"},\"t/v08/express/features/github/types.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ commonTypes\\n        from '../../common'\\n    +\\n    export\\n        :type GithubRepoOptions\\n            :{\\n                :p name\\n                    :string\\n                :p owner\\n                    :optional\\n                    :string\\n                :p password\\n                    :optional\\n                    :string\\n                :p token\\n                    :optional\\n                    :string\\n    +\\n    export\\n        :type CreateGithubRepoOptions\\n            :{\\n                :p name\\n                    :string\\n                :p description\\n                    :string\\n                :p homepage\\n                    :string\\n                :p private\\n                    :boolean\\n                :p has_issues\\n                    :optional\\n                    :boolean\\n                    # Either true to enable issues for this repository or false to disable them. Default: true.\\n                :p has_projects\\n                    :optional\\n                    :boolean\\n                    # Either true to enable issues for this repository or false to disable them. Default: true.\\n                    # Either true to enable projects for this repository or false to disable them. Default: true. Note: If you're creating a repository in an organization that has disabled repository projects, the default is false, and if you pass true, the API returns an error.\\n                :p has_wiki\\n                    :optional\\n                    :boolean\\n                    # Either true to enable projects for this repository or false to disable them. Default: true. Note: If you're creating a repository in an organization that has disabled repository projects, the default is false, and if you pass true, the API returns an error.\\n                    # Either true to enable the wiki for this repository or false to disable it. Default: true.\\n                :p team_id\\n                    :optional\\n                    :number\\n                    # Either true to enable the wiki for this repository or false to disable it. Default: true.\\n                    # The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.\\n                :p auto_init\\n                    :optional\\n                    :boolean\\n                    # The id of the team that will be granted access to this repository. This is only valid when creating a repository in an organization.\\n                    # Pass true to create an initial commit with empty README. Default: false.\\n                :p gitignore_template\\n                    :string\\n                    # Pass true to create an initial commit with empty README. Default: false.\\n                    # Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, \\\"Haskell\\\".\\n                :p license_template\\n                    :string\\n                    # Desired language or platform .gitignore template to apply. Use the name of the template without the extension. For example, \\\"Haskell\\\".\\n                    # Choose an open source license template that best suits your needs, and then use the license keyword as the license_template string. For example, \\\"mit\\\" or \\\"mpl-2.0\\\".\\n                :p allow_squash_merge\\n                    :optional\\n                    :boolean\\n                    # Choose an open source license template that best suits your needs, and then use the license keyword as the license_template string. For example, \\\"mit\\\" or \\\"mpl-2.0\\\".\\n                    # Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true\\n                :p allow_merge_commit\\n                    :optional\\n                    :boolean\\n                    # Either true to allow squash-merging pull requests, or false to prevent squash-merging. Default: true\\n                    # Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true\\n                :p allow_rebase_merge\\n                    :optional\\n                    :boolean\\n                    # Either true to allow merging pull requests with a merge commit, or false to prevent merging pull requests with merge commits. Default: true\\n                    # Either true to allow rebase-merging pull requests, or false to prevent rebase-merging. Default: true\\n    +\\n    export\\n        :type CreateGithubBranchOptions\\n            :{\\n                :p name\\n                    :string\\n                :p revisionFromHash\\n                    :string\\n    +\\n    export\\n        :type IsoGitCommitter\\n            :{\\n                :p name\\n                    :string\\n                :p email\\n                    :string\\n                :p timestamp\\n                    :number\\n                :p timezoneOffset\\n                    :number\\n    +\\n    export\\n        :type IsoGitCommit\\n            :{\\n                :p oid\\n                    :string\\n                :p message\\n                    :string\\n                :p tree\\n                    :string\\n                :p parent\\n                    :[\\n                        :string\\n                :p author\\n                    :ref IsoGitCommitter\\n                :p committer\\n                    :ref IsoGitCommitter\\n    +\\n    export\\n        :type GithubApiRepository\\n            :{\\n                :p name\\n                    :string\\n                :p description\\n                    :string\\n                :p private\\n                    :boolean\\n                :p url\\n                    :string\\n                :p html_url\\n                    :string\\n                :p clone_url\\n                    :string\\n                :p owner\\n                    :{\\n                        :p login\\n                            :string\\n                        :p url\\n                            :string\\n                        :p html_url\\n                            :string\\n                        :p avatar_url\\n                            :string\\n    +\\n    export\\n        :type ClonedGitRepository\\n            :ref commonTypes.ClonedGitRepository\\n\"},\"t/v08/express/features/github/utils.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ commonTypes\\n        from '../../common'\\n    import\\n        @ GithubApiRepository\\n        from './types'\\n    +\\n    export\\n        function apiRepositoryToMeta\\n            param apirepo\\n                :ref GithubApiRepository\\n            :return\\n                :ref commonTypes.GitRepositoryMeta\\n            return\\n                {\\n                    @ owner apirepo.owner.login\\n                    @ name apirepo.name\\n                    @ description apirepo.description\\n                    [ branches\\n                        @ 'master'\\n                # TODO implement branches\\n\"},\"t/v08/express/features/packi/index.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ ModelBuilderType\\n        @ ControllerType\\n        from '../app/types'\\n    import\\n        as packiTypes\\n        from './types'\\n        # import { UserModelBuilder, GetUserModel } from './mongo/user';\\n    $if wzCtx.Build.usePacki\\n        $if wzCtx.Build.useMongoDb\\n            import\\n                @ PackiModelBuilder\\n                @ GetPackiModel\\n                from './mongo/packi'\\n                # import { UserModelBuilder, GetUserModel } from './mongo/user';\\n        $if wzCtx.Build.useFilesystem\\n            import\\n                @ TemplatesController\\n                from './controllers/templates'\\n        import\\n            @ PackiController\\n            from './controllers/packi'\\n        import\\n            @ ProductionsController\\n            from './controllers/productions'\\n        $if wzCtx.Build.useMongoDb\\n            $if wzCtx.Build.useGithub\\n                import\\n                    @ GithubController\\n                    from './controllers/github'\\n        $if wzCtx.Build.useMongoDb\\n            const packiModelGetters\\n                {\\n                    @ GetPackiModel\\n                        # GetUserModel\\n            const packiModelBuilders\\n                :[\\n                    :ref ModelBuilderType\\n                =\\n                    [\\n                        @ PackiModelBuilder\\n                            # UserModelBuilder\\n        const packiControllers\\n            :[\\n                :ref ControllerType\\n            =\\n                [\\n                    $if wzCtx.Build.useFilesystem\\n                        @ new TemplatesController()\\n                    @ new PackiController()\\n                    @ new ProductionsController()\\n                    $if wzCtx.Build.useMongoDb\\n                        $if wzCtx.Build.useGithub\\n                            @ new GithubController()\\n    export\\n        @ packiTypes\\n        $if wzCtx.Build.usePacki\\n            $if wzCtx.Build.useMongoDb\\n                @ packiModelGetters\\n                @ packiModelBuilders\\n            @ packiControllers\\n\"},\"t/v08/express/features/packi/types.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    $if wzCtx.Build.useMongoDb\\n        import\\n            @ Document\\n            from \\\"mongoose\\\"\\n    import\\n        @ commonTypes\\n        from '../../common'\\n    export\\n        :type PackiFiles\\n            :ref commonTypes.PackiFiles\\n    export\\n        :type TemplateList\\n            :[\\n                :string\\n    export\\n        :type Template\\n            :{\\n                :p name\\n                    :string\\n                :p files\\n                    :ref PackiFiles\\n    export\\n        :type IUser\\n            :{\\n                :p userId\\n                    :string\\n                :p email\\n                    :string\\n                :p createdAt\\n                    :ref Date\\n                :p lastAccess\\n                    :ref Date\\n    $if wzCtx.Build.useMongoDb\\n        export\\n            :interface IUserModel\\n                :extends IUser\\n                :extends Document\\n    export\\n        :type IPacki\\n            :{\\n                :p userId\\n                    :string\\n                :p repoOwner\\n                    :string\\n                :p repoName\\n                    :string\\n                :p clonedAt\\n                    :ref Date\\n                :p lastCommitWhenCloned\\n                    :string\\n    $if wzCtx.Build.useMongoDb\\n        export\\n            :interface IPackiModel\\n                :extends IPacki\\n                :extends Document\\n\"},\"t/v08/express/features/packi/controllers/github.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ Router\\n        @ Request\\n        @ Response\\n        from 'express'\\n    import\\n        as bodyParser\\n        from 'body-parser'\\n    import\\n        @ ControllerType\\n        @ AppInitializerType\\n        from '../../app/types'\\n    import\\n        @ githubTypes\\n        @ githubApiCalls\\n        @ githubUtils\\n        from '../../github'\\n    import\\n        @ authManager\\n        from '../../auth'\\n    import\\n        @ PackiFiles\\n        @ TemplateList\\n        @ Template\\n        from '../types'\\n    import\\n        @ sendPromiseResult\\n        @ sendSuccess\\n        @ sendFailure\\n        from '../../../utils/sendResponse'\\n    import\\n        @ TokenError\\n        from 'passport-oauth2'\\n    var jsonParser = bodyParser.json()\\n    export\\n        class GithubController\\n            :implements ControllerType\\n            p path\\n                :public\\n                = '/api/v1/github'\\n            p router\\n                :public\\n                _ Router()\\n            => initialize\\n                param initValues\\n                    :ref AppInitializerType\\n                _ this.router.get\\n                    `lit\\n                        +\\n                        @ this.path\\n                        + /ownedrepos/:uid\\n                    @ this.getOwnedRepositories\\n                _ this.router.get\\n                    `lit\\n                        +\\n                        @ this.path\\n                        + /clone/:uid/:owner/:name/:branch/:kind\\n                    @ this.cloneRepository\\n                _ this.router.post\\n                    `lit\\n                        +\\n                        @ this.path\\n                        + /commit/:uid/:owner/:name/:branch\\n                    @ this.commitRepository\\n            p getOwnedRepositories\\n                :private\\n                async=>\\n                    param request\\n                        :ref Request\\n                    param response\\n                        :ref Response\\n                    const accessToken\\n                        await\\n                            _ authManager.getAccessTokenFromAccount(request.params.uid, 'github.com')\\n                    const repos\\n                        await\\n                            _ githubApiCalls.getRepositories(accessToken)\\n                    const reposMeta\\n                        _ repos.map\\n                            =>\\n                                param value\\n                                _ githubUtils.apiRepositoryToMeta(value)\\n                    _ sendSuccess(response, reposMeta)\\n            p cloneRepository\\n                :private\\n                async=>\\n                    param request\\n                        :ref Request\\n                    param response\\n                        :ref Response\\n                    const owner = request.params.owner\\n                    const name = request.params.name\\n                    const branch = request.params.branch\\n                    const kind = request.params.kind\\n                    const accessToken\\n                        await\\n                            _ authManager.getAccessTokenFromAccount(request.params.uid, 'github.com')\\n                    const repo\\n                        await\\n                            _ githubApiCalls.cloneBranch\\n                                {\\n                                    @ owner\\n                                    @ name\\n                                    @ token accessToken\\n                                @ branch\\n                                @ kind\\n                    _ sendSuccess(response, repo)\\n            p commitRepository\\n                :private\\n                async=>\\n                    param request\\n                        :ref Request\\n                    param response\\n                        :ref Response\\n                    const owner = request.params.owner\\n                    const name = request.params.name\\n                    const branch = request.params.branch\\n                    const files\\n                        :ref PackiFiles\\n                        = request.body.files\\n                    _ authManager.getAccessTokenFromAccount(request.params.uid, 'github.com').then\\n                        =>\\n                            param accessToken\\n                            _ githubApiCalls.updateBranch\\n                                @ files\\n                                {\\n                                    @ owner\\n                                    @ name\\n                                    @ token accessToken\\n                                @ branch\\n                                ._ then\\n                                    =>\\n                                        param repo\\n                                        _ sendSuccess(response, repo)\\n                                ._ catch\\n                                    =>\\n                                        param err\\n                                        _ sendFailure(response, err, 401)\\n                        ._ catch\\n                            =>\\n                                param err\\n                                _ console.log('packi.github.commitRepository.owner.name.err', owner, name, err)\\n                                _ sendFailure(response, err, 501)\\n\"},\"t/v08/express/features/packi/controllers/productions.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    $\\n        var ctrl = {\\n            name: 'Productions',\\n            path: '/api/v1/productions'\\n        }\\n    controller( &ctrl )\\n        $append imports\\n            import fs\\n                from 'fs'\\n            import\\n                @ fsTypes\\n                from '../../filesystem'\\n            import\\n                @ wizziTypes\\n                @ wizziProds\\n                @ WizziFactory\\n                from '../../wizzi'\\n            import\\n                @ PackiFiles\\n                @ TemplateList\\n                @ Template\\n                from '../types'\\n            import\\n                @ file\\n                from 'wizzi'\\n        _ this.router.post\\n            `lit\\n                + /MTreeBuildupScript/:id\\n            @ this.mTreeBuildupScript\\n        _ this.router.post\\n            `lit\\n                + /artifact/:id\\n            @ this.generateArtifact\\n        _ this.router.post\\n            `lit\\n                + /transform/:id/:transformer\\n            @ this.transformModel\\n        _ this.router.post\\n            `lit\\n                + /job\\n            @ this.executeJob\\n        _ this.router.post\\n            `lit\\n                + /wizzify\\n            @ this.wizzify\\n        $append handlers\\n            handler( mTreeBuildupScript )\\n                const id = request.params.id\\n                const files\\n                    :ref PackiFiles\\n                    = request.body\\n                _ wizziProds.mTreeBuildupScript(id, files, {}).then\\n                    =>\\n                        param value\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ mTreeBuildupScript value\\n                    ._ catch\\n                        =>\\n                            param err\\n                            error 'features.packi.controllers.production.mTreeBuildupScript.err', err\\n                            _ sendFailure(response, err, 501)\\n            handler( generateArtifact )\\n                const id = request.params.id\\n                const files\\n                    :ref PackiFiles\\n                    = request.body\\n                _ wizziProds.generateArtifact(id, files).then\\n                    =>\\n                        param value\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ generatedArtifact value\\n                    ._ catch\\n                        =>\\n                            param err\\n                            error 'features.packi.controllers.production.generateArtifact.err', err\\n                            _ sendFailure(response, err, 501)\\n            handler( transformModel )\\n                const id = request.params.id\\n                const transformer = request.params.transformer\\n                const files\\n                    :ref PackiFiles\\n                    = request.body\\n                _ wizziProds.transformModel\\n                    @ id\\n                    @ files\\n                    {\\n                    {\\n                        @ transformer transformer\\n                    ._ then\\n                        =>\\n                            param value\\n                            _ sendSuccess\\n                                @ response\\n                                {\\n                                    @ transformedModel value.transformResult\\n                    ._ catch\\n                        =>\\n                            param err\\n                            error 'features.packi.controllers.production.generateArtifact.err', err\\n                            _ sendFailure(response, err, 501)\\n            handler( executeJob )\\n                const files\\n                    :ref PackiFiles\\n                    = request.body\\n                _ wizziProds.executeJobs(files).then\\n                    async=>\\n                        param fsJson\\n                        const files\\n                            await\\n                                _ WizziFactory.extractGeneratedFiles(fsJson)\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ generatedArtifacts files\\n                    ._ catch\\n                        =>\\n                            param err\\n                            error 'features.packi.controllers.production.executeJob.err', err\\n                            _ sendFailure(response, err, 501)\\n            handler( wizzify )\\n                const id = request.params.id\\n                const files\\n                    :ref PackiFiles\\n                    = request.body\\n                _ wizziProds.wizzify(files).then\\n                    async=>\\n                        param ittfResult\\n                            :ref PackiFiles\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ packiResult ittfResult\\n                    ._ catch\\n                        =>\\n                            param err\\n                            error 'features.packi.controllers.production.wizzify.err', err\\n                            _ sendFailure(response, err, 501)\\n\"},\"t/v08/express/features/packi/controllers/templates.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ Router\\n        @ Request\\n        @ Response\\n        from 'express'\\n    import\\n        as bodyParser\\n        from 'body-parser'\\n    import\\n        @ ControllerType\\n        @ AppInitializerType\\n        from '../../app/types'\\n    import\\n        @ fsTypes\\n        from '../../filesystem'\\n    import\\n        @ PackiFiles\\n        @ TemplateList\\n        @ Template\\n        from '../types'\\n    import\\n        @ sendPromiseResult\\n        @ sendSuccess\\n        @ sendFailure\\n        from '../../../utils/sendResponse'\\n    var jsonParser = bodyParser.json()\\n    export\\n        class TemplatesController\\n            :implements ControllerType\\n            p path\\n                :public\\n                = '/api/v1/templates'\\n            p router\\n                :public\\n                _ Router()\\n            p fsDb\\n                :public\\n                :union\\n                    :ref fsTypes.FsDb\\n                    :undefined\\n            => initialize\\n                param initValues\\n                    :ref AppInitializerType\\n                set this.fsDb = initValues.fsDb\\n                _ this.router.get(this.path, this.getAllTemplates)\\n                _ this.router.get\\n                    `lit\\n                        +\\n                        @ this.path\\n                        + /:id\\n                    @ this.getTemplateById\\n                _ this.router.get\\n                    `lit\\n                        +\\n                        @ this.path\\n                        + /__starter\\n                    @ this.getStarterTemplate\\n                _ this.router.post\\n                    `lit\\n                        +\\n                        @ this.path\\n                        + /:uid/:id\\n                    @ this.saveTemplate\\n            +\\n            p getAllTemplates\\n                :private\\n                async=>\\n                    param request\\n                        :ref Request\\n                    param response\\n                        :ref Response\\n                    _ sendPromiseResult\\n                        :param\\n                            :[\\n                                :string\\n                        @ response\\n                        _\\n                            (\\n                                @expr this.fsDb\\n                                    :as\\n                                        :ref fsTypes.FsDb\\n                            ._ getPackiTemplatesList\\n            +\\n            p getTemplateById\\n                :private\\n                async=>\\n                    param request\\n                        :ref Request\\n                    param response\\n                        :ref Response\\n                    const id = request.params.id\\n                    const template\\n                        await\\n                            _\\n                                (\\n                                    @expr this.fsDb\\n                                        :as\\n                                            :ref fsTypes.FsDb\\n                                ._ getPackiTemplate\\n                                    @ id\\n                    _ sendSuccess(response, template)\\n            +\\n            p getStarterTemplate\\n                :private\\n                async=>\\n                    param request\\n                        :ref Request\\n                    param response\\n                        :ref Response\\n                    const template\\n                        await\\n                            _\\n                                (\\n                                    @expr this.fsDb\\n                                        :as\\n                                            :ref fsTypes.FsDb\\n                                ._ getStarterTemplate\\n                    _ sendSuccess(response, template)\\n            +\\n            p saveTemplate\\n                :private\\n                async=>\\n                    param request\\n                        :ref Request\\n                    param response\\n                        :ref Response\\n                    const id = request.params.id\\n                    const files\\n                        :ref PackiFiles\\n                        = request.body.files\\n                    _\\n                        (\\n                            @expr this.fsDb\\n                                :as\\n                                    :ref fsTypes.FsDb\\n                        ._ savePackiTemplate\\n                            @ id\\n                            @ files\\n                        ._ then\\n                            =>\\n                                param result\\n                                _ sendSuccess(response, result)\\n                        ._ catch\\n                            =>\\n                                param err\\n                                _ sendFailure(response, err, 501)\\n\"},\"t/v08/express/features/packi/mongo/packi.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ Schema\\n        @ Model\\n        @ model\\n        from \\\"mongoose\\\"\\n    import\\n        @ ModelBuilderType\\n        from \\\"../../app/types\\\"\\n    import\\n        @ IPackiModel\\n        from \\\"../types\\\"\\n    const PackiSchema\\n        :ref Schema\\n            :param\\n                :ref IPackiModel\\n        =\\n            new Schema\\n                {\\n                    { userId\\n                        @ type Schema.Types.ObjectId\\n                        @ required true\\n                        @ ref 'User'\\n                    @ repoOwner String\\n                    @ repoName String\\n                    @ clonedAt Date\\n                    @ lastCommitWhenCloned String\\n        # mongoose models creation is centralized\\n        # mongodb calls buildModel() when starting, after connection has been established\\n        # controllers call GetPackiModel() when initialized, after buildModel() has benn called\\n    export\\n        :type PackiModelType\\n            :ref Model\\n                :param\\n                    :ref IPackiModel\\n        # mongoose models creation is centralized\\n        # mongodb calls buildModel() when starting, after connection has been established\\n        # controllers call GetPackiModel() when initialized, after buildModel() has benn called\\n    let packiModel\\n        :ref PackiModelType\\n    export\\n        function GetPackiModel\\n            :return\\n                :ref PackiModelType\\n            return packiModel\\n    export\\n        const PackiModelBuilder\\n            :ref ModelBuilderType\\n            =\\n                {\\n                    @ buildModel\\n                        =>\\n                            set packiModel =\\n                                _ model\\n                                    :param\\n                                        :ref IPackiModel\\n                                    @ \\\"Packi\\\"\\n                                    @ PackiSchema\\n\"},\"t/v08/express/features/packi/mongo/user.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n\"},\"t/v08/express/features/repo/apicalls.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import fetch from 'node-fetch'\\n    +\\n    export\\n        async-function getRepositories\\n            param accessToken\\n                :string\\n            :return\\n                :ref Promise\\n                    :param any\\n            return\\n                _ fetch\\n                    `lit\\n                        + https://api.github.com/user/repos\\n                    _ getOptions(accessToken)\\n                    ._ then\\n                        =>\\n                            param response\\n                            _ response.json()\\n                    ._ then\\n                        =>\\n                            param responseData\\n                            return responseData\\n    +\\n    function getOptions\\n        param accessToken\\n            :string\\n        return\\n            {\\n                @ method 'GET'\\n                @ headers headers(accessToken)\\n    +\\n    function postOptions\\n        param accessToken\\n            :string\\n        return\\n            {\\n                @ method 'POST'\\n                @ headers headers(accessToken)\\n    +\\n    function headers\\n        param accessToken\\n            :string\\n        return\\n            {\\n                @ 'Accept' 'application/vnd.github.v3+json'\\n                @ 'Content-Type' 'application/json'\\n                @ 'Authorization' 'token ' + accessToken\\n\"},\"t/v08/express/features/repo/index.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        as repoTypes\\n        from './types'\\n    import\\n        as repoApiCalls\\n        from './apicalls'\\n    +\\n    export\\n        @ repoTypes\\n        @ repoApiCalls\\n\"},\"t/v08/express/features/repo/types.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    +\\n    export\\n        :type FileDiffKind\\n            :union\\n                :literal '+'\\n                :literal '-'\\n                :literal '<>'\\n    +\\n    export\\n        :type FileDiffItem\\n            :{\\n                :p path\\n                    :string\\n                :p content\\n                    :string\\n    +\\n    export\\n        :type FileDiff\\n            :{\\n                :p kind\\n                    :ref FileDiffKind\\n                :p a\\n                    :optional\\n                    :ref FileDiffItem\\n                :p b\\n                    :optional\\n                    :ref FileDiffItem\\n\"},\"t/v08/express/features/t/authHandler.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params name\\n    $params name\\n    +\\n    p ${name}\\n        :private\\n        async=>\\n            param request\\n                :ref AuthRequest\\n            param response\\n                :ref Response\\n            $hook\\n\"},\"t/v08/express/features/t/catch_fail.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method\\n    $params method\\n    ._ catch\\n        =>\\n            param err\\n                :any\\n            log '${method}.error', err\\n            _ sendFailure\\n                @ response\\n                {\\n                    @ err err\\n                @ 501\\n\"},\"t/v08/express/features/t/catch_reject.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method\\n    $params method\\n    ._ catch\\n        =>\\n            param err\\n                :any\\n            log '${method}.error', err\\n            return reject(err)\\n\"},\"t/v08/express/features/t/controller.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &ctrl\\n    $params &ctrl\\n    import\\n        @ Router\\n        @ Request\\n        @ Response\\n        from 'express'\\n    import\\n        @ ControllerType\\n        @ AppInitializerType\\n        $if ctrl.kind == 'site'\\n            from '../../features/app/types'\\n        $else\\n            from '../../../features/app/types'\\n    $if ctrl.isAuth\\n        import\\n            @ AuthRequest\\n            $if ctrl.kind == 'site'\\n                from '../../features/auth/types'\\n            $else\\n                from '../../../features/auth/types'\\n    $if ctrl.apiSecured || ctrl.webSecured\\n        import\\n            $if ctrl.apiSecured\\n                @ apiSecured\\n            $if ctrl.webSecured\\n                @ webSecured\\n            $if ctrl.kind == 'site'\\n                from '../../middlewares/index'\\n            $else\\n                from '../../../middlewares/index'\\n    import\\n        @ sendHtml\\n        @ sendSuccess\\n        @ sendPromiseResult\\n        @ sendFailure\\n        $if ctrl.kind == 'site'\\n            from '../../utils/sendResponse'\\n        $else\\n            from '../../../utils/sendResponse'\\n    import\\n        @ FcError\\n        @ SYSTEM_ERROR\\n        $if ctrl.kind == 'site'\\n            from '../../utils/error'\\n        $else\\n            from '../../../utils/error'\\n    import\\n        @ statusCode\\n        $if ctrl.kind == 'site'\\n            from '../../utils'\\n        $else\\n            from '../../../utils'\\n    $if ctrl.modelName\\n        import\\n            @ I${ctrl.modelName}\\n            from '../types'\\n    $hook imports\\n    +\\n    function makeHandlerAwareOfAsyncErrors\\n        param handler\\n        return\\n            async-function\\n                param request\\n                    :ref Request\\n                param response\\n                    :ref Response\\n                param next\\n                    :ref Function\\n                log 'makeHandlerAwareOfAsyncErrors called'\\n                try\\n                    await\\n                        _ handler(request, response, next)\\n                    log 'makeHandlerAwareOfAsyncErrors ok'\\n                catch error\\n                    if error instanceof FcError\\n                        _ response.status(statusCode.BAD_REQUEST).send\\n                            {\\n                                @ code error.code\\n                                @ message error.message\\n                                @ data\\n                                    ||\\n                                        + error.data\\n                                        {\\n                    else\\n                        const fcError = new FcError(SYSTEM_ERROR)\\n                        _ response.status(statusCode.BAD_REQUEST).send\\n                            {\\n                                @ code fcError.code\\n                                @ message error.message\\n                                @ data\\n                                    ||\\n                                        + fcError.data\\n                                        {\\n    +\\n    export\\n        class ${ctrl.name}Controller\\n            :implements ControllerType\\n            +\\n            p path\\n                :public\\n                = '${ctrl.path}'\\n            +\\n            p router\\n                :public\\n                _ Router()\\n            $if ctrl.modelName\\n                +\\n                p ${ctrl.modelName}Model\\n                    :public\\n                    :ref ${ctrl.modelName}ModelType\\n            +\\n            $hook properties\\n            +\\n            => initialize\\n                param initValues\\n                    :ref AppInitializerType\\n                warn 'Entering ${ctrl.name}Controller.initialize'\\n                $if ctrl.modelName\\n                    set this.${ctrl.modelName}Model\\n                        _ Get${ctrl.modelName}Model\\n                $hook\\n            $hook handlers\\n\"},\"t/v08/express/features/t/handler.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params name\\n    $params name\\n    +\\n    p ${name}\\n        :private\\n        async=>\\n            param request\\n                :ref Request\\n            param response\\n                :ref Response\\n            $hook\\n\"},\"t/v08/express/features/wizzi/controllers/t/productions/resolveContexts.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    function resolveContexts\\n        param contextItems\\n            :[\\n                :ref MetaContext\\n        const promises: Promise<any>[] = []\\n        _ contextItems.map\\n            =>\\n                param contextItem\\n                _ promises.push\\n                    new Promise\\n                        =>\\n                            param resolve\\n                            param reject\\n                            _ resolveContext\\n                                @ contextItem\\n                                ._ then\\n                                    =>\\n                                        param context\\n                                        _ resolve\\n                                            {\\n                                                @ name contextItem.name\\n                                                @ value context\\n                                ._ catch\\n                                    =>\\n                                        param err\\n                                        _ reject\\n                                            @ err\\n        return\\n            new Promise\\n                =>\\n                    param resolve\\n                    param reject\\n                    _ Promise.all\\n                        @ promises\\n                        ._ then\\n                            =>\\n                                param items\\n                                const context: any = {}\\n                                _ items.map\\n                                    =>\\n                                        param value\\n                                            :any\\n                                        set context[value.name] = value.value\\n                                _ resolve\\n                                    @ context\\n                        ._ catch\\n                            =>\\n                                param err\\n                                _ reject(err)\\n    function resolveContext\\n        param contextItem\\n            :ref MetaContext\\n        if contextItem.type == 'json-packiFiles'\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        _ wizziProds.generateArtifact\\n                            @ contextItem.sourcePath as string\\n                            @ contextItem.sourceFiles as packiTypes.PackiFiles\\n                            ._ then\\n                                =>\\n                                    param value\\n                                        :any\\n                                    _ resolve(value)\\n                            ._ catch\\n                                =>\\n                                    param err\\n                                    _ reject(err)\\n        elif contextItem.type == 'json-fsIttf'\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        _ wizziProds.generateArtifactFs\\n                            _ path.join\\n                                @ config.ittfPath\\n                                @ contextItem.sourcePath as string\\n                            ._ then\\n                                =>\\n                                    param value\\n                                        :any\\n                                    _ resolve(value)\\n                            ._ catch\\n                                =>\\n                                    param err\\n                                    log myname + '.resolveContext', contextItem.type, 'err', err\\n                                    _ reject(err)\\n        elif contextItem.type == 'json-fsFile'\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        const json\\n                            _ file.readJSON\\n                                @ contextItem.sourcePath as string\\n                        _ resolve(json)\\n        elif contextItem.type == 'json-value'\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        _ resolve(contextItem.value)\\n        elif contextItem.type == 'wizziModel-packiFiles'\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        _ wizziProds.loadModel\\n                            @ contextItem.sourcePath as string\\n                            @ contextItem.sourceFiles as packiTypes.PackiFiles\\n                            ._ then\\n                                =>\\n                                    param value\\n                                        :any\\n                                    _ resolve(value)\\n                            ._ catch\\n                                =>\\n                                    param err\\n                                        :any\\n                                    _ reject(err)\\n        elif contextItem.type == 'wizziModel-fsIttf'\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        _ wizziProds.loadModelFs\\n                            _ path.join\\n                                @ config.ittfPath\\n                                @ contextItem.sourcePath as string\\n                            {\\n                            ._ then\\n                                =>\\n                                    param value\\n                                        :any\\n                                    _ resolve(value)\\n                            ._ catch\\n                                =>\\n                                    param err\\n                                        :any\\n                                    _ reject(err)\\n        else\\n            throw new Error('Invalid contextItem type: ' + contextItem.type)\\n\"},\"t/v08/express/services/filesystem.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ JsonComponents\\n        @ jsonfile\\n        @ FsJsonDocumentManager\\n        from 'wizzi-repo'\\n    import path from 'path'\\n    import wizzi from 'wizzi'\\n    import\\n        @ ConfigType\\n        from '../features/config'\\n    import\\n        @ fsTypes\\n        from '../features/filesystem'\\n    import\\n        @ rejects\\n        from 'assert'\\n    import\\n        @ FileDef\\n        @ VFile\\n        @ vfile\\n            as createVFileFS\\n        @ VFileFS\\n        from 'wizzi-utils'\\n    import\\n        @ FsDb\\n        @ FsDbResult\\n        from '../features/filesystem/types'\\n    import\\n        @ packiTypes\\n        from '../features/packi'\\n    :type cb\\n        :< T\\n        :=>\\n            :void\\n            param err\\n                :any\\n            param result\\n                :ref T\\n    let vfile\\n        :ref VFile\\n    let docman\\n        :ref FsJsonDocumentManager\\n    let packiTemplatesJsonUri = 'json://root/packi/templates'\\n    let lastTemplatesReload\\n        :number\\n        = 0\\n    let saveConfig\\n        :ref ConfigType\\n    export-default\\n        async-function start\\n            param config\\n                :ref ConfigType\\n            :return\\n                :ref Promise\\n                    :param\\n                        :ref FsDb\\n            set saveConfig = config\\n            const\\n                {\\n                    @ packiTemplatesFolder\\n                = config\\n            var packiTemplatesPath = path.join(__dirname, '..', '..', '..', packiTemplatesFolder)\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param rejects\\n                        _ JsonComponents.createFsJson\\n                            [\\n                            =>\\n                                param err\\n                                param fsJson\\n                                if err\\n                                    _ rejects(err)\\n                                _ jsonfile\\n                                    {\\n                                        @ fsJson\\n                                    =>\\n                                        param err\\n                                        param result\\n                                        set vfile = result\\n                                        set docman = JsonComponents.createDocumentManager(fsJson)\\n                                        _ docman.uploadFolder\\n                                            @ packiTemplatesPath\\n                                            @ packiTemplatesJsonUri\\n                                            =>\\n                                                param err\\n                                                param result\\n                                                if err\\n                                                    _ rejects(err)\\n                                                set lastTemplatesReload = new Date().getTime()\\n                                                const list = FsDbDriver.getPackiTemplatesList()\\n                                                _ list.then\\n                                                    =>\\n                                                        param value\\n                                                        _ resolve(FsDbDriver)\\n                                                    ._ catch\\n                                                        =>\\n                                                            param err\\n                                                            _ console.log('filesystem.start.Error retrieving packi templates', err)\\n    +\\n    const FsDbDriver\\n        :ref fsTypes.FsDb\\n        =\\n            {\\n                @ getPackiTemplatesList\\n                    async-function\\n                        :return\\n                            :ref Promise\\n                                :param\\n                                    :[\\n                                        :string\\n                        return\\n                            new Promise\\n                                =>\\n                                    param resolve\\n                                    param rejects\\n                                    _ reloadTemplates\\n                                        =>\\n                                            _ vfile.getFolders\\n                                                @ packiTemplatesJsonUri\\n                                                {\\n                                                    @ deep false\\n                                                =>\\n                                                    param err\\n                                                    param result\\n                                                    if err\\n                                                        _ rejects(err)\\n                                                    const ret\\n                                                        :[\\n                                                            :string\\n                                                        = []\\n                                                    _ result.forEach\\n                                                        =>\\n                                                            param item\\n                                                            if item.relPath.startsWith('__') == false\\n                                                                _ ret.push(item.relPath)\\n                                                    _ resolve(ret)\\n                @ getPackiTemplate\\n                    async-function\\n                        param id\\n                            :string\\n                        :return\\n                            :ref Promise\\n                                :param\\n                                    :[\\n                                        :ref FileDef\\n                        return\\n                            new Promise\\n                                =>\\n                                    param resolve\\n                                    param rejects\\n                                    _ reloadTemplates\\n                                        =>\\n                                            _ vfile.getFiles\\n                                                `lit\\n                                                    +\\n                                                    @ packiTemplatesJsonUri\\n                                                    + /\\n                                                    @ id\\n                                                    +\\n                                                {\\n                                                    @ deep true\\n                                                    @ documentContent true\\n                                                =>\\n                                                    param err\\n                                                    param result\\n                                                    if err\\n                                                        _ rejects(err)\\n                                                    _ resolve(result)\\n                @ getStarterTemplate\\n                    async-function\\n                        :return\\n                            :ref Promise\\n                                :param\\n                                    :[\\n                                        :ref FileDef\\n                        return\\n                            new Promise\\n                                =>\\n                                    param resolve\\n                                    param rejects\\n                                    _ reloadTemplates\\n                                        =>\\n                                            _ vfile.getFiles\\n                                                `lit\\n                                                    +\\n                                                    @ packiTemplatesJsonUri\\n                                                    + /__starter\\n                                                {\\n                                                    @ deep true\\n                                                    @ documentContent true\\n                                                =>\\n                                                    param err\\n                                                    param result\\n                                                    if err\\n                                                        _ rejects(err)\\n                                                    _ resolve(result)\\n                @ savePackiTemplate\\n                    async-function\\n                        param id\\n                            :string\\n                        param files\\n                            :ref packiTypes.PackiFiles\\n                        :return\\n                            :ref Promise\\n                                :param\\n                                    :ref FsDbResult\\n                        const\\n                            {\\n                                @ packiTemplatesFolder\\n                            = saveConfig\\n                        var templateFolder = path.join(__dirname, '..', '..', '..', packiTemplatesFolder, id)\\n                        try\\n                            let result\\n                                await\\n                                    _ deleteFolder(templateFolder)\\n                            await\\n                                _ asyncForEach\\n                                    _ Object.keys(files)\\n                                    async=>\\n                                        param file\\n                                            :string\\n                                        let result\\n                                            await\\n                                                _ writeFile(path.join(templateFolder, file), files[file].contents)\\n                            return\\n                                _ Promise.resolve\\n                                    {\\n                                        @ writtenCount Object.keys(files).length\\n                        catch err\\n                            _ console.log('filesystem.savePackiTemplate.err: ', err)\\n                            return Promise.reject(err)\\n    +\\n    function deleteFolder\\n        param folderPath\\n            :string\\n        :return\\n            :ref Promise\\n                :param boolean\\n        return\\n            new Promise\\n                =>\\n                    param resolve\\n                    param reject\\n                    _ createVFileFS().deleteFolder\\n                        @ folderPath\\n                        =>\\n                            param err\\n                            param result\\n                            if err\\n                                _ console.log('filesystem.deleteFolder.err', err)\\n                                return reject(err)\\n                            _ resolve(true)\\n    +\\n    function writeFile\\n        param filePath\\n            :string\\n        param content\\n            :string\\n        :return\\n            :ref Promise\\n                :param boolean\\n        return\\n            new Promise\\n                =>\\n                    param resolve\\n                    param reject\\n                    _ createVFileFS().write\\n                        @ filePath\\n                        @ content\\n                        =>\\n                            param err\\n                            param result\\n                            if err\\n                                _ console.log('filesystem.writeFile.err', err)\\n                                return reject(err)\\n                            _ resolve(true)\\n    +\\n    function reloadTemplates\\n        param callback\\n            :ref Function\\n        if (new Date().getTime() - lastTemplatesReload) > 60 * 1000\\n            _ start(saveConfig).then\\n                =>\\n                    set lastTemplatesReload = new Date().getTime()\\n                    _ callback()\\n        else\\n            _ callback()\\n    +\\n    async-function asyncForEach\\n        param array\\n            :[\\n                :string\\n        param callback\\n            :ref Function\\n        for let index = 0; index < array.length; index++\\n            await\\n                _ callback(array[index], index, array)\\n\"},\"t/v08/express/services/wizzi/config.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import path from 'path'\\n    import\\n        @ WizziConfigType\\n        from './types'\\n    export\\n        function getConfigValues\\n            :return\\n                :ref WizziConfigType\\n            param ittfPath\\n                :string\\n            param dataPath\\n                :string\\n            return\\n                {\\n                    @ repoBasePath path.join(ittfPath, 'repo')\\n                    @ metaBasePath path.join(dataPath, 'meta')\\n                    @ studioBasePath path.join(dataPath, 'studio')\\n                    @ jobsBasePath path.join(dataPath, 'jobs')\\n                    @ crawlBasePath path.join(dataPath, 'crawl')\\n                    @ githubBasePath path.join(dataPath, 'github')\\n                    @ cheatsheetsBasePath path.join(dataPath, 'models', 'cheatsheets')\\n                    @ siteMetaBasePath path.join(dataPath, 'models', 'json')\\n                    @ jsonDataMetaBasePath path.join(dataPath, 'models', 'sitemaps')\\n                    @ storeKind 'filesystem'\\n                    @ plugins\\n                        [\\n                            @ 'wizzi-core'\\n                            @ 'wizzi-meta'\\n                            @ 'wizzi-js'\\n                            @ 'wizzi-web'\\n                    @ pluginsBasePath 'TODO'\\n\"},\"t/v08/express/services/wizzi/index.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        as path\\n        from 'path'\\n    import\\n        as wizzi\\n        from 'wizzi'\\n    import\\n        @ ConfigType\\n        from '../../features/config'\\n    $if wzCtx.Build.useWizzi && wzCtx.Build.wizzi.useRunner\\n        import wizzifile from './wizzifile'\\n    export-default\\n        async-function start\\n            param config\\n                :ref ConfigType\\n            :return\\n                :ref Promise\\n                    :param void\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        $if wzCtx.Build.useWizzi && wzCtx.Build.wizzi.useRunner\\n                            _ wizzifile.setAppConfig\\n                                @ config\\n                            _ wizzi.startRunnerServer\\n                                {\\n                                    @ cwd __dirname\\n                                    @ wizzifile\\n                                function\\n                                    param err\\n                                    if err\\n                                        return reject(err)\\n                                    _ resolve()\\n                        $else\\n                            # No generation request. Do nothing\\n                            _ resolve()\\n\"},\"t/v08/express/services/wizzi/types.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    export\\n        :type WizziConfigType\\n            :{\\n                :p repoBasePath\\n                    :string\\n                :p metaBasePath\\n                    :string\\n                :p studioBasePath\\n                    :string\\n                :p jobsBasePath\\n                    :string\\n                :p crawlBasePath\\n                    :string\\n                :p githubBasePath\\n                    :string\\n                :p cheatsheetsBasePath\\n                    :string\\n                :p siteMetaBasePath\\n                    :string\\n                :p jsonDataMetaBasePath\\n                    :string\\n                :p storeKind\\n                    :string\\n                :p plugins\\n                    :[\\n                        :string\\n                :p pluginsBasePath\\n                    :string\\n\"},\"t/v08/express/services/wizzi/wizzifile.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import util from 'util'\\n    import path from 'path'\\n    import chokidar from 'chokidar'\\n    import\\n        @ getConfigValues\\n        from './config'\\n    import\\n        @ ConfigType\\n        from '../../features/config'\\n    import\\n        @ WizziConfigType\\n        from './types'\\n    const FACTORY_SITE = 'site'\\n    const MODEL_TICKET_MAINSITE = 'mainsite'\\n    var appConfig\\n        :ref ConfigType\\n    var wizziConfig\\n        :ref WizziConfigType\\n    var runnerModelsFolder\\n        :string\\n    var watcher\\n        :ref chokidar.FSWatcher\\n    const md\\n        :{\\n            :index\\n                :any\\n                param k\\n                    :string\\n        =\\n            {\\n    set md.setAppConfig\\n        function\\n            param config\\n                :ref ConfigType\\n            set appConfig = config\\n            set wizziConfig\\n                _ getConfigValues\\n                    @ appConfig.ittfPath\\n                    @ appConfig.dataPath\\n            set runnerModelsFolder\\n                _ path.join\\n                    @ appConfig.ittfPath\\n                    @ 'meta'\\n                    @ 'models'\\n            set watcher\\n                _ chokidar.watch\\n                    set runnerModelsFolder + '/**/*.ittf'\\n                    {\\n                        @ persistent true\\n            success 'wizzifile is watching', runnerModelsFolder + '/**/*.ittf'\\n    set md.models =\\n        {\\n    let runnerServerInstance\\n        :any\\n        = null\\n    set md.onConfig =\\n        function\\n            param wizziConfig\\n                :any\\n            param callback\\n                :ref Function\\n            _ wizziConfig.set\\n                @ 'meta-html-ittf-path'\\n                _ path.join\\n                    @ appConfig.ittfPath\\n                    @ 'meta'\\n                    @ 'html'\\n                    @ 'index.html.ittf'\\n                #\\n                    #\\n                    # Set the path of the html page\\n                    # for metaediting of IttfDocuments\\n                    #\\n                #\\n                    # *\\n                    # Set the path of the html page\\n                    # for browsing an ittf folder path\\n                    #\\n            _ wizziConfig.set\\n                @ 'meta-folder-ittf-path'\\n                _ path.join\\n                    @ appConfig.ittfPath\\n                    @ 'meta'\\n                    @ 'folder'\\n                    @ 'index.html.ittf'\\n                #\\n                    # *\\n                    # Set the path of the html page\\n                    # for browsing an ittf folder path\\n                    #\\n                #\\n                    #\\n                    # Set the path of the html page\\n                    # for simple text editing of non IttfDocuments\\n                    #\\n            _ wizziConfig.set\\n                @ 'meta-html-text-path'\\n                _ path.join\\n                    @ appConfig.ittfPath\\n                    @ 'meta'\\n                    @ 'text'\\n                    @ 'index.html.ittf'\\n                #\\n                    #\\n                    # Set the path of the html page\\n                    # for simple text editing of non IttfDocuments\\n                    #\\n            info 'wizzifile.onConfig'\\n            _ callback(null)\\n    +\\n    set md.onStart =\\n        function\\n            param runnerServer\\n                :any\\n            param wizziConfig\\n                :any\\n            param callback\\n                :ref Function\\n            info 'wizzifile.onStart.enter'\\n            set runnerServerInstance = runnerServer\\n            _ runnerServer.registerfsFactory\\n                @ FACTORY_SITE\\n                {\\n                    { plugins\\n                        @ pluginsBaseFolder '${wzCtx.Build.wizzi.pluginsBaseFolder}'\\n                        [ items\\n                            $foreach item in wzCtx.Build.wizzi.plugins\\n                                @ '${item}'\\n            _ runnerServer.registerApi('default', md.defaultApi)\\n            info 'wizzifile.onStart.exit'\\n            _ callback(null)\\n    +\\n    set md.onPrepare =\\n        function\\n            param factoryName\\n                :string\\n            param runnerServer\\n                :any\\n            param wizziConfig\\n                :any\\n            param callback\\n                :ref Function\\n            if factoryName === FACTORY_SITE\\n                _ loadRuntimeModels\\n                    function\\n                        param err\\n                            :any\\n                        if err\\n                            return callback(err)\\n                        const loading = false\\n                        _ console.log('wizzifile.setting watcher', watcher)\\n                        _ watcher.on\\n                            @ 'change'\\n                            =>\\n                                _ console.log('wizzifile.reloading watched')\\n                                _ loadRuntimeModels()\\n                        _ watcher.on\\n                            @ 'add'\\n                            =>\\n                                _ console.log('wizzifile.reloading watched')\\n                                _ loadRuntimeModels()\\n                        return callback()\\n            else\\n                _ callback(null)\\n    +\\n    set md.defaultApi =\\n        function\\n            param name\\n                :string\\n            param query\\n                :string\\n            info 'wizzifile.defaultApi.request', name, query\\n            if name === 'demos'\\n                const model = md.models['mainsite']\\n                return model.getDemosByPath(query)\\n            else\\n                if name === 'categories'\\n                    const model = md.models['mainsite']\\n                    return model.getCategoriesByPath(query)\\n                else\\n                    if name === 'links'\\n                        const model = md.models['mainsite']\\n                        return model.getLinksByPath(query)\\n            throw new Error('wizzifile.defaultApi. Unknown api name: ' + name)\\n    +\\n    function loadRuntimeModels\\n        param callback\\n            :ref Function\\n            :optional\\n        var mainSiteIttfPath = path.join(runnerModelsFolder, 'main.site.ittf')\\n        info 'wizzifile loading', mainSiteIttfPath\\n        _ runnerServerInstance.loadModel\\n            @ FACTORY_SITE\\n            @ MODEL_TICKET_MAINSITE\\n            @ 'site'\\n            @ mainSiteIttfPath\\n            {\\n            function\\n                param err\\n                    :any\\n                param wizziModel\\n                    :any\\n                if err\\n                    if callback\\n                        return callback(err)\\n                    else\\n                        throw err\\n                set md.models[MODEL_TICKET_MAINSITE] = wizziModel\\n                info 'wizzifile loaded', mainSiteIttfPath\\n                if callback\\n                    _ callback(null)\\n    export-default md\\n\"},\"t/v08/express/site/t/authHandler.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params name\\n    $params name\\n    +\\n    p ${name}\\n        :private\\n        async=>\\n            param request\\n                :ref AuthRequest\\n            param response\\n                :ref Response\\n            $hook\\n\"},\"t/v08/express/site/t/controller.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &ctrl\\n    $params &ctrl\\n    import\\n        @ Router\\n        @ Request\\n        @ Response\\n        from 'express'\\n    import\\n        @ ControllerType\\n        @ AppInitializerType\\n        $if ctrl.kind == 'site'\\n            from '../../features/app/types'\\n        $else\\n            from '../../../features/app/types'\\n    $if ctrl.isAuth\\n        import\\n            @ AuthRequest\\n            $if ctrl.kind == 'site'\\n                from '../../features/auth/types'\\n            $else\\n                from '../../../features/auth/types'\\n    $if ctrl.apiSecured || ctrl.webSecured\\n        import\\n            $if ctrl.apiSecured\\n                @ apiSecured\\n            $if ctrl.webSecured\\n                @ webSecured\\n            $if ctrl.kind == 'site'\\n                from '../../middlewares/index'\\n            $else\\n                from '../../../middlewares/index'\\n    import\\n        @ sendHtml\\n        @ sendSuccess\\n        @ sendPromiseResult\\n        @ sendFailure\\n        $if ctrl.kind == 'site'\\n            from '../../utils/sendResponse'\\n        $else\\n            from '../../../utils/sendResponse'\\n    import\\n        @ FcError\\n        @ SYSTEM_ERROR\\n        $if ctrl.kind == 'site'\\n            from '../../utils/error'\\n        $else\\n            from '../../../utils/error'\\n    import\\n        @ statusCode\\n        $if ctrl.kind == 'site'\\n            from '../../utils'\\n        $else\\n            from '../../../utils'\\n    $if ctrl.modelName\\n        import\\n            @ I${ctrl.modelName}\\n            from '../types'\\n    $hook imports\\n    +\\n    function makeHandlerAwareOfAsyncErrors\\n        param handler\\n        return\\n            async-function\\n                param request\\n                    :ref Request\\n                param response\\n                    :ref Response\\n                param next\\n                    :ref Function\\n                log 'makeHandlerAwareOfAsyncErrors called'\\n                try\\n                    await\\n                        _ handler(request, response, next)\\n                    log 'makeHandlerAwareOfAsyncErrors ok'\\n                catch error\\n                    if error instanceof FcError\\n                        _ response.status(statusCode.BAD_REQUEST).send\\n                            {\\n                                @ code error.code\\n                                @ message error.message\\n                                @ data\\n                                    ||\\n                                        + error.data\\n                                        {\\n                    else\\n                        const fcError = new FcError(SYSTEM_ERROR)\\n                        _ response.status(statusCode.BAD_REQUEST).send\\n                            {\\n                                @ code fcError.code\\n                                @ message error.message\\n                                @ data\\n                                    ||\\n                                        + fcError.data\\n                                        {\\n    +\\n    export\\n        class ${ctrl.name}Controller\\n            :implements ControllerType\\n            +\\n            p path\\n                :public\\n                = '${ctrl.path}'\\n            +\\n            p router\\n                :public\\n                _ Router()\\n            $if ctrl.modelName\\n                +\\n                p ${ctrl.modelName}Model\\n                    :public\\n                    :ref ${ctrl.modelName}ModelType\\n            +\\n            $hook properties\\n            +\\n            => initialize\\n                param initValues\\n                    :ref AppInitializerType\\n                warn 'Entering ${ctrl.name}Controller.initialize'\\n                $if ctrl.modelName\\n                    set this.${ctrl.modelName}Model\\n                        _ Get${ctrl.modelName}Model\\n                $hook\\n            $hook handlers\\n\"},\"t/v08/express/site/t/handler.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params name\\n    $params name\\n    +\\n    p ${name}\\n        :private\\n        async=>\\n            param request\\n                :ref Request\\n            param response\\n                :ref Response\\n            $hook\\n\"},\"t/v08/mongo/model.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ Schema\\n        @ Model\\n        @ model\\n        from \\\"mongoose\\\"\\n    import\\n        @ ModelBuilderType\\n        from \\\"../../app/types\\\"\\n    import\\n        @ I${md.Name}Model\\n        from \\\"../types\\\"\\n    +\\n    # see https://mongoosejs.com/docs/schematypes.html\\n    +\\n    const ${md.Name}Schema\\n        new Schema\\n            :param I${md.Name}Model\\n            {\\n                $foreach field in md.fields\\n                    $if field.type == 'arrayRef'\\n                        [ ${field.name}\\n                            {\\n                                @ type Schema.Types.ObjectId\\n                                @ ref '${field.refSchema}'\\n                    $elif field.type == 'objectRef'\\n                        { ${field.name}\\n                            @ type Schema.Types.ObjectId\\n                            @ ref '${field.refSchema}'\\n                    $elif field.type != 'oid'\\n                        { ${field.name}\\n                            $if field.type == 'string'\\n                                @ type String\\n                            $elif field.type == 'number' || field.type == 'integer' || field.type == 'float'\\n                                @ type Number\\n                            $elif field.type == 'date'\\n                                @ type Date\\n                            $elif field.type == 'buffer'\\n                                @ type Buffer\\n                            $elif field.type == 'boolean'\\n                                @ type Boolean\\n                            $elif field.type == 'mixed'\\n                                @ type Mixed\\n                            $elif field.type == 'id'\\n                                @ type ObjectId\\n                            $elif field.type == 'array'\\n                                @ type Array\\n                            $elif field.type == 'decimal'\\n                                @ type Decimal128\\n                            $elif field.type == 'map'\\n                                @ type Map\\n                            $elif field.type == 'schema'\\n                                @ type Schema\\n                            $elif field.type == 'jsonstring'\\n                                @ type: String\\n                                @ get\\n                                    function\\n                                        param data\\n                                        try\\n                                            return JSON.parse(data)\\n                                        catch\\n                                            return data\\n                                @ set\\n                                    function\\n                                        param data\\n                                        return JSON.stringify(data)\\n                            $if field.required\\n                                @ required true\\n                            $if field.unique || field.sparse\\n                                { index\\n                                    $if field.unique\\n                                        @ unique true\\n                                    $if field.sparse\\n                                        @ sparse true\\n                $if md.setUpdatedAt\\n                    { updated_at\\n                        @ type Date\\n            {\\n                @ collection '${md.collectionName}'\\n    $if md.setUpdatedAt\\n        _ ${md.Name}Schema.pre\\n            @ 'save'\\n            function\\n                param next\\n                set this.updated_at = new Date()\\n                _ next()\\n    $if md.indexes\\n        # see https://docs.mongodb.com/manual/core/index-compound/\\n        $foreach index in md.indexes\\n            $if index.fields.length > 1\\n                _ ${md.Name}Schema.index\\n                    {\\n                        $foreach field in index.fields\\n                            @ ${field.name} 1\\n                    {\\n                        $if index.unique\\n                            @ unique true\\n                        $if index.sparse\\n                            @ sparse true\\n    +\\n    export\\n        :type ${md.Name}ModelType\\n            :ref Model\\n                :param\\n                    :ref I${md.Name}Model\\n    +\\n    let ${md.name}Model\\n        :ref ${md.Name}ModelType\\n    +\\n    export\\n        function Get${md.Name}Model\\n            :return\\n                :ref ${md.Name}ModelType\\n            return ${md.name}Model\\n    +\\n    export\\n        const ${md.Name}ModelBuilder\\n            :ref ModelBuilderType\\n            =\\n                {\\n                    @ buildModel\\n                        =>\\n                            set ${md.name}Model =\\n                                _ model\\n                                    :param\\n                                        :ref I${md.Name}Model\\n                                    @ '${md.Name}'\\n                                    @ ${md.Name}Schema\\n            # mongoose models creation is centralized at the app level\\n            # after connection has been established, the mongodb service calls buildModel(),\\n            # then the controllers when initializing call Get${md.Name}Model()\\n\"},\"t/v08/mongo/modelcontroller.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    $\\n        var ctrl = {\\n            name: md.controllerName,\\n            path: md.controllerPath,\\n            modelName: md.Name\\n        }\\n    v08/ts/controller( &ctrl )\\n        _ this.router.get('/', this.get${md.Names})\\n        _ this.router.post('/', this.addNew${md.Name})\\n        _ this.router.get('/:id', this.get${md.Name}ById)\\n        $if md.fkey\\n            _ this.router.get('/${md.fkey}/:${md.fkey}', this.get${md.Name}By_${md.fkey})\\n        $foreach field in md.fields\\n            $if field.unique\\n                _ this.router.get('/${field.name}/:${field.name}', this.get${md.Name}By_${field.name})\\n            $elif field.type == 'arrayRef'\\n                _ this.router.post('/${field.path}/:id/:${field.path}', this.add_${field.path})\\n                _ this.router.delete('/${field.path}/:id/:${field.path}', this.remove_${field.path})\\n        $if md.indexes\\n            $foreach index in md.indexes\\n                $if index.fields.length > 1\\n                    _ this.router.get\\n                        `lit\\n                            $foreach field in index.fields\\n                                + /:${field.name}\\n                        @ this.get${md.Name}By_${index.name}\\n        _ this.router.put('/:id', this.update${md.Name})\\n        _ this.router.delete('/:id', this.delete${md.Name})\\n        $append imports\\n            import\\n                @ ${md.Name}ModelType\\n                @ Get${md.Name}Model\\n                from '../mongo/${md.name}'\\n        $append handlers\\n            v08/ts/handler( addNew${md.Name} )\\n                let new${md.Name} = new this.${md.Name}Model(request.body)\\n                _ new${md.Name}.save\\n                    =>\\n                        param err\\n                        param ${md.name}\\n                        if err\\n                            _ sendFailure\\n                                @ response\\n                                @ err\\n                                @ 501\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ data ${md.name}\\n            v08/ts/handler( get${md.Names} )\\n                _ this.${md.Name}Model.find\\n                    {\\n                    =>\\n                        param err\\n                        param ${md.name}\\n                        if err\\n                            _ sendFailure\\n                                @ response\\n                                @ err\\n                                @ 501\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ data ${md.name}\\n            v08/ts/handler( get${md.Name}ById )\\n                _ this.${md.Name}Model.findById\\n                    @ request.params.id\\n                    =>\\n                        param err\\n                            :any\\n                        param ${md.name}\\n                            :ref I${md.Name}\\n                        if err\\n                            _ sendFailure\\n                                @ response\\n                                @ err\\n                                @ 501\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ data ${md.name}\\n            $if md.fkey\\n                v08/ts/handler( get${md.Name}By_${md.fkey} )\\n                    _ this.${md.Name}Model.find\\n                        {\\n                            @ _id request.params.id\\n                            @ ${md.fkey} request.params.${md.fkey}\\n                        =>\\n                            param err\\n                            param ${md.name}\\n                            if err\\n                                _ sendFailure\\n                                    @ response\\n                                    @ err\\n                                    @ 501\\n                            _ sendSuccess\\n                                @ response\\n                                {\\n                                    @ data ${md.name}\\n            $foreach field in md.fields\\n                $if field.unique\\n                    v08/ts/handler( get${md.Name}By_${field.name} )\\n                        _ this.${md.Name}Model.find\\n                            {\\n                                @ ${field.name} request.params.${field.name}\\n                            =>\\n                                param err\\n                                param ${md.name}\\n                                if err\\n                                    _ sendFailure\\n                                        @ response\\n                                        @ err\\n                                        @ 501\\n                                _ sendSuccess\\n                                    @ response\\n                                    {\\n                                        @ data ${md.name}\\n                $elif field.type == 'arrayRef'\\n                    v08/ts/handler( add_${field.path}\\n                        _ this.${md.Name}Model.updateOne\\n                            {\\n                                @ _id request.params.id\\n                                { $push\\n                                    { ${field.name}\\n                                        @ _id request.params.${field.path}\\n                            =>\\n                                param err\\n                                    :any\\n                                if err\\n                                    _ sendFailure\\n                                        @ response\\n                                        @ err\\n                                        @ 501\\n                                _ sendSuccess\\n                                    @ response\\n                                    {\\n                                        @ message 'Successfully added ${field.path} to ${md.Name}!'\\n                    v08/ts/handler( remove_${field.path}\\n                        _ this.${md.Name}Model.updateOne\\n                            {\\n                                @ _id request.params.id\\n                                { $pull\\n                                    { ${field.name}\\n                                        @ _id request.params.${field.path}\\n                            =>\\n                                param err\\n                                    :any\\n                                if err\\n                                    _ sendFailure\\n                                        @ response\\n                                        @ err\\n                                        @ 501\\n                                _ sendSuccess\\n                                    @ response\\n                                    {\\n                                        @ message 'Successfully deleted ${field.path} from ${md.Name}!'\\n            $if md.indexes\\n                $foreach index in md.indexes\\n                    $if index.fields.length > 1\\n                        v08/ts/handler( get${md.Name}By_${index.name} )\\n                            _ this.${md.Name}Model.find\\n                                {\\n                                    $foreach field in index.fields\\n                                        @ ${field.name} request.params.${field.name}\\n                                =>\\n                                    param err\\n                                    param ${md.name}\\n                                    if err\\n                                        _ sendFailure\\n                                            @ response\\n                                            @ err\\n                                            @ 501\\n                                    _ sendSuccess\\n                                        @ response\\n                                        {\\n                                            @ data ${md.name}\\n            v08/ts/handler( update${md.Name} )\\n                # Note that update(), updateMany(), findOneAndUpdate(), etc. do not execute save() middleware.\\n                # If you need save middleware and full validation, first query for the document and then save() it.\\n                _ this.${md.Name}Model.findOneAndUpdate\\n                    {\\n                        @ _id request.params.id\\n                    @ request.body\\n                    {\\n                        @ new true\\n                    =>\\n                        param err\\n                        param ${md.name}\\n                        if err\\n                            _ sendFailure\\n                                @ response\\n                                @ err\\n                                @ 501\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ data ${md.name}\\n            v08/ts/handler( delete${md.Name} )\\n                _ this.${md.Name}Model.remove\\n                    {\\n                        @ _id request.params.id\\n                    =>\\n                        param err\\n                        if err\\n                            _ sendFailure\\n                                @ response\\n                                @ err\\n                                @ 501\\n                        _ sendSuccess\\n                            @ response\\n                            {\\n                                @ message 'Successfully deleted ${md.name}!'\\n\"},\"t/v08/mongo/type.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    export\\n        :type I${md.Name}\\n            :{\\n                $foreach field in md.fields\\n                    $if field.type != 'oid'\\n                        :p ${field.name}\\n                            $if field.type == 'date'\\n                                :ref Date\\n                            $elif ['number','integer','float','decimal'].indexOf(field.type) > -1\\n                                :number\\n                            $elif field.type == 'arrayRef'\\n                                :[\\n                                    :ref I${field.refSchema}\\n                            $elif field.type == 'objectRef'\\n                                :ref I${field.refSchema}\\n                            $else\\n                                :string\\n                $if md.setUpdatedAt\\n                    :p updated_at\\n                        :ref Date\\n    export\\n        :interface I${md.Name}Model\\n            :extends I${md.Name}\\n            :extends Document\\n\"},\"t/v08/mongo/crud/delete_api.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    +\\n    export\\n        async-function delete${md.Name}\\n            $if md.update_delete_by_id\\n                param id\\n                    :string\\n            $foreach item in md.fields\\n                param ${item.name}\\n                    $if item.type == 'date'\\n                        :ref Date\\n                    $elif item.type == 'buffer'\\n                        :ref Buffer\\n                    $elif item.type == 'object'\\n                        :{\\n                    $elif item.type == 'array'\\n                        :[\\n                    $else\\n                        :${item.type}\\n                    :optional\\n            :return\\n                :ref Promise\\n                    :param\\n                        :ref CRUDResult\\n            +\\n            _ console.log\\n                @ myname\\n                @ 'delete${md.Name}'\\n                $foreach item in md.query\\n                    @ ${item.name}\\n            +\\n            const ${md.Name} = Get${md.Name}Model()\\n            +\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        +\\n                        let query\\n                            {\\n                                $if md.update_delete_by_id\\n                                    @ _id id\\n                                $else\\n                                    $foreach item in md.query\\n                                        @ ${item.name} ${item.name}\\n                        +\\n                        _ ${md.Name}.deleteOne\\n                            @ query\\n                            =>\\n                                param err\\n                                    :any\\n                                if err\\n                                    log myname, 'delete${md.Name}', '${md.Name}.deleteOne', 'error', err\\n                                    return reject(err)\\n                                _ resolve\\n                                    {\\n                                        @ oper 'delete'\\n                                        @ ok true\\n                                        @ message '${md.descr}'\\n\"},\"t/v08/mongo/crud/create_api.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    +\\n    export\\n        async-function create${md.Name}\\n            $foreach item in md.fields\\n                param ${item.name}\\n                    $if item.type == 'date'\\n                        :ref Date\\n                    $elif item.type == 'buffer'\\n                        :ref Buffer\\n                    $elif item.type == 'object'\\n                        :{\\n                    $elif item.type == 'array'\\n                        :[\\n                    $else\\n                        :${item.type}\\n                    :optional\\n            :return\\n                :ref Promise\\n                    :param\\n                        :ref CRUDResult\\n            +\\n            _ console.log\\n                @ myname\\n                @ 'create${md.Name}'\\n                $foreach item in md.fields\\n                    @ ${item.name}\\n            +\\n            const ${md.Name} = Get${md.Name}Model()\\n            +\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        +\\n                        let query\\n                            {\\n                                $foreach item in md.query\\n                                    @ ${item.name} ${item.name}\\n                        +\\n                        _ ${md.Name}.find\\n                            @ query\\n                            =>\\n                                param err\\n                                    :any\\n                                param result\\n                                    :any\\n                                if err\\n                                    log myname, 'get${md.Name}', '${md.Name}.find', 'error', err\\n                                    return reject(err)\\n                                log myname, 'get${md.Name}', '${md.Name}.find', 'result', result\\n                                if result.length > 0\\n                                    return\\n                                        _ resolve\\n                                            {\\n                                                @ oper 'create'\\n                                                @ ok false\\n                                                @ message '${md.descr} already exists'\\n                                const new${md.Name}\\n                                    new ${md.Name}\\n                                        {\\n                                            $foreach item in md.fields\\n                                                @ ${item.name} ${item.name}\\n                                            $if md.created_at\\n                                                @ created_at new Date()\\n                                            $if md.updated_at\\n                                                @ updated_at new Date()\\n                                _ new${md.Name}.save\\n                                    function\\n                                        param err\\n                                            :any\\n                                        param doc\\n                                            :any\\n                                        if err\\n                                            log myname, 'create${md.Name}', 'new${md.Name}.save', 'error', err\\n                                            return reject(err)\\n                                        return\\n                                            _ resolve\\n                                                {\\n                                                    @ oper 'create'\\n                                                    @ ok true\\n                                                    @ item doc._doc\\n                                                    @ message '${md.descr} created'\\n\"},\"t/v08/mongo/crud/get_api.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    +\\n    export\\n        async-function get${md.Name}\\n            $foreach item in md.query\\n                param ${item.name}\\n                    $if item.type == 'date'\\n                        :ref Date\\n                    $elif item.type == 'buffer'\\n                        :ref Buffer\\n                    $elif item.type == 'object'\\n                        :{\\n                    $elif item.type == 'array'\\n                        :[\\n                    $else\\n                        :${item.type}\\n            :return\\n                :ref Promise\\n                    :param\\n                        :ref CRUDResult\\n            +\\n            _ console.log\\n                @ myname\\n                @ 'get${md.Name}'\\n                $foreach item in md.query\\n                    @ ${item.name}\\n            +\\n            const ${md.Name} = Get${md.Name}Model()\\n            +\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        +\\n                        let query\\n                            {\\n                                $foreach item in md.query\\n                                    @ ${item.name} ${item.name}\\n                        +\\n                        _ ${md.Name}.find\\n                            @ query\\n                            =>\\n                                param err\\n                                    :any\\n                                param result\\n                                    :any\\n                                if err\\n                                    log myname, 'get${md.Name}', '${md.Name}.find', 'error', err\\n                                    return reject(err)\\n                                if result.length == 1\\n                                    return\\n                                        _ resolve\\n                                            {\\n                                                @ oper 'get'\\n                                                @ ok true\\n                                                @ item result[0]\\n                                _ resolve\\n                                    {\\n                                        @ oper 'get'\\n                                        @ ok false\\n                                        @ message '${md.descr} not found'\\n    +\\n    export\\n        async-function get${md.Name}ById\\n            param id\\n                :string\\n            :return\\n                :ref Promise\\n                    :param\\n                        :ref CRUDResult\\n            +\\n            _ console.log\\n                @ myname\\n                @ 'get${md.Name}ById'\\n                @ id\\n            +\\n            const ${md.Name} = Get${md.Name}Model()\\n            +\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        +\\n                        _ ${md.Name}.find\\n                            {\\n                                @ _id id\\n                            =>\\n                                param err\\n                                    :any\\n                                param result\\n                                    :ref I${md.Name}Model[]\\n                                if err\\n                                    log myname, 'get${md.Name}', '${md.Name}.find', 'error', err\\n                                    return reject(err)\\n                                if result.length == 1\\n                                    return\\n                                        _ resolve\\n                                            {\\n                                                @ oper 'get'\\n                                                @ ok true\\n                                                @ item result[0]\\n                                _ resolve\\n                                    {\\n                                        @ oper 'get'\\n                                        @ ok false\\n                                        @ message '${md.descr} not found'\\n\"},\"t/v08/mongo/crud/get_list_api.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    +\\n    export\\n        async-function getList${md.Name}\\n            param options\\n                :any\\n                :optional\\n            :return\\n                :ref Promise\\n                    :param\\n                        :ref CRUDResult\\n            set options = options || {}\\n            +\\n            _ console.log\\n                @ myname\\n                @ 'getList${md.Name}'\\n                @ 'options'\\n                @ options\\n            +\\n            const ${md.Name} = Get${md.Name}Model()\\n            +\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        +\\n                        const query = ${md.Name}.find(options.query);\\n                        if options.limit\\n                            _ query.limit(options.limit);\\n                        if options.sort\\n                            _ query.sort(options.sort);\\n                        _ query.find\\n                            =>\\n                                param err\\n                                    :any\\n                                param result\\n                                    :any\\n                                if err\\n                                    log myname, 'getList${md.Name}', '${md.Name}.find', 'error', err\\n                                    return reject(err)\\n                                const resultItem = []\\n                                foreach item in result\\n                                    const item_obj\\n                                        {\\n                                            @ _id item._id\\n                                            @ id item.id\\n                                            $foreach item in md.fields\\n                                                @ ${item.name} item.${item.name}\\n                                    _ resultItem.push\\n                                        @ item_obj\\n                                _ resolve\\n                                    {\\n                                        @ oper 'getList'\\n                                        @ ok true\\n                                        @ item resultItem\\n\"},\"t/v08/mongo/crud/model.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    import\\n        @ Schema\\n        @ Model\\n        @ model\\n        from \\\"mongoose\\\"\\n    import\\n        @ ModelBuilderType\\n        from \\\"../../app/types\\\"\\n    import\\n        @ I${md.Name}Model\\n        from \\\"../types\\\"\\n    +\\n    const ${md.Name}Schema\\n        :ref Schema\\n            :param\\n                :ref I${md.Name}Model\\n        =\\n            new Schema\\n                {\\n                    $hook fields\\n    +\\n    $hook\\n    +\\n    export\\n        :type ${md.Name}ModelType\\n            :ref Model\\n                :param\\n                    :ref I${md.Name}Model\\n        # mongoose models creation is centralized\\n        # the mongodb service calls buildModel() when starting, after connection has been established\\n        # controllers call Get${md.Name}Model() when initialized, after buildModel() has benn called\\n    +\\n    let ${md.Name}Model\\n        :ref ${md.Name}ModelType\\n    +\\n    export\\n        function Get${md.Name}Model\\n            :return\\n                :ref ${md.Name}ModelType\\n            return ${md.Name}Model\\n    +\\n    export\\n        const ${md.Name}ModelBuilder\\n            :ref ModelBuilderType\\n            =\\n                {\\n                    @ buildModel\\n                        =>\\n                            set ${md.Name}Model =\\n                                _ model\\n                                    :param\\n                                        :ref I${md.Name}Model\\n                                    @ \\\"${md.Name}\\\"\\n                                    @ ${md.Name}Schema\\n\"},\"t/v08/mongo/crud/modeltype.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    +\\n    export\\n        :type I${md.Name}\\n            :{\\n                $hook fields\\n    +\\n    $hook\\n    +\\n    :type I${md.Name}_doc\\n        :{\\n            :p _doc\\n                :ref I${md.Name}\\n    +\\n    export\\n        :interface I${md.Name}Model\\n            :extends I${md.Name}\\n            :extends I${md.Name}_doc\\n            :extends Document\\n\"},\"t/v08/mongo/crud/update_api.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    +\\n    export\\n        async-function update${md.Name}\\n            $if md.update_delete_by_id\\n                param id\\n                    :string\\n            $foreach item in md.fields\\n                param ${item.name}\\n                    $if item.type == 'date'\\n                        :ref Date\\n                    $elif item.type == 'buffer'\\n                        :ref Buffer\\n                    $elif item.type == 'object'\\n                        :{\\n                    $elif item.type == 'array'\\n                        :[\\n                    $else\\n                        :${item.type}\\n                    :optional\\n            :return\\n                :ref Promise\\n                    :param\\n                        :ref CRUDResult\\n            +\\n            _ console.log\\n                @ myname\\n                @ 'update${md.Name}'\\n                $foreach item in md.fields\\n                    @ ${item.name}\\n            +\\n            const ${md.Name} = Get${md.Name}Model()\\n            +\\n            return\\n                new Promise\\n                    =>\\n                        param resolve\\n                        param reject\\n                        +\\n                        const query\\n                            {\\n                                $if md.update_delete_by_id\\n                                    @ _id id\\n                                $else\\n                                    $foreach item in md.query\\n                                        @ ${item.name} ${item.name}\\n                        const update\\n                            :any\\n                            {\\n                        $foreach item in md.fields\\n                            if typeof ${item.name} !== 'undefined'\\n                                set update['${item.name}'] = ${item.name}\\n                        $if md.updated_at\\n                            set update['updated_at'] = new Date()\\n                        +\\n                        _ ${md.Name}.findOneAndUpdate\\n                            @ query\\n                            @ update\\n                            {\\n                            =>\\n                                param err\\n                                    :any\\n                                param result\\n                                    :any\\n                                if err\\n                                    log myname, 'update${md.Name}', '${md.Name}.findOneAndUpdate', 'error', err\\n                                    return reject(err)\\n                                +\\n                                return\\n                                    _ resolve\\n                                        {\\n                                            @ oper 'update'\\n                                            @ ok true\\n                                            @ message '${md.descr} updated'\\n\"},\"t/v08/package/browser.json.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $if wzCtx.Build.useReactCreateApp\\n        { browserslist\\n            [ production\\n                \\\">0.2%\\\"\\n                \\\"not dead\\\"\\n                \\\"not op_mini all\\\"\\n            [ development\\n                \\\"last 1 chrome version\\\"\\n                \\\"last 1 firefox version\\\"\\n                \\\"last 1 safari version\\\"\\n\"},\"t/v08/package/devDependencies.json.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $if wzCtx.Build.useBabel || wzCtx.Build.useWebpack\\n        $if wzCtx.Build.useVExpo\\n            @babel/cli \\\"^7.12.16\\\"\\n            @babel/core \\\"^7.12.16\\\"\\n        $else\\n            @babel/cli \\\"^7.14.5\\\"\\n            @babel/core \\\"^7.13.10\\\"\\n        $if wzCtx.Build.useVExpo\\n            @babel/plugin-proposal-class-properties \\\"^7.12.13\\\"\\n            @babel/plugin-syntax-dynamic-import \\\"^7.8.3\\\"\\n            @babel/plugin-transform-modules-commonjs \\\"^7.12.13\\\"\\n        $if wzCtx.Build.babel.useExtra\\n            @babel/plugin-proposal-class-properties \\\"^7.12.1\\\"\\n            @babel/plugin-proposal-export-namespace-from \\\"^7.12.1\\\"\\n            @babel/plugin-proposal-object-rest-spread \\\"^7.12.1\\\"\\n            @babel/plugin-proposal-throw-expressions \\\"^7.12.1\\\"\\n            @babel/plugin-syntax-dynamic-import \\\"^7.8.3\\\"\\n            @babel/polyfill \\\"^7.12.1\\\"\\n        $if wzCtx.Build.useVExpo\\n            @babel/preset-env \\\"^7.12.16\\\"\\n        $else\\n            @babel/preset-env \\\"^7.13.12\\\"\\n    $if wzCtx.Build.useReact && !!wzCtx.Build.useReactCreateApp == false\\n        $if wzCtx.Build.useVExpo\\n            @babel/preset-react \\\"^7.12.13\\\"\\n        $else\\n            @babel/preset-react \\\"^7.12.13\\\"\\n    $if wzCtx.Build.useTypescript\\n        $if wzCtx.Build.useWebpack || wzCtx.Build.useWebpackApp\\n            $if wzCtx.Build.useVExpo\\n                @babel/preset-typescript \\\"^7.12.16\\\"\\n            $else\\n                @babel/preset-typescript \\\"^7.13.0\\\"\\n    $if wzCtx.Build.useStorybook\\n        @storybook/addon-actions \\\"^6.2.8\\\"\\n        @storybook/addon-essentials \\\"^6.2.8\\\"\\n        @storybook/addon-links \\\"^6.2.8\\\"\\n        @storybook/addon-docs \\\"^6.2.8\\\"\\n        @storybook/react \\\"^6.2.8\\\"\\n    $if wzCtx.Build.useTypescript\\n        $if wzCtx.Build.useExpress && wzCtx.Build.useCompression\\n            @types/compression \\\"^1.7.0\\\"\\n        $if wzCtx.Build.useExpress && wzCtx.Build.useFlash\\n            @types/connect-flash \\\"^0.0.37\\\"\\n        $if wzCtx.Build.useMongoDb\\n        $if wzCtx.Build.useExpress && wzCtx.Build.useCors\\n            @types/cors \\\"^2.8.10\\\"\\n        @types/express \\\"^4.16.1\\\"\\n        $if wzCtx.Build.utils.useEscapeHtml\\n            @types/escape-html \\\"^1.0.1\\\"\\n        $if wzCtx.Build.utils.useGitUrlParse\\n            @types/git-url-parse \\\"^9.0.0\\\"\\n        $if wzCtx.Build.useExpress && wzCtx.Build.express.useHelmet\\n            @types/helmet \\\"^4.0.0\\\"\\n        $if wzCtx.Build.useJest\\n            @types/jest \\\"^26.0.15\\\"\\n        $if wzCtx.Build.utils.useJsCookie\\n            @types/js-cookie \\\"^2.2.0\\\"\\n        $if wzCtx.Build.isClientServer || wzCtx.Build.isServer\\n            @types/jsesc \\\"latest\\\"\\n        $if wzCtx.Build.utils.useJsonToAst\\n            @types/json-to-ast \\\"^2.1.1\\\"\\n        $if wzCtx.Build.utils.useStringifySafe\\n            @types/json-stringify-safe \\\"^5.0.0\\\"\\n        $if wzCtx.Build.useExpress\\n            $if wzCtx.Build.useJwt\\n                @types/express-jwt \\\"^6.0.1\\\"\\n            $if wzCtx.Build.useSession\\n                @types/express-session \\\"^1.15.12\\\"\\n        $if wzCtx.Build.useExpress\\n            $if wzCtx.Build.express.useErrors\\n                @types/http-errors \\\"^1.8.2\\\"\\n        $if wzCtx.Build.utils.useLodash\\n            @types/lodash \\\"^4.14.120\\\"\\n        $if wzCtx.Build.useMarked\\n            $if wzCtx.Build.useVExpo\\n                @types/marked \\\"^1.2.2\\\"\\n            $else\\n                @types/marked \\\"^2.0.2\\\"\\n        $if wzCtx.Build.useMongoDb\\n        $if wzCtx.Build.useExpress && wzCtx.Build.useLogger\\n            $if wzCtx.Build.logger.useMorgan\\n                @types/morgan \\\"^1.9.3\\\"\\n        @types/node \\\"^12.0.0\\\"\\n        $if wzCtx.Build.useGithub\\n            @types/node-fetch \\\"^2.1.6\\\"\\n        $if wzCtx.Build.utils.useParseUrl\\n            @types/parseurl \\\"^1.3.1\\\"\\n        $if (wzCtx.Build.styles && wzCtx.Build.styles.usePalx) || wzCtx.Build.useStorybook\\n            @types/palx \\\"^1.0.1\\\"\\n        $if wzCtx.Build.usePrettier\\n            @types/prettier \\\"^2.0.0\\\"\\n        $if wzCtx.Build.usePrismjs\\n            @types/prismjs \\\"^1.9.0\\\"\\n        $if wzCtx.Build.utils.useQueryString\\n            @types/query-string \\\"^5.1.0\\\"\\n        $if wzCtx.Build.useReact\\n            $if wzCtx.Build.useTypescript\\n                $if wzCtx.Build.react.useV16\\n                    @types/react \\\"^16.8.2\\\"\\n                    @types/react-dom \\\"^16.8.0\\\"\\n                $if wzCtx.Build.react.useV17\\n                    @types/react \\\"^17.0.3\\\"\\n                    @types/react-dom \\\"^17.0.3\\\"\\n                $else\\n                    @types/react \\\"^17.0.6\\\"\\n                    @types/react-dom \\\"^17.0.6\\\"\\n                $if wzCtx.Build.react.useDate\\n                    @types/react-datepicker \\\"^3.1.8\\\"\\n                $if wzCtx.Build.react.useRedux\\n                    @types/react-redux \\\"^7.0.1\\\"\\n                $if wzCtx.Build.react.useRouter\\n                    @types/react-router-dom \\\"^4.3.1\\\"\\n                $if wzCtx.Build.react.useSelect\\n                    @types/react-select \\\"^4.0.15\\\"\\n                $if wzCtx.Build.react.useSyntaxHighlighter\\n                    @types/react-syntax-highlighter \\\"^13.5.1\\\"\\n                $if wzCtx.Build.react.useTextareaAutosize\\n                    @types/react-textarea-autosize \\\"^4.3.3\\\"\\n                $if wzCtx.Build.react.useVirtualized\\n                    @types/react-virtualized \\\"^9.18.12\\\"\\n        $if wzCtx.Build.useRegeneratorRuntime\\n            @types/regenerator-runtime \\\"^0.13.0\\\"\\n        $if wzCtx.Build.utils.useSanitizeHtml\\n            @types/sanitize-html \\\"^1.18.2\\\"\\n        $if wzCtx.Build.useStyledComponents\\n            @types/styled-components \\\"^5.1.7\\\"\\n        $if wzCtx.Build.useStyledSystem\\n            @types/styled-system \\\"^5.1.11\\\"\\n            @types/styled-system__theme-get \\\"^5.0.1\\\"\\n        $if wzCtx.Build.useStorybook\\n            @types/storybook__react \\\"^5.2.1\\\"\\n        $if wzCtx.Build.useWebpack || wzCtx.Build.useWebpackApp\\n            $if wzCtx.Build.useVExpo\\n            $else\\n                @types/webpack \\\"^5.28.0\\\"\\n                @types/webpack-dev-middleware \\\"^4.1.2\\\"\\n                $if wzCtx.Build.webpack.useDevServer\\n                    @types/webpack-dev-server \\\"^4.10.0\\\"\\n        $if wzCtx.Build.useLint\\n            @typescript-eslint/parser \\\"^5.33.0\\\"\\n            @typescript-eslint/eslint-plugin \\\"^5.33.0\\\"\\n    $if wzCtx.Build.useLint\\n        babel-eslint \\\"^8.2.3\\\"\\n    $if wzCtx.Build.useTest && wzCtx.Build.test.useJest\\n        babel-jest \\\"^23.4.2\\\"\\n    $if wzCtx.Build.useBabel || wzCtx.Build.useWebpack\\n        babel-loader \\\"^8.2.2\\\"\\n    $if wzCtx.Build.useBabel || wzCtx.Build.useWebpack\\n        babel-plugin-add-module-exports \\\"^1.0.4\\\"\\n    $if wzCtx.Build.isClientServer\\n        babel-plugin-file-loader \\\"latest\\\"\\n    $if (wzCtx.Build.useBabel || wzCtx.Build.useWebpack) && wzCtx.Build.utils.useLodash\\n        babel-plugin-lodash \\\"^3.3.4\\\"\\n    $if wzCtx.Build.useBabel\\n        $if wzCtx.Build.useWebpack\\n            $if wzCtx.Build.webpack.useCodeSplitting\\n                babel-plugin-webpack-chunkname \\\"^1.2.0\\\"\\n    $if wzCtx.Build.usePrismjs\\n        babel-plugin-prismjs \\\"^2.0.1\\\"\\n    $if wzCtx.Build.useExpress && wzCtx.Build.useTypescript\\n        copyfiles \\\"^2.4.1\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useCopy\\n            copy-webpack-plugin \\\"^4.5.1\\\"\\n    $if (wzCtx.Build.useWebpack && wzCtx.Build.webpack.useCss) || wzCtx.Build.useWebpackApp\\n        css-loader \\\"^5.0.1\\\"\\n        $if wzCtx.Build.useTypescript\\n            css-modules-typescript-loader \\\"^4.0.1\\\"\\n    $if wzCtx.Build.useEnvCmd\\n        env-cmd \\\"^10.1.0\\\"\\n    $if wzCtx.Build.useTest && wzCtx.Build.test.useEnzime\\n        enzyme \\\"^3.3.0\\\"\\n        enzyme-adapter-react-16 \\\"^1.1.1\\\"\\n    $if wzCtx.Build.useLint\\n        eslint \\\"^8.21.0\\\"\\n        $if wzCtx.Build.useJavascript\\n            $if wzCtx.Build.lint.useAirbnb\\n                eslint-config-airbnb \\\"^18.2.1\\\"\\n            $if wzCtx.Build.useTest && wzCtx.Build.test.useJest\\n                eslint-config-jest-enzyme \\\"^6.0.2\\\"\\n            $if wzCtx.Build.usePrettier\\n                eslint-config-prettier \\\"^8.2.0\\\"\\n        eslint-config-standard \\\"^17.0.0\\\"\\n        $if wzCtx.Build.useBabel\\n            eslint-plugin-babel \\\"^5.3.1\\\"\\n        eslint-plugin-import \\\"^2.26.0\\\"\\n        $if wzCtx.Build.useTest && wzCtx.Build.test.useJest\\n            eslint-plugin-jest \\\"^21.18.0\\\"\\n        $if wzCtx.Build.useJavascript\\n            eslint-plugin-jsx-a11y \\\"^6.4.1\\\"\\n        eslint-plugin-n \\\"^15.2.4\\\"\\n        $if wzCtx.Build.usePrettier\\n            eslint-plugin-prettier \\\"^4.2.1\\\"\\n        eslint-plugin-promise \\\"^6.0.0\\\"\\n        $if wzCtx.Build.useReact\\n            eslint-plugin-react \\\"^7.23.2\\\"\\n            $if wzCtx.Build.react.useRedux\\n                eslint-plugin-react-redux \\\"^3.3.2\\\"\\n        eslint-plugin-standard \\\"^5.0.0\\\"\\n    $if wzCtx.Build.useWebpack || wzCtx.Build.useWebpackApp\\n        file-loader \\\"^6.2.0\\\"\\n    $if wzCtx.Build.useHighlight\\n        highlight.js \\\"10.6.0\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useHtml\\n            html-loader \\\"^2.0.0\\\"\\n            html-webpack-plugin \\\"^5.1.0\\\"\\n    $if wzCtx.Build.useHusky\\n        husky \\\"^1.1.2\\\"\\n    $if wzCtx.Build.useTest && wzCtx.Build.test.useJest\\n        jest \\\"^23.4.2\\\"\\n    $if wzCtx.Build.useLint\\n        lint-staged \\\"^7.3.0\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useMiniCssExtract\\n            mini-css-extract-plugin \\\"^1.3.5\\\"\\n    $if wzCtx.Build.useNetlify\\n        netlify-lambda \\\"^0.4.0\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useSass\\n            node-sass \\\"5.0.0\\\"\\n    $if wzCtx.Build.useExpress || (wzCtx.Build.isClient && wzCtx.Build.useExistingDevServer)\\n        nodemon \\\"^2.0.19\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useOptimizeCss\\n            optimize-css-assets-webpack-plugin \\\"^4.0.0\\\"\\n    $if wzCtx.Build.useTailwindcss\\n        postcss \\\"^8.1.13\\\"\\n        postcss-cli \\\"^8.3.1\\\"\\n    $if wzCtx.Build.usePrettier\\n        prettier \\\"^2.2.1\\\"\\n    $if wzCtx.Build.useReact  && !!wzCtx.Build.useReactCreateApp == false\\n        prop-types \\\"^15.7.2\\\"\\n    $if wzCtx.Build.useStorybook\\n        react-docgen-typescript \\\"^1.22.0\\\"\\n    $if wzCtx.Build.useExpress && wzCtx.Build.useTypescript\\n        rimraf \\\"^3.0.2\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useSass\\n            sass-loader \\\"10.1.1\\\"\\n        $if wzCtx.Build.webpack.useCss\\n            style-loader \\\"^2.0.0\\\"\\n    $if wzCtx.Build.useTailwindcss\\n        tailwindcss \\\"^2.0.4\\\"\\n    $if wzCtx.Build.useWebpack || wzCtx.Build.useWebpackApp\\n        $if wzCtx.Build.useTypescript\\n            ts-loader \\\"^8.1.0\\\"\\n    $if wzCtx.Build.useTypescript\\n        ts-node \\\"^10.8.1\\\"\\n        ts-node-dev \\\"^1.1.6\\\"\\n        typescript \\\"^4.2.3\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useUglifyJS\\n            uglifyjs-webpack-plugin \\\"^1.2.5\\\"\\n    $if wzCtx.Build.useVue\\n        vue \\\"^2.5.22\\\"\\n        vue-loader \\\"^15.6.0\\\"\\n        vue-style-loader \\\"^4.1.2\\\"\\n        vue-template-compiler \\\"^2.5.22\\\"\\n        $if wzCtx.Build.vue.useVuex\\n            vuex \\\"^3.1.0\\\"\\n        $if wzCtx.Build.vue.useVueRouter\\n            vue-router \\\"^3.0.2\\\"\\n        $if wzCtx.Build.vue.useVuetify\\n            vuetify \\\"^1.4.3\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.useVExpo\\n            webpack \\\"^4.29.0\\\"\\n            webpack-cli \\\"^3.2.1\\\"\\n            webpack-dev-middleware \\\"^3.5.1\\\"\\n            webpack-stats-plugin \\\"^0.2.1\\\"\\n            worker-plugin \\\"^3.0.0\\\"\\n        $else\\n            webpack \\\"^5.28.0\\\"\\n            webpack-cli \\\"^4.5.0\\\"\\n    $if wzCtx.Build.useWebpackApp\\n        webpack-dev-middleware \\\"4.1.0\\\"\\n    $if wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useDevServer\\n            webpack-dev-server \\\"^4.10.0\\\"\\n        $if wzCtx.Build.webpack.useMerge\\n            webpack-merge \\\"^4.1.3\\\"\\n        $if wzCtx.Build.webpack.useStatsWriter\\n            webpack-stats-plugin \\\"^1.0.3\\\"\\n        $if wzCtx.Build.webpack.useVisualizer\\n            webpack-visualizer-plugin \\\"^0.1.11\\\"\\n        $if wzCtx.Build.webpack.useWorker\\n            worker-plugin \\\"^5.0.0\\\"\\n\"},\"t/v08/package/resolutions.json.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    \\n    $if wzCtx.Build.useResolutions\\n        { resolutions\\n            $if wzCtx.Build.useBabel\\n                $if wzCtx.Build.babel.useResolutions\\n                    $foreach item in wzCtx.Build.babel.resolutions\\n                        ${item.name} \\\"${item.value}\\\"\\n\"},\"t/v08/package/scripts.json.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    \\n    $if wzCtx.Build.isClientServer\\n        $if wzCtx.Build.useWebpack\\n            $if wzCtx.Build.webpack.useEnv\\n                serve:client \\\"env-cmd -f deploy/client/development.env webpack serve --open --mode development\\\"\\n                build:client \\\"env-cmd -f deploy/client/development.env webpack --mode development\\\"\\n                build:client:prod \\\"env-cmd -f deploy/client/production.env webpack --mode production\\\"\\n            $else\\n                serve:client \\\"webpack serve --open --mode development\\\"\\n                build:client \\\"webpack --mode development\\\"\\n                build:client:prod \\\"webpack --mode production\\\"\\n        $if wzCtx.Build.useExpress\\n            $if wzCtx.Build.useTypescript\\n                start \\\"set NODE_ENV=development && nodemon --watch src/** --ext ts,json --ignore src/**/*.spec.ts --exec ./node_modules/.bin/ts-node src/server/index.ts\\\"\\n                watch \\\"env-cmd -f deploy/client/development.env tsnd --require tsconfig-paths/register --inspect=9211 --quiet src/server/index.ts\\\"\\n                build:server \\\"babel --source-maps --extensions '.ts,.tsx' --out-dir build/ src/\\\"\\n    $if wzCtx.Build.isServer\\n        $if wzCtx.Build.useExpress\\n            $if wzCtx.Build.useTypescript\\n                start \\\"set NODE_ENV=development && nodemon --watch src/** --ext ts,json --ignore src/**/*.spec.ts --exec ./node_modules/.bin/ts-node src/index.ts\\\"\\n                watch \\\"env-cmd -f deploy/development.env tsnd --require tsconfig-paths/register --inspect=9211 --quiet src/index.ts\\\"\\n                build:server \\\"babel --source-maps --extensions '.ts,.tsx' --out-dir build/ src/\\\"\\n    $if wzCtx.Build.isClient\\n        $if wzCtx.Build.useTypescript\\n            serve:client \\\"env-cmd -f deploy/client/development.env webpack serve --open --mode development\\\"\\n            build:client \\\"env-cmd -f deploy/client/development.env webpack --mode development\\\"\\n            build:client:prod \\\"env-cmd -f deploy/client/production.env webpack --mode production\\\"\\n        $if wzCtx.Build.useExistingDevServer\\n            start \\\"set NODE_ENV=development && nodemon --watch server/** --ext js,json --ignore src/**/*.spec.ts --exec node ${wzCtx.Build.existingDevServer.execPath}\\\"\\n    $elif wzCtx.Build.useWebpack\\n        $if wzCtx.Build.webpack.useDevAndProd\\n            start \\\"webpack serve --mode development --config ./webpack.base.config.js --open --hot --history-api-fallback --env.PLATFORM=local --env.VERSION=stag\\\"\\n            prebuild \\\"webpack --mode production --config ./webpack.prod.config.js --env.PLATFORM=production --env.VERSION=stag --progress\\\"\\n            build \\\"node server\\\"\\n        $else\\n            $if wzCtx.Build.webpack.useEnv\\n                start \\\"env-cmd -f deploy/development.env webpack serve --open --mode development\\\"\\n                build \\\"env-cmd -f deploy/development.env webpack --mode development\\\"\\n                build:prod \\\"env-cmd -f deploy/production.env webpack --mode production\\\"\\n            $else\\n                start \\\"webpack serve --open --mode development\\\"\\n                build \\\"webpack --mode development\\\"\\n                build:prod \\\"webpack --mode production\\\"\\n    $elif wzCtx.Build.useReactCreateApp\\n        start \\\"react-scripts start\\\"\\n        build \\\"react-scripts build\\\"\\n        test \\\"react-scripts test\\\"\\n        eject \\\"react-scripts eject\\\"\\n    $elif wzCtx.Build.useGatsby\\n        develop \\\"gatsby develop\\\"\\n        start \\\"gatsby develop\\\"\\n        build \\\"gatsby build\\\"\\n        serve \\\"gatsby serve\\\"\\n        clean \\\"gatsby clean\\\"\\n    $elif wzCtx.Build.useExpress\\n        $if wzCtx.Build.useNetlify\\n            $if wzCtx.Build.useLocalServer\\n                build \\\"netlify-lambda build ${wzCtx.Build.netlify.functionsFolder}\\\"\\n                start \\\"nodemon server-local.js\\\"\\n            $else\\n                start \\\"cross-env NODE_ENV=dev npm-run-all --parallel start:app start:server\\\"\\n                start:app \\\"react-scripts start\\\"\\n                start:server \\\"netlify-lambda serve functions\\\"\\n                build \\\"npm-run-all --parallel build:**\\\"\\n                build:app \\\"react-scripts build\\\"\\n                build:functions \\\"netlify-lambda build functions\\\"\\n                test \\\"react-scripts test --env=jsdom\\\"\\n        $else\\n            $if wzCtx.Build.useTypescript\\n                $if wzCtx.Build.isClientServer\\n                    start \\\"set NODE_ENV=development && nodemon --watch src/** --ext ts,json --ignore src/**/*.spec.ts --exec ./node_modules/.bin/ts-node src/server/index.ts\\\"\\n                    start:dist \\\"set NODE_ENV=development && node ../Application/src/server/index.ts\\\"\\n                $else\\n                    start \\\"set NODE_ENV=development && nodemon --watch src/** --ext ts,json --ignore src/**/*.spec.ts --exec ./node_modules/.bin/ts-node src/index.ts\\\"\\n                    start:dist \\\"set NODE_ENV=development && node ../Application/src/index.js\\\"\\n                    start:bin \\\"set NODE_ENV=development && node ../Application/bin/www\\\"\\n                $if wzCtx.Build.useAzure\\n                    build \\\"rimraf ../Application && tsc\\\"\\n                    distfiles \\\"copyfiles bin/** ittf/** src/t/** src/site/views/** .env .deployment server.js Web.config.xml Web.Debug.config.xml ../Application && copyfiles -f predeploy/.gitignore predeploy/** ../Application && copyfiles -f predeploy/.gitignore ../Tests\\\"\\n                $if wzCtx.Build.useHeroku\\n                    build \\\"rimraf ./deploy/src && tsc\\\"\\n                    distfiles \\\"copyfiles public/** ittf/** src/t/** src/site/views/** .env server.js ./deploy && copyfiles -f predeploy/.gitignore predeploy/** ./deploy\\\"\\n            $else\\n                start \\\"set NODE_ENV=development && nodemon src/index && start ${wzCtx.App.baseUrl}\\\"\\n        $if wzCtx.Build.express.useSslCert\\n            certificate \\\"C:\\\\\\\"Program Files\\\"\\\\Git\\\\usr\\\\ssl\\\\openssl.exe req -nodes -new -x509 -keyout server.key -out server.cert\\\"\\n    $if wzCtx.Build.useLint\\n        $ var debug = false;\\n        $if wzCtx.Build.useTypescript\\n            $if wzCtx.Build.typescript.useTsxFiles\\n                lint \\\"eslint -c ./.eslintrc.js ./src/**/*.ts ./src/**/*.tsx ${debug ? '--debug' : ''}\\\"\\n                lint:write \\\"eslint -c ./.eslintrc.js --fix ./src/**/*.ts ./src/**/*.tsx ${debug ? '--debug' : ''}\\\"\\n            $else\\n                lint \\\"eslint -c ./.eslintrc.js ./src/**/*.ts ${debug ? '--debug' : ''}\\\"\\n                lint:write \\\"eslint -c ./.eslintrc.js --fix ./src/**/*.ts ${debug ? '--debug' : ''}\\\"\\n        $else\\n            lint \\\"eslint -c ./.eslintrc.js ./src/**/*.js ${debug ? '--debug' : ''}\\\"\\n            lint:write \\\"eslint -c ./.eslintrc.js --fix ./src/**/*.js ${debug ? '--debug' : ''}\\\"\\n    $if wzCtx.Build.useTest && wzCtx.Build.test.useJest\\n        test \\\"jest\\\"\\n        test:watch \\\"jest --watch\\\"\\n        test:coverage \\\"jest --coverage --colors\\\"\\n    $if wzCtx.Build.usePrettier\\n        $if wzCtx.Build.useTypescript\\n            $if wzCtx.Build.typescript.useTsxFiles\\n                prettier \\\"prettier --write src/**/*.ts src/**/*.tsx\\\"\\n            $else\\n                prettier \\\"prettier --write src/**/*.ts\\\"\\n        $else\\n            prettier \\\"prettier --write src/**/*.js\\\"\\n    $if wzCtx.Build.useTailwindcss\\n        $if wzCtx.Build.isClientServer\\n            build-css \\\"tailwindcss build src/server/styles/tailwind.css -o static/styles/tailwind.css\\\"\\n            postcss \\\"postcss src/server/styles/tailwind.css -o static/styles/tailwind.css\\\"\\n        $elif wzCtx.Build.isServer\\n            build-css \\\"tailwindcss build src/styles/tailwind.css -o static/styles/tailwind.css\\\"\\n            postcss \\\"postcss src/styles/tailwind.css -o static/styles/tailwind.css\\\"\\n        $else\\n            build-css \\\"tailwindcss build src/styles/tailwind.css -o static/styles/tailwind.css\\\"\\n            postcss \\\"postcss src/styles/tailwind.css -o static/styles/tailwind.css\\\"\\n    $if wzCtx.Build.useStorybook\\n        storybook \\\"start-storybook -p 6006\\\"\\n        build-storybook \\\"build-storybook\\\"\\n\"},\"t/v08/package/tools.json.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    \\n    $if wzCtx.Build.useLint && (wzCtx.Build.useReact || wzCtx.Build.useJest)\\n        { eslintConfig\\n            [ extends\\n                $if wzCtx.Build.useReact\\n                    \\\"react-app\\\"\\n                $if wzCtx.Build.useJest\\n                    \\\"react-app/jest\\\"\\n    \\n    $if wzCtx.Build.useLint && wzCtx.Build.lint.useHusky\\n        { husky\\n            { hooks\\n                pre-commit \\\"lint-staged\\\"\\n        { lint-staged\\n            [ *.(js|jsx)\\n                \\\"npm run lint:write\\\"\\n                \\\"git add\\\"\\n\"},\"t/v08/package/dependencies.json.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    \\n    $if wzCtx.Build.useAzure && wzCtx.Build.azure.useSecrets\\n        @azure/identity \\\"^2.0.4\\\"\\n        @azure/keyvault-secrets \\\"^4.4.0\\\"\\n    \\n    $if wzCtx.Build.useBabel\\n        $if wzCtx.Build.babel.useParser\\n            @babel/parser \\\"^7.12.16\\\"\\n        $if wzCtx.Build.useRegeneratorRuntime\\n            @babel/polyfill \\\"^7.12.1\\\"\\n        $if wzCtx.Build.babel.useRuntime\\n            @babel/runtime \\\"^7.12.5\\\"\\n    $if wzCtx.Build.useExpoStyles\\n        @expo/styleguide \\\"^2.1.4\\\"\\n    $if wzCtx.Build.useReact && wzCtx.Build.useStyledSystem\\n        @styled-system/theme-get \\\"^5.1.2\\\"\\n    \\n    $if wzCtx.Build.useReact\\n        $if wzCtx.Build.react.useMaterialUI\\n            $if wzCtx.Build.react.materialUI.usePickers\\n                @date-io/date-fns \\\"^1.3.6\\\"\\n            $if wzCtx.Build.react.useV16\\n                @material-ui/core \\\"^4.11.2\\\"\\n            $else\\n                @material-ui/core \\\"^4.11.3\\\"\\n            $if wzCtx.Build.react.materialUI.useIcons\\n                $if wzCtx.Build.react.useV16\\n                    @material-ui/icons \\\"^4.11.2\\\"\\n                $else\\n                    @material-ui/icons \\\"^4.11.2\\\"\\n            $if wzCtx.Build.react.materialUI.useLab\\n                @material-ui/lab \\\"^4.0.0-alpha.14\\\"\\n            $if wzCtx.Build.react.materialUI.usePickers\\n                @material-ui/pickers \\\"^3.0.0\\\"\\n            @material-ui/styles \\\"^4.11.2\\\"\\n    \\n    $if wzCtx.Build.useAphrodite\\n        aphrodite \\\"^2.4.0\\\"\\n    $if wzCtx.Build.useTailwindcss\\n        autoprefixer \\\"^10.0.2\\\"\\n    $if wzCtx.Build.utils.useAxios\\n        axios \\\"^0.21.1\\\"\\n    $if wzCtx.Build.useExpress\\n        $if wzCtx.Build.useNetlify\\n            aws-serverless-express \\\"^3.2.0\\\"\\n    $if wzCtx.Build.useExpress\\n        body-parser \\\"^1.18.3\\\"\\n    $if wzCtx.Build.useBootstrap\\n        bootstrap \\\"^4.1.3\\\"\\n    \\n    $if wzCtx.Build.useReact && !!wzCtx.Build.useReactCreateApp == false\\n        classnames \\\"^2.2.6\\\"\\n    $if wzCtx.Build.useExpress && wzCtx.Build.useFlash\\n        connect-flash \\\"^0.1.1\\\"\\n    $if wzCtx.Build.useMongoDb\\n        connect-mongo \\\"^4.4.1\\\"\\n    $if wzCtx.Build.useReact && wzCtx.Build.react.useRouter && wzCtx.Build.react.useRedux\\n        connected-react-router \\\"^6.9.1\\\"\\n    $if wzCtx.Build.useExpress\\n        $if wzCtx.Build.useCompression\\n            compression \\\"^1.7.2\\\"\\n        $if wzCtx.Build.useCookie\\n            cookie \\\"^0.4.1\\\"\\n    $if wzCtx.Build.useVExpo\\n        core-js \\\"^3.6.5\\\"\\n    $if wzCtx.Build.useExpress && wzCtx.Build.useCors\\n        cors \\\"^2.8.4\\\"\\n    $if wzCtx.Build.useCrypto\\n        crypto \\\"^1.0.1\\\"\\n    \\n    $if wzCtx.Build.utils.useDateFns || wzCtx.Build.useReact && wzCtx.Build.react.useDate\\n        date-fns \\\"^2.0.0\\\"\\n    $elif wzCtx.Build.useReact\\n        $if wzCtx.Build.react.useMaterialUI\\n            $if wzCtx.Build.react.materialUI.usePickers\\n                date-fns \\\"2.0.0\\\"\\n    $elif wzCtx.Build.useExpress\\n        debug \\\"~2.6.9\\\"\\n    $if wzCtx.Build.useDomHelpers\\n        dom-helpers \\\"^3.4.0\\\"\\n    \\n    $if wzCtx.Build.useConfig && wzCtx.Build.config.useEnvalid\\n        dotenv \\\"16.0.1\\\"\\n    $if wzCtx.Build.useReact\\n        $if wzCtx.Build.react.useDraftJs\\n            draft-js \\\"^0.10.5\\\"\\n    $if wzCtx.Build.useConfig && wzCtx.Build.config.useEnvalid\\n        envalid \\\"^7.0.0\\\"\\n    $if wzCtx.Build.utils.useEs6Error\\n        es6-error \\\"^4.1.1\\\"\\n    $if wzCtx.Build.utils.useEscapeHtml\\n        escape-html \\\"^1.0.3\\\"\\n    $if wzCtx.Build.utils.useEscapeRegexp\\n        escape-string-regexp \\\"^4.0.0\\\"\\n    $if wzCtx.Build.useExpress\\n        express \\\"^4.16.3\\\"\\n        $if wzCtx.Build.useJwt\\n            express-jwt \\\"^6.0.0\\\"\\n        $if wzCtx.Build.useSession\\n            express-session \\\"^1.17.1\\\"\\n    \\n    $if wzCtx.Build.utils.useFetchPonyfill\\n        fetch-ponyfill \\\"^7.1.0\\\"\\n    $if wzCtx.Build.useReact\\n        $if wzCtx.Build.react.useFormik\\n            formik \\\"^1.5.7\\\"\\n    \\n    $group\\n        $if wzCtx.Build.useGatsby\\n            gatsby \\\"^2.32.3\\\"\\n    $if wzCtx.Build.utils.useGitUrlParse\\n        git-url-parse \\\"^11.4.4\\\"\\n    $if wzCtx.Build.useGraphql\\n        graphql \\\"^15.5.0\\\"\\n        graphql-request \\\"^3.4.0\\\"\\n    \\n    $if wzCtx.Build.useHelmet\\n        helmet \\\"^5.1.1\\\"\\n    $if wzCtx.Build.useReact\\n        $if wzCtx.Build.useHoistNonReactStatic\\n            hoist-non-react-statics \\\"^3.3.2\\\"\\n    $if wzCtx.Build.useExpress\\n        $if wzCtx.Build.express.useErrors\\n            http-errors \\\"^2.0.0\\\"\\n    \\n    $if wzCtx.Build.useFetch\\n        isomorphic-fetch \\\"^2.2.1\\\"\\n    $if wzCtx.Build.useGithub\\n        isomorphic-git \\\"^1.19.2\\\"\\n    $if wzCtx.Build.useIsomorphicUnfetch\\n        isomorphic-unfetch \\\"^3.0.0\\\"\\n    \\n    $if wzCtx.Build.utils.useJsCookie\\n        js-cookie \\\"^2.2.1\\\"\\n    $if wzCtx.Build.isClientServer || wzCtx.Build.isServer\\n        jsesc \\\"^2.5.2\\\"\\n    $if wzCtx.Build.utils.useStringifySafe\\n        json-stringify-safe \\\"^5.0.1\\\"\\n    $if wzCtx.Build.utils.useJsonToAst\\n        json-to-ast \\\"^2.1.0\\\"\\n    $if wzCtx.Build.useJwt\\n        jsonwebtoken \\\"^8.5.1\\\"\\n    $if wzCtx.Build.useAuthorization\\n        jwks-rsa \\\"^1.4.0\\\"\\n    \\n    $if wzCtx.Build.useMarked\\n        $if wzCtx.Build.useVExpo\\n            marked \\\"^2.0.0\\\"\\n        $else\\n            marked \\\"^2.0.3\\\"\\n    $if wzCtx.Build.useMonacoEditor\\n        $if wzCtx.Build.useVExpo\\n            monaco-editor \\\"^0.18.1\\\"\\n        $else\\n            monaco-editor \\\"^0.23.0\\\"\\n    $if wzCtx.Build.useMoment\\n        moment \\\"^2.24.0\\\"\\n    $if wzCtx.Build.useMongoDb\\n        mongoose \\\"^6.5.2\\\"\\n    $if wzCtx.Build.useExpress && wzCtx.Build.useLogger\\n        $if wzCtx.Build.logger.useMorgan\\n            morgan \\\"^1.10.0\\\"\\n    \\n    $if wzCtx.Build.utils.useNanoId\\n        nanoid \\\"^3.1.22\\\"\\n    $if wzCtx.Build.utils.useNodeCache\\n        node-cache \\\"^5.1.2\\\"\\n    $if wzCtx.Build.useGithub\\n        node-fetch \\\"^2.6.1\\\"\\n    $if wzCtx.Build.utils.useNullThrows\\n        nullthrows \\\"^1.1.1\\\"\\n    \\n    $if (wzCtx.Build.styles && wzCtx.Build.styles.usePalx) || wzCtx.Build.useStorybook\\n        palx '^1.0.3'\\n    $if wzCtx.Build.utils.useParseUrl\\n        parseurl \\\"^1.3.3\\\"\\n    $if wzCtx.Build.usePrismjs\\n        prismjs \\\"^1.21.0\\\"\\n    $if wzCtx.Build.usePostgres\\n        pg \\\"^8.8.0\\\"\\n        connect-pg-simple \\\"^7.0.0\\\"\\n    \\n    $if wzCtx.Build.utils.useQueryString\\n        query-string \\\"^7.0.0\\\"\\n    \\n    $group\\n        $if wzCtx.Build.useReact\\n            $if wzCtx.Build.react.useV16\\n                react \\\"^16.8.1\\\"\\n                react-dom \\\"^16.8.1\\\"\\n            $elif wzCtx.Build.react.useV17\\n                react \\\"^17.0.1\\\"\\n                react-dom \\\"^17.0.1\\\"\\n            $else\\n                react \\\"^17.0.2\\\"\\n                react-dom \\\"^17.0.2\\\"\\n            $if wzCtx.Build.react.useDate\\n                react-datepicker \\\"^4.1.1\\\"\\n            $if wzCtx.Build.react.useFontawesome\\n                react-fontawesome \\\"^1.6.1\\\"\\n            $if wzCtx.Build.react.useHelmetAsync\\n                react-helmet-async \\\"^1.0.9\\\"\\n            $if wzCtx.Build.react.usePerfectScrollbar\\n                react-perfect-scrollbar \\\"^1.4.4\\\"\\n            $if wzCtx.Build.react.useRange\\n                react-range \\\"^1.8.9\\\"\\n            $if wzCtx.Build.react.useRedux\\n                react-redux \\\"^7.2.2\\\"\\n                $if wzCtx.Build.react.redux.useFirestore\\n                    react-redux-firebase \\\"^2.2.6\\\"\\n            $if wzCtx.Build.react.useRouter\\n                react-router-dom \\\"^5.2.0\\\"\\n            $if wzCtx.Build.useReactCreateApp\\n                react-scripts \\\"^4.0.3\\\"\\n            $if wzCtx.Build.react.useSelect\\n                react-select \\\"^4.3.0\\\"\\n            $if wzCtx.Build.react.useSimpleCodeEditor\\n                react-simple-code-editor \\\"^0.11.0\\\"\\n            $if wzCtx.Build.react.useSyntaxHighlighter\\n                react-syntax-highlighter \\\"^15.4.3\\\"\\n            $if wzCtx.Build.react.useTextareaAutosize\\n                react-textarea-autosize \\\"^8.3.2\\\"\\n            $if wzCtx.Build.react.transition\\n                react-transition-group \\\"^2.4.0\\\"\\n            $if wzCtx.Build.react.useVirtualized\\n                react-virtualized \\\"^9.22.3\\\"\\n            $if wzCtx.Build.react.useRecompose_stopped_25_06_2022\\n                recompose \\\"^0.30.0\\\"\\n        $if wzCtx.Build.useGatsby\\n            react \\\"^16.13.1\\\"\\n            react-dom \\\"^16.13.1\\\"\\n    \\n    $group\\n        $if wzCtx.Build.useReact\\n            $if wzCtx.Build.react.useRedux\\n                redux \\\"^4.0.5\\\"\\n                $if wzCtx.Build.react.redux.useAuth\\n                    redux-auth-wrapper \\\"^2.1.0\\\"\\n                $if wzCtx.Build.react.redux.useFirestore\\n                    redux-firestore \\\"^0.8.0\\\"\\n                $if wzCtx.Build.react.redux.useForm\\n                    redux-form \\\"^8.2.0\\\"\\n            $if wzCtx.Build.react.useRedux\\n                $if wzCtx.Build.react.redux.useThunk\\n                    redux-thunk \\\"^2.3.0\\\"\\n                $if wzCtx.Build.react.redux.useSaga\\n                    redux-saga \\\"^1.1.3\\\"\\n    $if wzCtx.Build.useReact_stopped_25_06_2022\\n        recompose \\\"^0.30.0\\\"\\n    $if wzCtx.Build.useRegeneratorRuntime\\n        regenerator-runtime \\\"^0.13.7\\\"\\n    \\n    $if wzCtx.Build.utils.useSanitizeHtml\\n        sanitize-html \\\"^2.3.3\\\"\\n    $if wzCtx.Build.useExpress\\n        $if wzCtx.Build.useNetlify\\n            serverless-http \\\"^1.6.0\\\"\\n    $if wzCtx.Build.useSocketIO\\n        socket.io-client \\\"^2.2.0\\\"\\n    $if wzCtx.Build.useReact && wzCtx.Build.useStyledComponents\\n        styled-components \\\"^5.2.1\\\"\\n    $if wzCtx.Build.useReact && wzCtx.Build.useStyledSystem\\n        styled-system \\\"^5.1.5\\\"\\n    \\n    $if wzCtx.Build.useTypescript\\n        tslib \\\"^2.4.0\\\"\\n    $if wzCtx.Build.useReact\\n        $if wzCtx.Build.react.useRedux\\n            $if wzCtx.Build.react.redux.useSaga\\n                typesafe-actions \\\"^5.1.0\\\"\\n    \\n    $if wzCtx.Build.useUnderscore\\n        underscore \\\"^1.9.1\\\"\\n    \\n    $if wzCtx.Build.useValidateJs\\n        validate.js \\\"^0.12.0\\\"\\n    $if wzCtx.Build.useVue\\n        vue \\\"^2.5.17\\\"\\n        vue-server-renderer \\\"^2.5.17\\\"\\n    \\n    $if wzCtx.Build.utils.useWebVitals\\n        web-vitals \\\"^1.0.1\\\"\\n    $if wzCtx.Build.useWizzi\\n        wizzi \\\"^0.7.32\\\"\\n        $if false\\n            wizzi.proto \\\"^0.0.1\\\"\\n        wizzi-tools \\\"^0.7.4\\\"\\n        wizzi-utils \\\"^0.7.19\\\"\\n        wizzi-core \\\"^0.7.7\\\"\\n        wizzi-web \\\"^0.7.14\\\"\\n        wizzi-js \\\"^0.7.11\\\"\\n    \\n    $if wzCtx.Build.useYup\\n        yup \\\"^0.27.0\\\"\\n\"},\"t/v08/sequelize/attributes.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &fields\\n    $\\n        function getType(name) {\\n            if (name == 'string') return 'STRING';\\n            else if (name == 'number') return 'NUMBER';\\n            else return name.toUpperCase();\\n        }\\n        function getDefaultValue(value, type) {\\n            if (['string', 'text', 'citext'].indexOf(type) > -1) return '\\\"' + value + '\\\"';\\n            else return value;\\n        }\\n    +++\\n    $foreach fd in fields\\n        { ${fd.name}\\n            @ type DataTypes.${getType(fd.type)}\\n            $if !!fd.allowNull == true\\n                @ allowNull false\\n            $else\\n                # allowNull defaults to true\\n            $if fd.defaultValue && fd.defaultValue.length > 0\\n                @ defaultValue ${getDefaultValue(fd.defaultValue, fd.type)}\\n            $if fd.autoIncrement\\n                @ autoIncrement true\\n            $if fd.primaryKey\\n                @ primaryKey true\\n            $if fd.comment && fd.comment.length > 0\\n                @ comment ${fd.comment)}\\n            $if fd.references\\n                { references\\n                @ model ${fd.references.model}\\n                @ key ${fd.references.key}\\n                @ deferrable Deferrable.${fd.references.deferrable}\\n\"},\"t/v08/sequelize/model.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &tb\\n    $\\n        var fields = tb.fields;\\n    +++\\n    class ${tb.Name}\\n        super Model\\n        m associate\\n            static\\n            param models\\n            $if tb.__db.relations\\n                $foreach r in tb.__db.relations\\n                    $if r.kind == \\\"one-to-many\\\"\\n                        $if r.ltable == tb.Name\\n                            _ ${tb.Name}.hasMany\\n                                @ models.${r.rtable}\\n                                {\\n                                $if r.foreignKey\\n                                    @ foreignKey \\\"${r.foreignKey}\\\"\\n                        $if r.rtable == tb.Name\\n                            _ ${tb.Name}.belongsTo\\n                                @ models.${r.ltable}\\n                                {\\n                                $if r.foreignKey\\n                                    @ foreignKey \\\"${r.foreignKey}\\\"\\n                    $if r.kind == \\\"one-to-one\\\"\\n                        $if r.ltable == tb.Name\\n                            _ ${tb.Name}.hasOne\\n                                @ models.${r.rtable}\\n                                {\\n                                $if r.foreignKey\\n                                    { foreignKey\\n                                    $if r.foreignKey.name\\n                                        @ name \\\"${r.foreignKey.name}\\\"\\n                                    $if r.foreignKey.allowNull == false\\n                                        @ allowNull false\\n            #\\n                #\\n                # Helper method for defining associations.\\n                # This method is not a part of Sequelize lifecycle.\\n                #\\n    _ ${tb.Name}.init\\n        {\\n            ./attributes(&fields)\\n        {\\n            @ sequelize\\n            @ modelName \\\"${tb.Name}\\\"\\n            @ updatedAt \\\"updated_at\\\"\\n            @ createdAt \\\"created_at\\\"\\n\"},\"t/v08/sequelize/modelBuilder.ts.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &tb\\n    import\\n        @ Sequelize\\n        @ Model\\n        @ DataTypes\\n        from 'sequelize'\\n    import\\n        @ ModelBuilderType\\n        from \\\"../../app/types\\\"\\n    #\\n        import\\n            @ I${tb.Name}Model\\n            from \\\"../types\\\"\\n    +\\n    let ${tb.Name}Model\\n        :ref Model\\n    +\\n    function createModel\\n        param sequelize\\n            :ref Sequelize\\n        ./model(&tb)\\n        return ${tb.Name}\\n    +\\n    export\\n        function Get${tb.Name}Model\\n            $*\\n            :return\\n                :ref ${tb.Name}ModelType\\n            *$\\n            return ${tb.Name}Model\\n    +\\n    export\\n        const ${tb.Name}ModelBuilder\\n            :ref ModelBuilderType\\n            =\\n                {\\n                    @ buildModel\\n                        =>\\n                            param sequelize\\n                                :ref Sequelize\\n                            set ${tb.Name}Model\\n                                _ createModel\\n                                @ sequelize\\n                            return ${tb.Name}Model\\n                    @ associateModel\\n                        =>\\n                            param models\\n                                :[\\n                                    :ref Sequelize\\n                            _ ${tb.Name}Model.associate\\n                                @ models\\n\"},\"t/v08/styles/tailwind.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &md\\n    + @tailwind base;\\n    + @tailwind components;\\n    + @tailwind utilities;\\n\"},\"t/v08/ts/authHandler.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params name\\n    +\\n    p ${name}\\n        :private\\n        async=>\\n            param request\\n                :ref AuthRequest\\n            param response\\n                :ref Response\\n            $hook\\n\"},\"t/v08/ts/catch_error_page.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params message\\n    ._ catch\\n        =>\\n            param err\\n                :any\\n            _ response.render\\n                @ 'error.html.ittf'\\n                {\\n                    @ message '${message}'\\n                    @ error err\\n\"},\"t/v08/ts/catch_fail.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method\\n    ._ catch\\n        =>\\n            param err\\n                :any\\n            log '${method}.error', err\\n            _ sendFailure\\n                @ response\\n                {\\n                    @ err err\\n                @ 501\\n\"},\"t/v08/ts/catch_fail_html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method\\n    ._ catch\\n        =>\\n            param err\\n                :any\\n            log '${method}.error', err\\n            var content = err\\n            if typeof err === 'object' && err !== null\\n                set content = '<html><body><pre><code>' + JSON.stringify(err, null, 4) + '</code></pre></body></html>'\\n            _ sendHtml\\n                @ response\\n                @ content\\n\"},\"t/v08/ts/catch_reject.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method\\n    ._ catch\\n        =>\\n            param err\\n                :any\\n            log '${method}.error', err\\n            return reject(err)\\n\"},\"t/v08/ts/catch_send_fail.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method\\n    ._ catch\\n        =>\\n            param err\\n                :any\\n            log '${method}.error', err\\n            _ sendFailure\\n                @ response\\n                {\\n                    @ err err\\n                @ 501\\n\"},\"t/v08/ts/controller.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params &ctrl\\n    import\\n        @ Router\\n        @ Request\\n        @ Response\\n        from 'express'\\n    import\\n        @ ControllerType\\n        @ AppInitializerType\\n        $if ctrl.kind == 'site'\\n            from '../../features/app/types'\\n        $else\\n            from '../../../features/app/types'\\n    $if ctrl.isAuth\\n        import\\n            @ AuthRequest\\n            $if ctrl.kind == 'site'\\n                from '../../features/auth/types'\\n            $else\\n                from '../../../features/auth/types'\\n    $if ctrl.apiSecured || ctrl.webSecured\\n        import\\n            $if ctrl.apiSecured\\n                @ apiSecured\\n            $if ctrl.webSecured\\n                @ webSecured\\n            $if ctrl.kind == 'site'\\n                from '../../middlewares/index'\\n            $else\\n                from '../../../middlewares/index'\\n    import\\n        @ sendHtml\\n        @ sendSuccess\\n        @ sendPromiseResult\\n        @ sendFailure\\n        $if ctrl.kind == 'site'\\n            from '../../utils/sendResponse'\\n        $else\\n            from '../../../utils/sendResponse'\\n    import\\n        @ FcError\\n        @ SYSTEM_ERROR\\n        $if ctrl.kind == 'site'\\n            from '../../utils/error'\\n        $else\\n            from '../../../utils/error'\\n    import\\n        @ statusCode\\n        $if ctrl.kind == 'site'\\n            from '../../utils'\\n        $else\\n            from '../../../utils'\\n    $if ctrl.modelName\\n        import\\n            @ I${ctrl.modelName}\\n            from '../types'\\n    $hook imports\\n    +\\n    function makeHandlerAwareOfAsyncErrors\\n        param handler\\n        return\\n            async-function\\n                param request\\n                    :ref Request\\n                param response\\n                    :ref Response\\n                param next\\n                    :ref Function\\n                log 'makeHandlerAwareOfAsyncErrors called'\\n                try\\n                    await\\n                        _ handler(request, response, next)\\n                    log 'makeHandlerAwareOfAsyncErrors ok'\\n                catch error\\n                    if error instanceof FcError\\n                        _ response.status(statusCode.BAD_REQUEST).send\\n                            {\\n                                @ code error.code\\n                                @ message error.message\\n                                @ data\\n                                    ||\\n                                        + error.data\\n                                        {\\n                    else\\n                        const fcError = new FcError(SYSTEM_ERROR)\\n                        _ response.status(statusCode.BAD_REQUEST).send\\n                            {\\n                                @ code fcError.code\\n                                @ message error.message\\n                                @ data\\n                                    ||\\n                                        + fcError.data\\n                                        {\\n    +\\n    export\\n        class ${ctrl.name}Controller\\n            :implements ControllerType\\n            +\\n            p path\\n                :public\\n                = '${ctrl.path}'\\n            +\\n            p router\\n                :public\\n                _ Router()\\n            $if ctrl.modelName\\n                +\\n                p ${ctrl.modelName}Model\\n                    :public\\n                    :ref ${ctrl.modelName}ModelType\\n            +\\n            $hook properties\\n            +\\n            => initialize\\n                param initValues\\n                    :ref AppInitializerType\\n                warn 'Entering ${ctrl.name}Controller.initialize'\\n                $if ctrl.modelName\\n                    set this.${ctrl.modelName}Model\\n                        _ Get${ctrl.modelName}Model\\n                $hook\\n            $hook handlers\\n\"},\"t/v08/ts/else_send_fail.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method, err\\n    else\\n        log '${method}.error', ${err}\\n        _ sendFailure\\n            @ response\\n            {\\n                @ err ${err}\\n            @ 501\\n\"},\"t/v08/ts/handler.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params name\\n    +\\n    p ${name}\\n        :private\\n        async=>\\n            param request\\n                :ref Request\\n            param response\\n                :ref Response\\n            $hook\\n\"},\"t/v08/ts/route.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method, path, handler\\n    _ this.router.${method}\\n        @ \\\"${path}\\\"\\n        _ makeHandlerAwareOfAsyncErrors(${handler})\\n\"},\"t/v08/ts/route_api_secured.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method, path, handler\\n    _ this.router.${method}\\n        @ \\\"${path}\\\"\\n        _ makeHandlerAwareOfAsyncErrors(apiSecured)\\n        _ makeHandlerAwareOfAsyncErrors(${handler})\\n\"},\"t/v08/ts/route_web_secured.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params method, path, handler\\n    _ this.router.${method}\\n        @ \\\"${path}\\\"\\n        _ makeHandlerAwareOfAsyncErrors(webSecured)\\n        _ makeHandlerAwareOfAsyncErrors(${handler})\\n\"},\"t/v08/ts/tsconfig.json.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    \\n    { compilerOptions\\n        target \\\"es6\\\"\\n        module \\\"commonjs\\\"\\n        moduleResolution \\\"node\\\"\\n        { paths\\n            *\\n                [\\n                    \\\"node_modules/*\\\"\\n        esModuleInterop true\\n        jsx \\\"react-jsx\\\"\\n        sourceMap true\\n        rootDir \\\"./\\\"\\n        $if wzCtx.Build.useAzure\\n            outDir \\\"../Application\\\"\\n        $elif wzCtx.Build.useHeroku\\n            outDir \\\"./deploy\\\"\\n        $else\\n            outDir \\\"./dist\\\"\\n        baseUrl \\\".\\\"\\n        importHelpers true\\n        $if wzCtx.Build.typescript.useStrict\\n            strict true\\n    [ include\\n        \\\"src/**/*\\\"\\n        $hook include\\n    [ exclude\\n        \\\"src/**/*.spec.*\\\"\\n\"}}"
    },
    {
      "_id": "6336d4548b0c38e85214559f",
      "id": "6336d4548b0c38e85214559f",
      "owner": "stfnbssl",
      "name": "wizzihub/html",
      "description": "Html tFolder for wizzihub site.",
      "packiFiles": "{\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        [ contexts\\n            {\\n                $$ propertyName \\\"..name..\\\"\\n                $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\" \"},\"t/layouts/mui.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params &md\\r\\n  lang en\\r\\n  dir ltr\\r\\n  head \\r\\n      @title ${md.title}\\r\\n      meta \\r\\n          charset utf-8 \\r\\n      meta \\r\\n          name viewport \\r\\n          content minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\\r\\n      link \\r\\n          rel stylesheet\\r\\n          href https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap\\r\\n      link \\r\\n          rel stylesheet\\r\\n          href https://fonts.googleapis.com/icon?family=Material+Icons\\r\\n      link \\r\\n          rel stylesheet\\r\\n          href https://cdnjs.cloudflare.com/ajax/libs/ionicons/4.4.1/css/ionicons.min.css\\r\\n      @style\\r\\n        . root\\r\\n          @ padding 10px    \\r\\n        $hook headstyles\\r\\n  body \\r\\n      # root\\r\\n      $$ js https://cdn.jsdelivr.net/combine/npm/react@16.12/umd/react.development.js,npm/react-dom@16.12/umd/react-dom.development.js,npm/@material-ui/core@4.8/umd/material-ui.development.js,npm/@babel/standalone@7.8/babel.min.js\\r\\n      js https://unpkg.com/react@latest/umd/react.development.js\\r\\n      js https://unpkg.com/react-dom@latest/umd/react-dom.development.js\\r\\n      js https://unpkg.com/@mui/material@latest/umd/material-ui.development.js\\r\\n      $$ js https://cdn.jsdelivr.net/npm/@material-ui/core@4.8/umd/material-ui.development.js\\r\\n      js https://unpkg.com/babel-standalone@latest/babel.min.js\\r\\n      js /public/wz.js\\r\\n      $$ TODO js https://unpkg.com/react-router-dom/umd/react-router-dom.min.js\\r\\n\\r\\n      $hook bodyscripts\\r\\n      \\r\\n      script\\r\\n          type text/babel\\r\\n          module\\r\\n            kind react\\r\\n            info \\\"MaterialUI\\\", MaterialUI\\r\\n            const ReactRouterDOM = window.ReactRouterDOM\\r\\n            const classnames = window.classNames\\r\\n            const \\r\\n                { \\r\\n                  @ colors\\r\\n                  @ createGenerateClassName\\r\\n                  @ createMuiTheme\\r\\n                  @ createTheme\\r\\n                  @ createStyles\\r\\n                  @ fade\\r\\n                  $$ @ makeStyles\\r\\n                  @ styled\\r\\n                  @ jssPreset\\r\\n                  @ withMobileDialog\\r\\n                  @ withStyles\\r\\n                  @ withTheme\\r\\n                  @ withWidth\\r\\n                  @ AppBar\\r\\n                  @ Avatar\\r\\n                  @ Backdrop\\r\\n                  @ Badge\\r\\n                  @ BottomNavigation\\r\\n                  @ BottomNavigationAction\\r\\n                  @ Box\\r\\n                  @ Button\\r\\n                  @ ButtonBase\\r\\n                  @ Card\\r\\n                  @ CardActionArea\\r\\n                  @ CardActions\\r\\n                  @ CardContent\\r\\n                  @ CardHeader\\r\\n                  @ CardMedia\\r\\n                  @ Checkbox\\r\\n                  @ Chip\\r\\n                  @ CircularProgress\\r\\n                  @ ClickAwayListener\\r\\n                  @ Collapse\\r\\n                  @ Container\\r\\n                  @ CssBaseline\\r\\n                  @ Dialog\\r\\n                  @ DialogActions\\r\\n                  @ DialogContent\\r\\n                  @ DialogContentText\\r\\n                  @ DialogTitle\\r\\n                  @ Divider\\r\\n                  @ Drawer\\r\\n                  @ ExpansionPanel\\r\\n                  @ ExpansionPanelActions\\r\\n                  @ ExpansionPanelDetails\\r\\n                  @ ExpansionPanelSummary\\r\\n                  @ Fab\\r\\n                  @ Fade\\r\\n                  @ FilledInput\\r\\n                  @ FormControl\\r\\n                  @ FormControlLabel\\r\\n                  @ FormGroup\\r\\n                  @ FormHelperText\\r\\n                  @ FormLabel\\r\\n                  @ Grid\\r\\n                  @ GridList\\r\\n                  @ GridListTile\\r\\n                  @ GridListTileBar\\r\\n                  @ Grow\\r\\n                  @ Hidden\\r\\n                  @ Icon\\r\\n                  @ IconButton\\r\\n                  @ Input\\r\\n                  @ InputAdornment\\r\\n                  @ InputBase\\r\\n                  @ InputLabel\\r\\n                  @ LinearProgress\\r\\n                  @ Link\\r\\n                  @ List\\r\\n                  @ ListItem\\r\\n                  @ ListItemAvatar\\r\\n                  @ ListItemIcon\\r\\n                  @ ListItemSecondaryAction\\r\\n                  @ ListItemText\\r\\n                  @ ListSubheader\\r\\n                  @ Menu\\r\\n                  @ MenuItem\\r\\n                  @ MenuList\\r\\n                  @ MobileStepper\\r\\n                  @ Modal\\r\\n                  @ ModalManager\\r\\n                  @ NativeSelect\\r\\n                  @ NoSsr\\r\\n                  @ OutlinedInput\\r\\n                  @ Paper\\r\\n                  @ Popover\\r\\n                  @ Popper\\r\\n                  @ Portal\\r\\n                  @ Radio\\r\\n                  @ RadioGroup\\r\\n                  @ RootRef\\r\\n                  @ Select\\r\\n                  @ Slide\\r\\n                  @ Snackbar\\r\\n                  @ SnackbarContent\\r\\n                  @ Step\\r\\n                  @ StepButton\\r\\n                  @ StepConnector\\r\\n                  @ StepContent\\r\\n                  @ StepIcon\\r\\n                  @ StepLabel\\r\\n                  @ Stepper\\r\\n                  @ SvgIcon\\r\\n                  @ SwipeableDrawer\\r\\n                  @ Switch\\r\\n                  @ Tab\\r\\n                  @ Table\\r\\n                  @ TableBody\\r\\n                  @ TableCell\\r\\n                  @ TableFooter\\r\\n                  @ TableHead\\r\\n                  @ TablePagination\\r\\n                  @ TableRow\\r\\n                  @ TableSortLabel\\r\\n                  @ Tabs\\r\\n                  @ TextField\\r\\n                  @ ThemeProvider\\r\\n                  @ Toolbar\\r\\n                  @ Tooltip\\r\\n                  @ Typography\\r\\n                  @ Zoom\\r\\n                = MaterialUI\\r\\n\\r\\n            $hook imports\\r\\n            \\r\\n            const theme\\r\\n                _ createTheme\\r\\n                    { \\r\\n                        { palette\\r\\n                            { primary\\r\\n                                @ light colors.purple[300]\\r\\n                                @ main colors.purple[500]\\r\\n                                @ dark colors.purple[700]\\r\\n                            { secondary\\r\\n                                @ light colors.yellow[300]\\r\\n                                @ main colors.yellow[500]\\r\\n                                @ dark colors.yellow[700]\\r\\n                        { typography\\r\\n                            @ useNextVariants true\\r\\n            \\r\\n            $hook components\\r\\n\\r\\n            $*\\r\\n            const useStyles\\r\\n                _ makeStyles\\r\\n                    => \\r\\n                        param theme\\r\\n                        (\\r\\n                            { \\r\\n                                { root\\r\\n                                    @ margin theme.spacing(6, 0, 3)\\r\\n                                { lightBulb\\r\\n                                    @ verticalAlign 'middle'\\r\\n                                    @ marginRight theme.spacing(1)\\r\\n            *$\\r\\n           \\r\\n            react App\\r\\n                state\\r\\n                  $hook state\\r\\n                style\\r\\n                  $hook styles\\r\\n                $hook\\r\\n            $$ const App = withStyles(styles)(Index)\\r\\n            const container = document.querySelector('#root')\\r\\n            const root = ReactDOM.createRoot(container) \\r\\n            _ root.render\\r\\n                < ThemeProvider \\r\\n                    @ theme {theme}\\r\\n                    < CssBaseline \\r\\n                    < App \\r\\n                # CssBaseline kickstart an elegant, consistent, and simple baseline to build upon.                \"},\"t/styled.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, htmlelement\\r\\n\\r\\n  const ${name}\\r\\n    _ styled('${htmlelement}')\\r\\n      (\\r\\n        => \\r\\n          param props\\r\\n          (\\r\\n            { \\r\\n              $hook\"},\"t/component.html.ittf\":{\"type\":\"CODE\",\"contents\":\"\"}}"
    },
    {
      "_id": "633831a42af9716cb6850a9e",
      "id": "633831a42af9716cb6850a9e",
      "owner": "stfnbssl",
      "name": "wizzi/tsx",
      "description": "tFolder for *.tsx files in wizzi ecosystem",
      "packiFiles": "{\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        [ contexts\\n            {\\n                $$ propertyName \\\"..name..\\\"\\n                $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\"t/component/muiv3.tsx.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params &md\\r\\n    import \\r\\n        as React\\r\\n        from 'react'\\r\\n    import \\r\\n        @ withStyles\\r\\n        @ createStyles\\r\\n        @ Theme\\r\\n        from '@material-ui/core/styles'\\r\\n    $if md.components\\r\\n      $foreach comp in md.components\\r\\n          import ${comp} from '@material-ui/core/${comp}'\\r\\n    $if md.icons\\r\\n      $foreach icon in md.icons\\r\\n          import \\r\\n              @ ${comp}Icon\\r\\n              from '../../assets/${comp}Icon'\\r\\n    $hook imports\\r\\n    :type Props\\r\\n        :{ \\r\\n            :p classes\\r\\n                :any \\r\\n            $foreach prop in md.props\\r\\n                setPropType( &prop )\\r\\n            $hook props\\r\\n    :type State\\r\\n        :{ \\r\\n            $foreach prop in md.stateProps\\r\\n                setPropType( &prop )\\r\\n            $hook state\\r\\n    class ${md.Name}Comp\\r\\n        super React.Component\\r\\n            :param \\r\\n                :ref Props\\r\\n            :param \\r\\n                :ref State\\r\\n            $hook ctor\\r\\n        p state\\r\\n            :ref State\\r\\n            { \\r\\n                $foreach prop in md.stateProps\\r\\n                    setPropInitValue( &prop )\\r\\n                $hook stateInitValues\\r\\n        $hook\\r\\n    const muiStyles\\r\\n        => \\r\\n            param theme\\r\\n                :ref Theme\\r\\n            _ createStyles\\r\\n                { \\r\\n                    $hook styles\\r\\n    export\\r\\n        const ${md.Name}\\r\\n            _ withStyles\\r\\n                @ muiStyles\\r\\n                (\\r\\n                    @ ${md.Name}Comp\\r\\n    export-default ${md.Name}\"},\"t/setPropType.tsx.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params &prop\\r\\n\\r\\n    :p ${prop.name}\\r\\n        $if prop.type == 'date'\\r\\n            :ref Date\\r\\n        $elif prop.type == '['\\r\\n            :[\\r\\n                :any\\r\\n        $elif prop.type == 'node'\\r\\n            :ref React.ReactNode\\r\\n        $elif prop.type == 'mouse-event'\\r\\n            :ref (e: React.MouseEvent<HTMLElement>) => void\\r\\n        $elif prop.type == 'input-event'\\r\\n            :=> \\r\\n                :void \\r\\n                param event\\r\\n                    :ref React.ChangeEvent\\r\\n                        :param \\r\\n                            :ref HTMLInputElement\\r\\n        $elif prop.type == 'union'\\r\\n            :union\\r\\n                $foreach type in prop.types\\r\\n                    $if type.ref\\r\\n                        :ref ${type.name}\\r\\n                    $if type.literal\\r\\n                        :literal '${type.name}'\\r\\n                    $else\\r\\n                        :${type.name}\\r\\n        $elif prop.type == 'Promise'\\r\\n            :=> \\r\\n                :ref Promise\\r\\n                    :param ${prop.return}\\r\\n                $foreach param in prop.params\\r\\n                    param ${param.name}\\r\\n                        :${param.type}\\r\\n        $elif prop.type == 'handler'\\r\\n            :=> \\r\\n                $if prop.params\\r\\n                    $foreach param in prop.params\\r\\n                        param ${param.name}\\r\\n                            $if param.ref\\r\\n                                :ref ${param.type}\\r\\n                            $else\\r\\n                                :${param.type}\\r\\n                :void \\r\\n        $elif prop.ref\\r\\n            :ref ${prop.type}\\r\\n        $else\\r\\n            :${prop.type}\\r\\n        $if prop.optional\\r\\n            :optional\\r\\n\\r\\n\"},\"t/setPropInitValue.tsx.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params &prop\\r\\n    $if prop.type == 'string'\\r\\n      $if prop.defaultValue\\r\\n          @ ${prop.name} \\\"${prop.defaultValue}\\\"\\r\\n      $else\\r\\n          @ ${prop.name} null\\r\\n    $elif prop.type == '['\\r\\n      $if prop.defaultValue\\r\\n          @ ${prop.name} \\\"${prop.defaultValue}\\\"\\r\\n      $else\\r\\n          @ ${prop.name} []\\r\\n    $elif prop.type == '{'\\r\\n      $if prop.defaultValue\\r\\n          @ ${prop.name} \\\"${prop.defaultValue}\\\"\\r\\n      $else\\r\\n          @ ${prop.name} {}\\r\\n    $else\\r\\n      $if prop.defaultValue\\r\\n          @ ${prop.name} ${prop.defaultValue}\\r\\n      $else\\r\\n          @ ${prop.name} null\\r\\n\\r\\n\"}}"
    },
    {
      "_id": "633f339e0c027b8934a1d454",
      "id": "633f339e0c027b8934a1d454",
      "owner": "stfnbssl",
      "name": "wizzihub/js",
      "description": "Vanilla js for wizzihub site",
      "packiFiles": "{\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        [ contexts\\n            {\\n                $$ propertyName \\\"..name..\\\"\\n                $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\"t/api/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include fetch\\r\\n  $include wizzi\\r\\n  $include packiManager\"},\"t/iife_window.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params ns|@@null, apiName|@@null, kind|@@null, requires|@@null\\r\\n  \\r\\n  $if requires != null && requires.indexOf('Underscore') > -1\\r\\n    if !window.utils || !window.utils.Underscore \\r\\n      throw new Error('The api \\\"${apiName}\\\" requires the object \\\"utils.Underscore\\\". You must include it.')\\r\\n  iife \\r\\n    param window\\r\\n    $if requires != null && requires.indexOf('Underscore') > -1\\r\\n      param _\\r\\n    $if ns != null\\r\\n      set window.${ns} = window.${ns} || {}\\r\\n    $if apiName != null && kind == 'increment'\\r\\n      const ${apiName}\\r\\n        ||\\r\\n          @expr ${ns}.${apiName}\\r\\n          {\\r\\n    \\r\\n    $hook\\r\\n    \\r\\n    $if apiName != null\\r\\n      set window.${ns}.${apiName} = ${apiName}\\r\\n    (\\r\\n      @ window\\r\\n      $if requires != null && requires.indexOf('Underscore') > -1\\r\\n        @ utils.Underscore\\r\\n\"},\"t/r_promise.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    return\\r\\n        new Promise\\r\\n            =>\\r\\n                param resolve\\r\\n                param reject\\r\\n                $hook\\r\\n\"},\"test.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\r\\n  kind es6\\r\\n  $$ $include utils/index\\r\\n  $$ $include mvc/index\\r\\n  $include api/index\\r\\n  $$ $include editors/index\\r\\n  $$ $include styles/index\\r\\n  $$ $include controls/index\\r\\n\"},\"toIttf/file.js\":{\"type\":\"CODE\",\"contents\":\"export default function restArguments(func, startIndex) {\\r\\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\\r\\n  return function() {\\r\\n    var length = Math.max(arguments.length - startIndex, 0),\\r\\n        rest = Array(length),\\r\\n        index = 0;\\r\\n    for (; index < length; index++) {\\r\\n      rest[index] = arguments[index + startIndex];\\r\\n    }\\r\\n    switch (startIndex) {\\r\\n      case 0: return func.call(this, rest);\\r\\n      case 1: return func.call(this, arguments[0], rest);\\r\\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\\r\\n    }\\r\\n    var args = Array(startIndex + 1);\\r\\n    for (index = 0; index < startIndex; index++) {\\r\\n      args[index] = arguments[index];\\r\\n    }\\r\\n    args[startIndex] = rest;\\r\\n    return func.apply(this, args);\\r\\n  };\\r\\n}\"},\"t/catch_reject.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params method\\r\\n    ._ catch\\r\\n        =>\\r\\n            param err\\r\\n            if typeof err === 'object' && err !== null\\r\\n                $hook\\r\\n            error '${method}.error', err\\r\\n            return reject(err)\\r\\n\"},\"t/mvc/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include helpers\\r\\n  $include localCollectionStore\\r\\n  $include localObjectStore\\r\\n  $include forms/index\\r\\n\"},\"t/mvc/t/helpers.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    iife_window() \\r\\n        set window.qs =\\r\\n            function \\r\\n                param selector\\r\\n                param scope\\r\\n                return (scope || document).querySelector(selector)\\r\\n            # Get element(s) by CSS selector:\\r\\n        set window.qsa =\\r\\n            function \\r\\n                param selector\\r\\n                param scope\\r\\n                return (scope || document).querySelectorAll(selector)\\r\\n            # addEventListener wrapper:\\r\\n        set window.$on =\\r\\n            function \\r\\n                param target\\r\\n                param type\\r\\n                param callback\\r\\n                param useCapture\\r\\n                _ target.addEventListener(type, callback, !!useCapture)\\r\\n            # addEventListener wrapper:\\r\\n            # Attach a handler to event for all elements that match the selector,\\r\\n            # now or in the future, based on a root element\\r\\n        set window.$delegate =\\r\\n            function \\r\\n                param target\\r\\n                param selector\\r\\n                param type\\r\\n                param handler\\r\\n                function dispatchEvent\\r\\n                    param event\\r\\n                    var targetElement = event.target\\r\\n                    var potentialElements = window.qsa(selector, target)\\r\\n                    var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0\\r\\n                    if hasMatch\\r\\n                        _ handler.call(targetElement, event)\\r\\n                    # https://developer.mozilla.org/en-US/docs/Web/Events/blur\\r\\n                var useCapture = type === 'blur' || type === 'focus'\\r\\n                    # https://developer.mozilla.org/en-US/docs/Web/Events/blur\\r\\n                _ window.$on(target, type, dispatchEvent, useCapture)\\r\\n            # Attach a handler to event for all elements that match the selector,\\r\\n            # now or in the future, based on a root element\\r\\n            # Find the element's parent with the given tag name:\\r\\n            # $parent(qs('a'), 'div');\\r\\n        set window.$parent =\\r\\n            function \\r\\n                param element\\r\\n                param tagName\\r\\n                if !element.parentNode\\r\\n                    return \\r\\n                if element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()\\r\\n                    return element.parentNode\\r\\n                return window.$parent(element.parentNode, tagName)\\r\\n            # Find the element's parent with the given tag name:\\r\\n            # $parent(qs('a'), 'div');\\r\\n            # Allow for looping on nodes by chaining:\\r\\n            # qsa('.foo').forEach(function () {})\\r\\n        set NodeList.prototype.forEach = Array.prototype.forEach\\r\\n            # Allow for looping on nodes by chaining:\\r\\n            # qsa('.foo').forEach(function () {})\\r\\n        #\\r\\n            # global NodeList\\r\\n\"},\"t/mvc/t/localCollectionStore.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'LocalCollectionStore';\\r\\n      //\\r\\n    \\r\\n    iife_window( mvc, ${myName})\\r\\n        function ${myName}\\r\\n            param name\\r\\n            param_callback()\\r\\n            set this._dbName = name\\r\\n            if !localStorage.getItem(name)\\r\\n                var items = []\\r\\n                _ localStorage.setItem(name, JSON.stringify(items))\\r\\n            _ callback.call(this, JSON.parse(localStorage.getItem(name)))\\r\\n            #\\r\\n                # \\r\\n                # Creates a new client side local storage object and will create an empty\\r\\n                # collection if no collection already exists.\\r\\n                # \\r\\n                # @param {string} name The name of our DB we want to use\\r\\n                # @param {function} callback Our local storage DB uses callbacks\\r\\n                # \\r\\n        set ${myName}.prototype.find =\\r\\n            function \\r\\n                param query\\r\\n                param_callback( required, Method: ${myName}.find )\\r\\n                var items = JSON.parse(localStorage.getItem(this._dbName) || '[]')\\r\\n                _ callback.call\\r\\n                    @ this\\r\\n                    _ items.filter\\r\\n                        function \\r\\n                            param item\\r\\n                            for var q in query\\r\\n                                if query[q] !== item[q]\\r\\n                                    return false\\r\\n                            return true\\r\\n            #\\r\\n                # \\r\\n                # Finds items based on a query given as a JS object\\r\\n                # \\r\\n                # @param {object} query The query to match against (i.e. {foo: 'bar'})\\r\\n                # @param {function} callback\\t The callback to fire when the query has\\r\\n                # completed running\\r\\n                # \\r\\n                # @example\\r\\n                # db.find({foo: 'bar', hello: 'world'}, function (data) {\\r\\n                #  // data will return any items that have foo: bar and\\r\\n                #  // hello: world in their properties\\r\\n                # });\\r\\n                # \\r\\n        set ${myName}.prototype.findAll =\\r\\n            function \\r\\n                param_callback( required, Method: ${myName}.findAll )\\r\\n                _ callback.call(this, JSON.parse(localStorage.getItem(this._dbName) || '[]'))\\r\\n            #\\r\\n                # \\r\\n                # Will retrieve all data from the collection\\r\\n                # \\r\\n                # @param {function} callback The callback to fire upon retrieving data\\r\\n                # \\r\\n        set ${myName}.prototype.save =\\r\\n            function \\r\\n                param updateData\\r\\n                param id\\r\\n                param_callback()\\r\\n                var items = JSON.parse(localStorage.getItem(this._dbName) || '[]')\\r\\n                if id\\r\\n                    log '${myName}.prototype.save', id\\r\\n                    var matched = false\\r\\n                    for var i = 0; i < items.length; i++\\r\\n                        if items[i].id === id\\r\\n                            set matched = true\\r\\n                            log '${myName}.prototype.save', 'matched', id\\r\\n                            for var key in updateData\\r\\n                                set items[i][key] = updateData[key]\\r\\n                            break \\r\\n                    if !matched\\r\\n                      set updateData.id = id\\r\\n                          # Generate an ID\\r\\n                      _ items.push(updateData)\\r\\n                    _ localStorage.setItem(this._dbName, JSON.stringify(items))\\r\\n                    _ callback.call(this, items)\\r\\n                    # If an ID was actually given, find the item and update each property\\r\\n                else\\r\\n                    set updateData.id = new Date().getTime()\\r\\n                        # Generate an ID\\r\\n                    _ items.push(updateData)\\r\\n                    _ localStorage.setItem(this._dbName, JSON.stringify(items))\\r\\n                    _ callback.call\\r\\n                        @ this\\r\\n                        [ \\r\\n                            @ updateData\\r\\n            #\\r\\n                # \\r\\n                # Will save the given data to the DB. If no item exists it will create a new\\r\\n                # item, otherwise it'll simply update an existing item's properties\\r\\n                # \\r\\n                # @param {object} updateData The data to save back into the DB\\r\\n                # @param {function} callback The callback to fire after saving\\r\\n                # @param {number} id An optional param to enter an ID of an item to update\\r\\n                # \\r\\n        set ${myName}.prototype.remove =\\r\\n            function \\r\\n                param id\\r\\n                param_callback()\\r\\n                var items = JSON.parse(localStorage.getItem(this._dbName) || '[]')\\r\\n                for var i = 0; i < items.length; i++\\r\\n                    if items[i].id == id\\r\\n                        _ items.splice(i, 1)\\r\\n                        break \\r\\n                _ localStorage.setItem(this._dbName, JSON.stringify(items))\\r\\n                _ callback.call(this, items)\\r\\n            #\\r\\n                # \\r\\n                # Will remove an item from the ${myName} based on its ID\\r\\n                # \\r\\n                # @param {number} id The ID of the item you want to remove\\r\\n                # @param {function} callback The callback to fire after saving\\r\\n                # \\r\\n        set ${myName}.prototype.drop =\\r\\n            function \\r\\n                param_callback()\\r\\n                var items = []\\r\\n                _ localStorage.setItem(this._dbName, JSON.stringify(items))\\r\\n                _ callback.call(this, items)\\r\\n            #\\r\\n                # \\r\\n                # Will drop all storage and start fresh\\r\\n                # \\r\\n                # @param {function} callback The callback to fire after dropping the data\\r\\n                # \\r\\n        set ${myName}.prototype.replace\\r\\n            function \\r\\n                param items\\r\\n                param_callback()\\r\\n                _ localStorage.setItem(this._dbName, JSON.stringify(items))\\r\\n                _ callback.call(this, items)\\r\\n            #\\r\\n                # \\r\\n                # Will replace the entire items collection\\r\\n                # \\r\\n                # @param {array} [items] new items collection\\r\\n                # @param {function} callback The callback to fire after replacing the data\\r\\n                #                 \"},\"t/mvc/t/localObjectStore.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'LocalObjectStore';\\r\\n      //\\r\\n    \\r\\n    iife_window( mvc, ${myName})\\r\\n        function ${myName}\\r\\n            param name\\r\\n            param_callback()\\r\\n            set this._dbName = name\\r\\n            set this.itemColl = new mvc.LocalCollectionStore(name + '_objColl')\\r\\n            if !localStorage.getItem(name)\\r\\n                var itemObj = {}\\r\\n                _ localStorage.setItem(name, JSON.stringify(itemObj))\\r\\n            _ callback.call(this, JSON.parse(localStorage.getItem(name)))\\r\\n            #\\r\\n                # \\r\\n                # Creates a new client side local storage object plus collection \\r\\n                # and will create an empty object and collection if no one already exist.\\r\\n                # \\r\\n                # @param {string} name The name of our DB we want to use\\r\\n                # @param {function} callback Our local storage DB uses callbacks\\r\\n                # \\r\\n        set ${myName}.prototype.setValue =\\r\\n            function \\r\\n                param name\\r\\n                param value\\r\\n                var itemObj = JSON.parse(localStorage.getItem(this._dbName) || '{}')\\r\\n                set itemObj[name] = value\\r\\n                _ localStorage.setItem(this._dbName, JSON.stringify(itemObj))\\r\\n                return itemObj\\r\\n            #\\r\\n                # \\r\\n                # Set an object property value\\r\\n                # \\r\\n                # @param {string} name The property name\\r\\n                # @param {string} value The property value\\r\\n                # @return {object} Returns the entire saved object\\r\\n                # \\r\\n        set ${myName}.prototype.getValue =\\r\\n            function \\r\\n                param name\\r\\n                param defaultValue\\r\\n                var itemObj = JSON.parse(localStorage.getItem(this._dbName) || '{}')\\r\\n                log '${myName}.getValue', name, defaultValue, name in itemObj, itemObj\\r\\n                if name in itemObj\\r\\n                  log '${myName}.getValue.return', itemObj[name]\\r\\n                  return itemObj[name]\\r\\n                elif typeof(defaultValue) != 'undefined'\\r\\n                  log '${myName}.getValue.return', defaultValue\\r\\n                  return defaultValue\\r\\n                else\\r\\n                  log '${myName}.getValue.return', null\\r\\n                  return null\\r\\n            #\\r\\n                # \\r\\n                # Get an object property value\\r\\n                # \\r\\n                # @param {string} [name] The property name\\r\\n                # @param {string} [defaultValue] Optional. \\r\\n                # -               The value to set if the value of name is missing\\r\\n                # @return {any} The property value or defaultValue or null\\r\\n                # \\r\\n        set ${myName}.prototype.find =\\r\\n            function \\r\\n                param query\\r\\n                param_callback( required, Method: ${myName}.find )\\r\\n                _ this.itemColl.find\\r\\n                  @ query\\r\\n                  @ callback\\r\\n            #\\r\\n                # \\r\\n                # Finds object items based on a query given as a JS object\\r\\n                # \\r\\n                # @param {object} query The query to match against (i.e. {foo: 'bar'})\\r\\n                # @param {function} callback\\t The callback to fire when the query has\\r\\n                # completed running\\r\\n                # \\r\\n                # @example\\r\\n                # db.find({foo: 'bar', hello: 'world'}, function (data) {\\r\\n                #  // data will return any items that have foo: bar and\\r\\n                #  // hello: world in their properties\\r\\n                # });\\r\\n                # \\r\\n        set ${myName}.prototype.findAll =\\r\\n            function \\r\\n                param_callback( required, Method: ${myName}.findAll )\\r\\n                _ this.itemColl.findAll\\r\\n                  @ callback\\r\\n            #\\r\\n                # \\r\\n                # Will retrieve all data from the object items collection\\r\\n                # \\r\\n                # @param {function} callback The callback to fire upon retrieving data\\r\\n                # \\r\\n        set ${myName}.prototype.save =\\r\\n            function \\r\\n                param updateData\\r\\n                param id\\r\\n                param_callback()\\r\\n                log '${myName}.prototype.save', id, updateData\\r\\n                _ this.itemColl.save\\r\\n                  @ updateData\\r\\n                  @ id\\r\\n                  @ callback\\r\\n            #\\r\\n                # \\r\\n                # Will save the given data to the object items. If no item exists it will create a new\\r\\n                # item, otherwise it'll simply update an existing item's properties\\r\\n                # \\r\\n                # @param {object} updateData The data to save back into the DB\\r\\n                # @param {function} callback The callback to fire after saving\\r\\n                # @param {number} id An optional param to enter an ID of an item to update\\r\\n                # \\r\\n        set ${myName}.prototype.remove =\\r\\n            function \\r\\n                param id\\r\\n                param_callback()\\r\\n                _ this.itemColl.drop\\r\\n                  @ id\\r\\n                  @ callback\\r\\n            #\\r\\n                # \\r\\n                # Will remove an item from the object items\\r\\n                # \\r\\n                # @param {number} id The ID of the item you want to remove\\r\\n                # @param {function} callback The callback to fire after saving\\r\\n                # \\r\\n        set ${myName}.prototype.drop =\\r\\n            function \\r\\n                param_callback()\\r\\n                _ this.itemColl.drop\\r\\n                  @ callback\\r\\n            #\\r\\n                # \\r\\n                # Will drop all object items\\r\\n                # \\r\\n                # @param {function} callback The callback to fire after dropping the data\\r\\n                # \\r\\n        set ${myName}.prototype.replace =\\r\\n            function \\r\\n                param_callback()\\r\\n                _ this.itemColl.replace\\r\\n                  @ callback\\r\\n            #\\r\\n                # \\r\\n                # Will replace the entire items collection\\r\\n                # \\r\\n                # @param {array} [items] new items collection\\r\\n                # @param {function} callback The callback to fire after replacing the data\\r\\n                #                 \"},\"t/param_callback.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params kind|@@null, message|@@null\\r\\n  param callback\\r\\n  $if kind == 'required'\\r\\n    if !callback\\r\\n      throw new Error('The callback parameter is required. ${message}.')\\r\\n  $else\\r\\n    set callback =\\r\\n        || \\r\\n            + callback\\r\\n            function \"},\"t/utils/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include underscore\\r\\n  $include cache\\r\\n\"},\"t/utils/t/underscore.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'Underscore';\\r\\n      //\\r\\n    \\r\\n    iife_window( utils, ${myName})\\r\\n        \\r\\n        const ${myName}\\r\\n          {\\r\\n            @ isArray\\r\\n                function\\r\\n                    param val\\r\\n                    return Array.isArray ? Array.isArray(val) : toString.call(val) === '[object Array]'\\r\\n            @ isObject\\r\\n                function\\r\\n                    param val\\r\\n                    return val != null && typeof val === 'object' && Array.isArray(val) === false;\\r\\n            @ makeString\\r\\n                function\\r\\n                    param object\\r\\n                    if object == null \\r\\n                      return ''\\r\\n                    return '' + object;    \\r\\n                # https://github.com/esamattis/underscore.string/blob/master/helper/makeString.js        \\r\\n            \\r\\n            @ capitalize\\r\\n                function\\r\\n                    param str\\r\\n                    param lowercaseRest\\r\\n                    set str = ${myName}.makeString(str)\\r\\n                    var remainingChars = !lowercaseRest ? str.slice(1) : str.slice(1).toLowerCase()\\r\\n                    return str.charAt(0).toUpperCase() + remainingChars  \\r\\n                # https://github.com/esamattis/underscore.string/blob/master/helper/capitalize.js        \\r\\n            @ debounce\\r\\n                function\\r\\n                    param func\\r\\n                    param wait\\r\\n                    param immediate\\r\\n                    var \\r\\n                        decl timeout\\r\\n                        decl previous\\r\\n                        decl args\\r\\n                        decl result\\r\\n                        decl context\\r\\n                    var later\\r\\n                        function \\r\\n                            var passed = ${myName}.now() - previous\\r\\n                            if wait > passed\\r\\n                                set timeout = setTimeout(later, wait - passed)\\r\\n                            else\\r\\n                                set timeout = null\\r\\n                                if !immediate\\r\\n                                    set result = func.apply(context, args)\\r\\n                                if !timeout\\r\\n                                    set context = null\\r\\n                    var debounced\\r\\n                        _ ${myName}.restArguments\\r\\n                            function \\r\\n                                param _args\\r\\n                                set context = this\\r\\n                                set args = _args\\r\\n                                set previous = ${myName}.now()\\r\\n                                if !timeout\\r\\n                                    set timeout = setTimeout(later, wait)\\r\\n                                    if immediate\\r\\n                                        set result = func.apply(context, args)\\r\\n                                return result\\r\\n                    set debounced.cancel =\\r\\n                        function \\r\\n                            _ clearTimeout(timeout)\\r\\n                            set context = null\\r\\n                    return debounced\\r\\n                # https://underscorejs.org/docs/modules/debounce.html\\r\\n            @ now \\r\\n                || \\r\\n                    + Date.now\\r\\n                    function \\r\\n                        return new Date().getTime()\\r\\n            @ restArguments\\r\\n                function\\r\\n                    param func\\r\\n                    param startIndex\\r\\n                    set startIndex \\r\\n                        iif startIndex == null\\r\\n                            then func.length - 1\\r\\n                            else +startIndex\\r\\n                    return \\r\\n                        function \\r\\n                            var \\r\\n                                decl length = Math.max(arguments.length - startIndex, 0)\\r\\n                                decl rest = Array(length)\\r\\n                                decl index = 0\\r\\n                            for ; index < length; index++\\r\\n                                set rest[index] = arguments[index + startIndex]\\r\\n                            switch startIndex\\r\\n                                case 0\\r\\n                                    return func.call(this, rest)\\r\\n                                case 1\\r\\n                                    return func.call(this, arguments[0], rest)\\r\\n                                case 2\\r\\n                                    return func.call(this, arguments[0], arguments[1], rest)\\r\\n                            var args = Array(startIndex + 1)\\r\\n                            for ; index < startIndex; index++\\r\\n                                set args[index] = arguments[index]\\r\\n                            set args[startIndex] = rest\\r\\n                            return func.apply(this, args)\"},\"t/api/t/wizzi.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n        var myName = 'Wizzi';\\r\\n        var mdObj = {\\r\\n            ApiName: 'Wizzi',\\r\\n            apiUrl: '/api/v1',\\r\\n            items: [\\r\\n              { Prod: 'Artifact', prod: 'artifact'},\\r\\n              { Prod: 'Package', prod: 'package'},\\r\\n              { Prod: 'Plugin', prod: 'plugin'},\\r\\n              { Prod: 'Meta', prod: 'meta'},\\r\\n              { Prod: 'Tfolder', prod: 'tfolder'},\\r\\n            ]\\r\\n        }\\r\\n        //\\r\\n\\r\\n    iife_window( api, ${myName}, increment )\\r\\n      set ${myName}.cache = new utils.Cache('${myName}')\\r\\n\\r\\n    $foreach md in mdObj.items\\r\\n      $ \\r\\n        md.ApiName = mdObj.ApiName;\\r\\n        md.apiUrl = mdObj.apiUrl;\\r\\n        //\\r\\n      wizzi/fetch( &md )\\r\\n\\r\\n    $ var md = mdObj\\r\\n    wizzi/cdn( &md )\"},\"t/api/t/fetch.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n        var myName = 'Fetch';\\r\\n        //\\r\\n\\r\\n    iife_window( api, ${myName} )\\r\\n        const ${myName}\\r\\n          {\\r\\n        set ${myName}.get\\r\\n            function\\r\\n                param url\\r\\n                r_promise()\\r\\n                    var req = new XMLHttpRequest()\\r\\n                    _ req.overrideMimeType(\\\"application/json\\\")\\r\\n                    _ req.open('GET', url, true)\\r\\n                    set req.onload =\\r\\n                        function \\r\\n                            var jsonResponse = JSON.parse(req.responseText)\\r\\n                            _ resolve\\r\\n                              @ jsonResponse\\r\\n                    _ req.send(null)\\r\\n\\r\\n        set ${myName}.put\\r\\n            function\\r\\n                param data\\r\\n                r_promise() \\r\\n                    log '${myName}.put', 'url', data.url, 'body', data.body\\r\\n                    var req = new XMLHttpRequest()\\r\\n                    _ req.open('PUT', data.url, true)\\r\\n                    _ req.setRequestHeader('Content-type','application/json; charset=utf-8');\\r\\n                    set req.onload =\\r\\n                        function \\r\\n                            var jsonResponse = JSON.parse(req.responseText)\\r\\n                            _ resolve\\r\\n                              @ jsonResponse\\r\\n                    var json\\r\\n                      _ JSON.stringify\\r\\n                        @ data.body\\r\\n                    _ req.send(json)       \\r\\n\\r\\n        set ${myName}.post\\r\\n            function\\r\\n                param data\\r\\n                r_promise() \\r\\n                    log '${myName}.post', 'url', data.url, 'body', data.body\\r\\n                    var req = new XMLHttpRequest()\\r\\n                    _ req.open('POST', data.url, true)\\r\\n                    _ req.setRequestHeader('Content-type','application/json; charset=utf-8');\\r\\n                    set req.onload =\\r\\n                        function \\r\\n                            var jsonResponse = JSON.parse(req.responseText)\\r\\n                            _ resolve\\r\\n                              @ jsonResponse\\r\\n                    var json\\r\\n                      _ JSON.stringify\\r\\n                        @ data.body\\r\\n                    _ req.send(json)       \\r\\n\\r\\n        set ${myName}.delete\\r\\n            function\\r\\n                param url\\r\\n                r_promise() \\r\\n                    log '${myName}.delete', 'url', url\\r\\n                    var req = new XMLHttpRequest()\\r\\n                    _ req.open('DELETE', url, true)\\r\\n                    _ req.setRequestHeader('Content-type','application/json; charset=utf-8');\\r\\n                    set req.onload =\\r\\n                        function \\r\\n                            var jsonResponse = JSON.parse(req.responseText)\\r\\n                            _ resolve\\r\\n                              @ jsonResponse\\r\\n                    _ req.send(null)\\r\\n\\r\\n                    \"},\"t/api/t/wizzi/fetch.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params &md\\r\\n    iife_window( api, ${md.ApiName}, increment )\\r\\n        set ${md.ApiName}.get${md.Prod}\\r\\n          _ ${md.ApiName}.cache.memoizePromise\\r\\n            @ '${md.Prod}'\\r\\n            function\\r\\n                param owner\\r\\n                param name\\r\\n                let url = '${md.apiUrl}/production/${md.prod}/' + encodeURIComponent(owner)\\r\\n                if name && name.length > 0\\r\\n                    set url += '/' + name\\r\\n                r_promise()\\r\\n                    _ api.Fetch.get\\r\\n                        @ url\\r\\n                        ._ then\\r\\n                            =>\\r\\n                                param response\\r\\n                                info 'get${md.Prod}List.response', response\\r\\n                                return \\r\\n                                    _ resolve \\r\\n                                        @ response\\r\\n                        catch_reject( get${md.Prod} )\\r\\n          #\\r\\n              # \\r\\n              # Fetches an ${md.Prod}Production collection or item\\r\\n              # \\r\\n              # @param {string} owner The owner of the production\\r\\n              # @param {string} name Optional. The name of the production, \\r\\n              # -                              if null returns all owner's productions\\r\\n              #                       \\r\\n        \\r\\n        set ${md.ApiName}.put${md.Prod}\\r\\n          function\\r\\n              param id\\r\\n              param packiFiles\\r\\n              param options\\r\\n              $$ updateArtifactProduction(request.params.id, request.body.owner, request.body.name, request.body.description, request.body.mainIttf, request.body.wizziSchema, JSON.stringify(request.body.packiFiles))\\r\\n              log '${md.ApiName}.put${md.Prod}', 'id', id, 'packiFiles', Object.keys(packiFiles), 'options', options\\r\\n              r_promise()\\r\\n                  _ api.Fetch.put\\r\\n                      { \\r\\n                          @ url '${md.apiUrl}/production/${md.prod}/' + encodeURIComponent(id)\\r\\n                          { body\\r\\n                            @ packiFiles\\r\\n                            @ options\\r\\n                      ._ then\\r\\n                          =>\\r\\n                              param response\\r\\n                              info 'put${md.Prod}.response', response\\r\\n                              _ resolve\\r\\n                                  @ response\\r\\n                      catch_reject( put${md.Prod} )\\r\\n          #\\r\\n              # \\r\\n              # Updates a ${md.Prod}Production item\\r\\n              # \\r\\n              # @param {string} id The id of the production item\\r\\n              # @param {PackiFiles} packiFiles. A PackiFiles object, contains all the production's files.\\r\\n              #     \\r\\n\\r\\n        set ${md.ApiName}.put${md.Prod}PackiDiffs\\r\\n          function\\r\\n              param id\\r\\n              param packiDiffs\\r\\n              param options\\r\\n              $$ updateArtifactProduction(request.params.id, request.body.owner, request.body.name, request.body.description, request.body.mainIttf, request.body.wizziSchema, JSON.stringify(request.body.packiFiles))\\r\\n              log '${md.ApiName}.put${md.Prod}PackiDiffs', 'id', id, 'packiDiffs', Object.keys(packiDiffs), 'options', options\\r\\n              r_promise()\\r\\n                  _ api.Fetch.put\\r\\n                      { \\r\\n                          @ url '${md.apiUrl}/production/${md.prod}/packidiffs/' + encodeURIComponent(id)\\r\\n                          { body\\r\\n                            @ packiDiffs\\r\\n                            @ options\\r\\n                      ._ then\\r\\n                          =>\\r\\n                              param response\\r\\n                              info 'put${md.Prod}PackiDiffs.response', response\\r\\n                              _ resolve\\r\\n                                  @ response\\r\\n                      catch_reject( put${md.Prod}PackiDiffs )\\r\\n          #\\r\\n              # \\r\\n              # Updates a ${md.Prod}Production applying a diff object\\r\\n              # \\r\\n              # @param {string} id The id of the production item\\r\\n              # @param {PackiFiles} packiDiffs. A diff object, contains insert, deletes and updates.\\r\\n              #     \\r\\n\\r\\n        set ${md.ApiName}.create${md.Prod}\\r\\n          function\\r\\n              param owner\\r\\n              param name\\r\\n              param packiFiles\\r\\n              param options\\r\\n              set options = options || {}\\r\\n              $$ updateArtifactProduction(request.params.id, request.body.owner, request.body.name, request.body.description, request.body.mainIttf, request.body.wizziSchema, JSON.stringify(request.body.packiFiles))\\r\\n              log '${md.ApiName}.create${md.Prod}', 'owner', owner, 'name', name, 'packiFiles', Object.keys(packiFiles), 'options', options\\r\\n              const\\r\\n                {\\r\\n                  @ description\\r\\n                  $if md.Prod == 'Artifact'\\r\\n                    @ wizziSchema\\r\\n                    @ mainIttf\\r\\n                  ... rest\\r\\n                = options\\r\\n              r_promise()\\r\\n                  _ api.Fetch.put\\r\\n                      { \\r\\n                          @ url '${md.apiUrl}/production/${md.prod}/' + encodeURIComponent(owner) + '/' + encodeURIComponent(name)\\r\\n                          { body\\r\\n                            @ description\\r\\n                            $if md.Prod == 'Artifact'\\r\\n                              @ wizziSchema\\r\\n                              @ mainIttf\\r\\n                            @ packiFiles\\r\\n                            @ options rest\\r\\n                      ._ then\\r\\n                          =>\\r\\n                              param response\\r\\n                              info 'create${md.Prod}.response', response\\r\\n                              _ resolve\\r\\n                                  @ response\\r\\n                      catch_reject( create${md.Prod} )\\r\\n          #\\r\\n              # \\r\\n              # Creates a new ${md.Prod}Production item\\r\\n              # \\r\\n              # @param {string} [owner] The owner of the production item\\r\\n              # @param {string} [name] The name of the production item\\r\\n              # @param {PackiFiles} packiFiles. A PackiFiles object, contains all the production's files.\\r\\n              #                       \\r\\n\\r\\n\\r\\n\\r\\n          \"},\"t/utils/t/cache.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'Cache';\\r\\n      //\\r\\n    \\r\\n    iife_window( utils, ${myName})\\r\\n        function ${myName}\\r\\n          param name\\r\\n          set this.name = name\\r\\n          set this.cache = {}\\r\\n        set ${myName}.prototype.set\\r\\n            function \\r\\n                param key\\r\\n                param value\\r\\n                set this.cache[key] = value\\r\\n        set ${myName}.prototype.get\\r\\n            function \\r\\n                param key\\r\\n                param value\\r\\n                return this.cache[key]\\r\\n        set ${myName}.prototype.memoize\\r\\n            function \\r\\n                param fn\\r\\n                var self = this\\r\\n                return \\r\\n                    function \\r\\n                        var keyparts = []\\r\\n                        foreach arg in arguments\\r\\n                            _ keyparts.push\\r\\n                                @ arg ? arg.toString() : ''\\r\\n                        var key = keyparts.join('_')\\r\\n                        if !(key in self.cache)\\r\\n                            _ self.set\\r\\n                              @ key\\r\\n                              _ fn.apply(this, arguments)\\r\\n                            log 'key ', key, 'retrieved by function and set in cache', self.name\\r\\n                        else\\r\\n                            log 'key ', key, 'returned from cache', self.name\\r\\n                        return\\r\\n                            _ self.get(key)\\r\\n        set ${myName}.prototype.memoizePromise\\r\\n            function \\r\\n                param fnName\\r\\n                param fn\\r\\n                var self = this\\r\\n                return \\r\\n                    function \\r\\n                        r_promise()\\r\\n                          var keyparts = [fnName]\\r\\n                          foreach arg in arguments\\r\\n                              _ keyparts.push\\r\\n                                  @ arg ? arg.toString() : ''\\r\\n                          var key = keyparts.join('_')\\r\\n                          if !(key in self.cache)\\r\\n                              _ fn.apply\\r\\n                                  @ this\\r\\n                                  @ arguments\\r\\n                                  ._ then\\r\\n                                      =>\\r\\n                                          param result\\r\\n                                          _ self.set\\r\\n                                              @ key\\r\\n                                              @ result\\r\\n                                          log 'key ', key, 'retrieved by function and set in cache', self.name\\r\\n                                          return\\r\\n                                              _ resolve\\r\\n                                                  @ result\\r\\n                                  ._ catch\\r\\n                                      =>\\r\\n                                          param err\\r\\n                                          return\\r\\n                                              _ reject\\r\\n                                                  @ err\\r\\n                          else\\r\\n                              log 'key ', key, 'returned from cache', self.name\\r\\n                              return\\r\\n                                  _ resolve\\r\\n                                      _ self.get(key)\"},\"t/editors/monaco/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include languages/ittf-language\\r\\n  $include themes/colors-dark\\r\\n  $include themes/colors-light\\r\\n  $include themes/ittf-dark-theme\\r\\n  $include themes/ittf-light-theme\\r\\n  $include themes/monaco-overrides\\r\\n  $include themes/monaco\\r\\n  $include monaco-editor\"},\"t/editors/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include monaco/index\"},\"t/editors/monaco/t/themes/colors-dark.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoColorsDark';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set styleData = styles.computeStyleData(styleData)\\r\\n            var tp = new styles.ThemeProvider(styleData)\\r\\n            set this.syntax\\r\\n                {\\r\\n                    @ text '#d9d7ce'\\r\\n                    @ variable '#d9d7ce'\\r\\n                    @ invalid '#ff3333'\\r\\n                    @ constant '#ff9d45'\\r\\n                    @ comment '#5c6773'\\r\\n                    @ regexp '#95e6cb'\\r\\n                    @ annotation '#5ccfe6'\\r\\n                    @ tag '#80d4ff'\\r\\n                    @ number '#ff9d45'\\r\\n                    @ string '#bae67e'\\r\\n                    @ property '#5ccfe6'\\r\\n                    @ value '#bae67e'\\r\\n                    @ keyword '#ffae57'\\r\\n                    @ operator '#778899'\\r\\n                    @ predefined '#ff00ff'\\r\\n            set this.ui\\r\\n                {\\r\\n                    @ background tp.c('background', 'dark')\\r\\n                    @ text '#d9d7ce'\\r\\n                    @ selection '#aaaaaa'\\r\\n                    { indent\\r\\n                        @ active '#393b41'\\r\\n                        @ inactive '#494b51'\"},\"t/editors/monaco/t/themes/colors-light.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoColorsLight';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set styleData = styles.computeStyleData(styleData)\\r\\n            var tp = new styles.ThemeProvider(styleData)\\r\\n            set this.syntax\\r\\n                {\\r\\n                    @ text '#5c6773'\\r\\n                    @ variable '#5c6773'\\r\\n                    @ invalid '#ff3333'\\r\\n                    @ constant '#f08c36'\\r\\n                    @ comment '#abb0b6'\\r\\n                    @ regexp '#4dbf99'\\r\\n                    @ annotation '#41a6d9'\\r\\n                    @ tag '#e7c547'\\r\\n                    @ number '#f08c36'\\r\\n                    @ string '#86b300'\\r\\n                    @ property '#41a6d9'\\r\\n                    @ value '#0451a5'\\r\\n                    @ keyword '#f2590c'\\r\\n                    @ operator '#778899'\\r\\n                    @ predefined '#FF00FF'\\r\\n            set this.ui\\r\\n                {\\r\\n                    @ background tp.c('background', 'light')\\r\\n                    @ text '#5c6773'\\r\\n                    @ selection '#cccccc'\\r\\n                    { indent\\r\\n                        @ active '#e0e0e0'\\r\\n                        @ inactive '#ecebec'\"},\"t/editors/monaco/t/themes/monaco.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoTheme';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        const s1\\r\\n            =>\\r\\n                param color\\r\\n                _ color.substr(1)\\r\\n        const theme\\r\\n            =>\\r\\n                {\\r\\n                    @ ui\\r\\n                    @ syntax\\r\\n                param base\\r\\n                (\\r\\n                    {\\r\\n                        @ base\\r\\n                        @ inherit true\\r\\n                        [ rules\\r\\n                            {\\r\\n                                @ token ''\\r\\n                                @ foreground s1(syntax.text)\\r\\n                            {\\r\\n                                @ token 'invalid'\\r\\n                                @ foreground s1(syntax.invalid)\\r\\n                            {\\r\\n                                @ token 'emphasis'\\r\\n                                @ fontStyle 'italic'\\r\\n                            {\\r\\n                                @ token 'strong'\\r\\n                                @ fontStyle 'bold'\\r\\n                            {\\r\\n                                @ token 'variable'\\r\\n                                @ foreground s1(syntax.variable)\\r\\n                            {\\r\\n                                @ token 'variable.predefined'\\r\\n                                @ foreground s1(syntax.variable)\\r\\n                            {\\r\\n                                @ token 'constant'\\r\\n                                @ foreground s1(syntax.constant)\\r\\n                            {\\r\\n                                @ token 'comment'\\r\\n                                @ foreground s1(syntax.comment)\\r\\n                                @ fontStyle 'italic'\\r\\n                            {\\r\\n                                @ token 'number'\\r\\n                                @ foreground s1(syntax.number)\\r\\n                            {\\r\\n                                @ token 'number.hex'\\r\\n                                @ foreground s1(syntax.number)\\r\\n                            {\\r\\n                                @ token 'regexp'\\r\\n                                @ foreground s1(syntax.regexp)\\r\\n                            {\\r\\n                                @ token 'annotation'\\r\\n                                @ foreground s1(syntax.annotation)\\r\\n                            {\\r\\n                                @ token 'type'\\r\\n                                @ foreground s1(syntax.annotation)\\r\\n                            {\\r\\n                                @ token 'delimiter'\\r\\n                                @ foreground s1(syntax.text)\\r\\n                            {\\r\\n                                @ token 'delimiter.html'\\r\\n                                @ foreground s1(syntax.text)\\r\\n                            {\\r\\n                                @ token 'delimiter.xml'\\r\\n                                @ foreground s1(syntax.text)\\r\\n                            {\\r\\n                                @ token 'tag'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'tag.id.jade'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'tag.class.jade'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'meta.scss'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'metatag'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'metatag.content.html'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'metatag.html'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'metatag.xml'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'metatag.php'\\r\\n                                @ fontStyle 'bold'\\r\\n                            {\\r\\n                                @ token 'key'\\r\\n                                @ foreground s1(syntax.property)\\r\\n                            {\\r\\n                                @ token 'string.key.json'\\r\\n                                @ foreground s1(syntax.property)\\r\\n                            {\\r\\n                                @ token 'string.value.json'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'attribute.name'\\r\\n                                @ foreground s1(syntax.constant)\\r\\n                            {\\r\\n                                @ token 'attribute.value'\\r\\n                                @ foreground s1(syntax.property)\\r\\n                            {\\r\\n                                @ token 'attribute.value.number'\\r\\n                                @ foreground s1(syntax.number)\\r\\n                            {\\r\\n                                @ token 'attribute.value.unit'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'attribute.value.html'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'attribute.value.xml'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'string'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'string.html'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'string.sql'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'string.yaml'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'keyword'\\r\\n                                @ foreground s1(syntax.keyword)\\r\\n                            {\\r\\n                                @ token 'keyword.json'\\r\\n                                @ foreground s1(syntax.keyword)\\r\\n                            {\\r\\n                                @ token 'keyword.flow'\\r\\n                                @ foreground s1(syntax.keyword)\\r\\n                            {\\r\\n                                @ token 'keyword.flow.scss'\\r\\n                                @ foreground s1(syntax.keyword)\\r\\n                            {\\r\\n                                @ token 'operator.scss'\\r\\n                                @ foreground s1(syntax.operator)\\r\\n                            {\\r\\n                                @ token 'operator.sql'\\r\\n                                @ foreground s1(syntax.operator)\\r\\n                            {\\r\\n                                @ token 'operator.swift'\\r\\n                                @ foreground s1(syntax.operator)\\r\\n                            {\\r\\n                                @ token 'predefined.sql'\\r\\n                                @ foreground s1(syntax.predefined)\\r\\n                        { colors\\r\\n                            @ 'editor.background' ui.background\\r\\n                            @ 'editor.foreground' ui.text\\r\\n                            @ 'editorIndentGuide.background' ui.indent.inactive\\r\\n                            @ 'editorIndentGuide.activeBackground' ui.indent.active\\r\\n                            @ 'editorOverviewRuler.border' ui.background\\r\\n\\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set styleData = styles.computeStyleData(styleData)\\r\\n            set this.darkColors = new editors.MonacoColorsDark(styleData)\\r\\n            set this.lightColors = new editors.MonacoColorsLight(styleData)\\r\\n        set ${myName}.prototype.light\\r\\n            function\\r\\n                return theme(this.lightColors, 'vs')\\r\\n        set ${myName}.prototype.dark\\r\\n            function\\r\\n                return theme(this.darkColors, 'vs-dark')\\r\\n\"},\"t/editors/monaco/t/themes/monaco-overrides.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n        var myName = 'MonacoOverrides';\\r\\n        //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set this.styleData = styles.computeStyleData(styleData)\\r\\n        set ${myName}.prototype.getCss\\r\\n            function\\r\\n                const css = String.raw\\r\\n                var tp = new styles.ThemeProvider(this.styleData)\\r\\n                var darkColors = new editors.MonacoColorsDark(styleData)\\r\\n                var lightColors = new editors.MonacoColorsLight(styleData)\\r\\n                var monacoTheme = new editors.MonacoTheme(styleData)\\r\\n                var light = monacoTheme.light()\\r\\n                var dark = monacoTheme.dark()\\r\\n                return\\r\\n                    _` css\\r\\n                        + &lf;\\r\\n                        + &nbsp; /* Common overrides */&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-editor .line-numbers {&lf;\\r\\n                        + &nbsp;   color: currentColor;&lf;\\r\\n                        + &nbsp;   opacity: 0.5;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; /* Context menu overrides */&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .context-view.monaco-menu-container {&lf;\\r\\n                        + &nbsp;   font-family: 'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;&lf;\\r\\n                        + &nbsp;   background-color: transparent;&lf;\\r\\n                        + &nbsp;   box-shadow: none;&lf;\\r\\n                        + &nbsp;   border: none;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar {&lf;\\r\\n                        + &nbsp;   padding: 4px;&lf;\\r\\n                        + &nbsp;   border-radius: 3px;&lf;\\r\\n                        + &nbsp;   border-style: solid;&lf;\\r\\n                        + &nbsp;   box-shadow:&nbsp;\\r\\n                        _ tp.s('popover')\\r\\n                        + &nbsp;!important;&lf;\\r\\n                        + &nbsp;   background-color:&nbsp;\\r\\n                        _ tp.c('content')\\r\\n                        + &nbsp;!important;&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        _ tp.c('text')\\r\\n                        + &nbsp;!important;&lf;\\r\\n                        + &nbsp;   border-color: transparent !important;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .monaco-menu .monaco-action-bar {&lf;\\r\\n                        + &nbsp;   border-width: 0;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .monaco-menu .monaco-action-bar {&lf;\\r\\n                        + &nbsp;   border-width: 1px;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-label,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-label:focus {&lf;\\r\\n                        + &nbsp;   font-size: 14px;&lf;\\r\\n                        + &nbsp;   line-height: 1;&lf;\\r\\n                        + &nbsp;   color: inherit;&lf;\\r\\n                        + &nbsp;   border: 0;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item:focus {&lf;\\r\\n                        + &nbsp;   color: inherit !important;&lf;\\r\\n                        + &nbsp;   text-shadow: none !important;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item.disabled .action-menu-item {&lf;\\r\\n                        + &nbsp;   pointer-events: none;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item.focused:not(.disabled),&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item:hover:not(.disabled) {&lf;\\r\\n                        + &nbsp;   border-radius: 2px;&lf;\\r\\n                        + &nbsp;   background-color:&nbsp;\\r\\n                        _ tp.c('primary')\\r\\n                        + &nbsp;!important;&lf;\\r\\n                        + &nbsp;   color: white !important;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item {&lf;\\r\\n                        + &nbsp;   background-color: transparent !important;&lf;\\r\\n                        + &nbsp;   color: inherit !important;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor&lf;\\r\\n                        + &nbsp;   .monaco-menu&lf;\\r\\n                        + &nbsp;   .monaco-action-bar&lf;\\r\\n                        + &nbsp;   .action-item&lf;\\r\\n                        + &nbsp;   .action-menu-item:focus:not(.disabled)&lf;\\r\\n                        + &nbsp;   .action-label,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor&lf;\\r\\n                        + &nbsp;   .monaco-menu&lf;\\r\\n                        + &nbsp;   .monaco-action-bar&lf;\\r\\n                        + &nbsp;   .action-item:hover:not(.disabled)&lf;\\r\\n                        + &nbsp;   .action-label {&lf;\\r\\n                        + &nbsp;   color: inherit;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .keybinding {&lf;\\r\\n                        + &nbsp;   color: inherit;&lf;\\r\\n                        + &nbsp;   font-size: 85%;&lf;\\r\\n                        + &nbsp;   font-family: 'SF Mono', Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;&lf;\\r\\n                        + &nbsp;   line-height: 18px;&lf;\\r\\n                        + &nbsp;   opacity: 0.5;&lf;\\r\\n                        + &nbsp;   margin-left: 8px;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .keybinding,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-label:not(.separator) {&lf;\\r\\n                        + &nbsp;   padding: 8px 12px;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-action-bar .action-label.separator {&lf;\\r\\n                        + &nbsp;   border-bottom-color: currentColor;&lf;\\r\\n                        + &nbsp;   opacity: 0.1;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; /* Light theme overrides */&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .JsxText {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ light.colors['editor.foreground']\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .JsxSelfClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .JsxOpeningElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .JsxClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .tagName-of-JsxOpeningElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .tagName-of-JsxClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .tagName-of-JsxSelfClosingElement {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ lightColors.syntax.property\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .name-of-JsxAttribute {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ lightColors.syntax.number\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .name-of-PropertyAssignment {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ lightColors.syntax.string\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .name-of-PropertyAccessExpression {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ lightColors.syntax.constant\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; /* Dark theme overrides */&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .JsxText {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ dark.colors['editor.foreground']\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .JsxSelfClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .JsxOpeningElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .JsxClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .tagName-of-JsxOpeningElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .tagName-of-JsxClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .tagName-of-JsxSelfClosingElement {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ darkColors.syntax.property\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .name-of-JsxAttribute {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ darkColors.syntax.number\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .name-of-PropertyAssignment {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ darkColors.syntax.string\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .name-of-PropertyAccessExpression {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ darkColors.syntax.constant\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-vim-statusbar {&lf;\\r\\n                        + &nbsp;   font-family:&nbsp;\\r\\n                        @ 'var(--font-monospace)'\\r\\n                        + ;&lf;\\r\\n                        + &nbsp;   font-size: 12px;&lf;\\r\\n                        + &nbsp;   padding: 0 16px;&lf;\\r\\n                        + &nbsp;   height: 24px;&lf;\\r\\n                        + &nbsp;   line-height: 24px;&lf;\\r\\n                        + &nbsp;   border-top: 1px solid&nbsp;\\r\\n                        _ tp.c('border')\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-vim-statusbar input {&lf;\\r\\n                        + &nbsp;   font-family:&nbsp;\\r\\n                        @ 'var(--font-monospace)'\\r\\n                        + ;&lf;\\r\\n                        + &nbsp;   height: 100%;&lf;\\r\\n                        + &nbsp;   outline: 0;&lf;\\r\\n                        + &nbsp;   border: 0;&lf;\\r\\n                        + &nbsp;   background: transparent;&lf;\\r\\n                        + &nbsp; }&lf;\"},\"t/editors/monaco/t/themes/ittf-light-theme.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoIttfLightTheme';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        const ${myName}\\r\\n          {\\r\\n              @ base 'vs'\\r\\n              @ inherit false\\r\\n              [ rules\\r\\n                  {\\r\\n                      @ token 'node-name'\\r\\n                      @ foreground '0000ff'\\r\\n                  {\\r\\n                      @ token 'node-value'\\r\\n                      @ foreground '000000'\\r\\n                  {\\r\\n                      @ token 'ittf-command'\\r\\n                      @ foreground 'ffa500'\\r\\n                  {\\r\\n                      @ token 'mix'\\r\\n                      @ foreground 'ff0000'\\r\\n                  {\\r\\n                      @ token 'mix-value'\\r\\n                      @ foreground '4f548f'\\r\\n                  {\\r\\n                      @ token 'comment'\\r\\n                      @ foreground 'ababab'\\r\\n                  {\\r\\n                      @ token 'invalid'\\r\\n                      @ foreground 'ff00ff'\\r\\n                  {\\r\\n                      @ token 'interpolation.delimiter'\\r\\n                      @ foreground 'ff0000'\\r\\n                  {\\r\\n                      @ token 'interpolation'\\r\\n                      @ foreground '54db4b'\\r\\n              { colors\"},\"t/editors/monaco/t/themes/ittf-dark-theme.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoIttfDarkTheme';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        const ${myName}\\r\\n            {\\r\\n                @ base 'vs-dark'\\r\\n                @ inherit false\\r\\n                [ rules\\r\\n                    {\\r\\n                        @ token 'node-name'\\r\\n                        @ foreground '57e34d'\\r\\n                    {\\r\\n                        @ token 'node-value'\\r\\n                        @ foreground '40d1f5'\\r\\n                    {\\r\\n                        @ token 'ittf-command'\\r\\n                        @ foreground 'ffa500'\\r\\n                    {\\r\\n                        @ token 'mix'\\r\\n                        @ foreground 'ff0000'\\r\\n                    {\\r\\n                        @ token 'mix-value'\\r\\n                        @ foreground 'ffffff'\\r\\n                    {\\r\\n                        @ token 'comment'\\r\\n                        @ foreground 'ababab'\\r\\n                    {\\r\\n                        @ token 'interpolation.delimiter'\\r\\n                        @ foreground 'ff0000'\\r\\n                    {\\r\\n                        @ token 'interpolation'\\r\\n                        @ foreground 'ffff00'\\r\\n                    {\\r\\n                        @ token 'invalid'\\r\\n                        @ foreground 'ff00ff'\\r\\n                { colors\"},\"t/styles/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include colors\\r\\n  $include shadows\\r\\n  $include style-data\\r\\n  $include theme-provider\\r\\n  $include inject-css\"},\"t/styles/t/colors.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'Colors';\\r\\n      //\\r\\n    \\r\\n    iife_window( styles, ${myName})\\r\\n\\r\\n      const gray\\r\\n          {\\r\\n              @ '000' '#FDFDFE'\\r\\n              @ 100 '#F8F8FA'\\r\\n              @ 200 '#F0F1F2'\\r\\n              @ 300 '#E1E4E8'\\r\\n              @ 400 '#D1D5DA'\\r\\n              @ 500 '#B7BBBF'\\r\\n              @ 600 '#6C737C'\\r\\n              @ 700 '#596068'\\r\\n              @ 800 '#464D55'\\r\\n              @ 900 '#30363C'\\r\\n              @ 1000 '#25292E'\\r\\n      const green\\r\\n          {\\r\\n              @ '000' '#f0fff4'\\r\\n              @ 100 '#dcffe4'\\r\\n              @ 200 '#bef5cb'\\r\\n              @ 300 '#85e89d'\\r\\n              @ 400 '#34d058'\\r\\n              @ 500 '#28a745'\\r\\n              @ 600 '#22863a'\\r\\n              @ 700 '#176f2c'\\r\\n              @ 800 '#165c26'\\r\\n              @ 900 '#144620'\\r\\n      const red\\r\\n          {\\r\\n              @ '000' '#ffeef0'\\r\\n              @ 100 '#ffdce0'\\r\\n              @ 200 '#fdaeb7'\\r\\n              @ 300 '#f97583'\\r\\n              @ 400 '#ea4a5a'\\r\\n              @ 500 '#d73a49'\\r\\n              @ 600 '#cb2431'\\r\\n              @ 700 '#b31d28'\\r\\n              @ 800 '#9e1c23'\\r\\n              @ 900 '#86181d'\\r\\n      const yellow\\r\\n          {\\r\\n              @ '000' '#fffdef'\\r\\n              @ 100 '#fffbdd'\\r\\n              @ 200 '#fff5b1'\\r\\n              @ 300 '#ffea7f'\\r\\n              @ 400 '#ffdf5d'\\r\\n              @ 500 '#ffd33d'\\r\\n              @ 600 '#f9c513'\\r\\n              @ 700 '#dbab09'\\r\\n              @ 800 '#b08800'\\r\\n              @ 900 '#735c0f'\\r\\n      const blue\\r\\n          {\\r\\n              @ '000' '#f1f8ff'\\r\\n              @ 100 '#dbedff'\\r\\n              @ 200 '#c8e1ff'\\r\\n              @ 300 '#79b8ff'\\r\\n              @ 400 '#2188ff'\\r\\n              @ 500 '#0366d6'\\r\\n              @ 600 '#005cc5'\\r\\n              @ 700 '#044289'\\r\\n              @ 800 '#032f62'\\r\\n              @ 900 '#05264c'\\r\\n      const purple\\r\\n          {\\r\\n              @ '000' '#f5f0ff'\\r\\n              @ 100 '#e6dcfd'\\r\\n              @ 200 '#d1bcf9'\\r\\n              @ 300 '#b392f0'\\r\\n              @ 400 '#8a63d2'\\r\\n              @ 500 '#6f42c1'\\r\\n              @ 600 '#5a32a3'\\r\\n              @ 700 '#4c2889'\\r\\n              @ 800 '#3a1d6e'\\r\\n              @ 900 '#29134e'\\r\\n      const orange\\r\\n          {\\r\\n              @ '000' '#fff8f2'\\r\\n              @ 100 '#ffebda'\\r\\n              @ 200 '#ffd1ac'\\r\\n              @ 300 '#ffab70'\\r\\n              @ 400 '#fb8532'\\r\\n              @ 500 '#f66a0a'\\r\\n              @ 600 '#e36209'\\r\\n              @ 700 '#d15704'\\r\\n              @ 800 '#c24e00'\\r\\n              @ 900 '#a04100'\\r\\n      const pink\\r\\n          {\\r\\n              @ '000' '#ffeef8'\\r\\n              @ 100 '#fedbf0'\\r\\n              @ 200 '#f9b3dd'\\r\\n              @ 300 '#f692ce'\\r\\n              @ 400 '#ec6cb9'\\r\\n              @ 500 '#ea4aaa'\\r\\n              @ 600 '#d03592'\\r\\n              @ 700 '#b93a86'\\r\\n              @ 800 '#99306f'\\r\\n              @ 900 '#6d224f'\\r\\n      const primary\\r\\n          {\\r\\n              @ 100 '#EDE9FF'\\r\\n              @ 200 '#D2CAFD'\\r\\n              @ 300 '#A89AF9'\\r\\n              @ 400 '#7F6DF3'\\r\\n              @ 500 '#4630EB'\\r\\n              @ 600 '#3423CA'\\r\\n              @ 700 '#2518A9'\\r\\n              @ 800 '#190F88'\\r\\n              @ 900 '#100970'\\r\\n              @ 1000 '#161856'\\r\\n      const baseColors\\r\\n          {\\r\\n              @ blue\\r\\n              @ gray\\r\\n              @ green\\r\\n              @ orange\\r\\n              @ pink\\r\\n              @ primary\\r\\n              @ red\\r\\n              @ yellow\\r\\n              @ black '#001020'\\r\\n              @ white '#ffffff'\\r\\n              @ beige '#F7F6F3'\\r\\n              @ navy '#1A1A35'\\r\\n              @ lila '#A3A1F7'\\r\\n\\r\\n      const ${myName}\\r\\n          {\\r\\n              @ ...baseColors\\r\\n              { semantic\\r\\n                  @ border baseColors.gray[300]\\r\\n                  @ background baseColors.gray['000']\\r\\n                  @ success baseColors.green[500]\\r\\n                  @ error baseColors.red[500]\\r\\n                  @ warning baseColors.yellow[700]\\r\\n                  @ link baseColors.primary[500]\\r\\n                  @ text baseColors.black\\r\\n                  { dark\\r\\n                      @ border baseColors.gray[800]\\r\\n                      @ background baseColors.gray[1000]\\r\\n                      @ success baseColors.green[300]\\r\\n                      @ error baseColors.red[300]\\r\\n                      @ warning baseColors.yellow[300]\\r\\n                      @ link baseColors.primary[300]\\r\\n                      @ text baseColors.gray[100]\\r\\n\"},\"t/styles/t/shadows.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'Shadows';\\r\\n      //\\r\\n    \\r\\n    iife_window( styles, ${myName})\\r\\n\\r\\n      const ${myName}\\r\\n          {\\r\\n              @ popover 'var(theme-shadows-popover)'\\r\\n              @ small 'var(theme-shadows-small)'\\r\\n              @ medium 'var(theme-shadows-medium)'\\r\\n              @ large 'var(theme-shadows-large)'\\r\\n              @ input 'var(theme-shadows-input)'\\r\\n              @ button 'var(theme-shadows-button)'\\r\\n              @ test 'var(theme-shadows-small)'\"},\"t/styles/t/theme-provider.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    # taken from https://github.com/expo/snack/blob/main/website/src/client/components/ThemeProvider.tsx\\r\\n    # modified by Stefano Bassoli\\r\\n    $\\r\\n      var myName = 'ThemeProvider';\\r\\n      //\\r\\n    \\r\\n    iife_window( styles, ${myName})\\r\\n        \\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set styleData = styles.computeStyleData(styleData)\\r\\n            var colors = styleData.Colors\\r\\n            var shadows = styleData.Shadows\\r\\n            set this.lightColors\\r\\n                {\\r\\n                    @ primary colors.primary[500]\\r\\n                    @ secondary colors.black\\r\\n                    @ error colors.semantic.error\\r\\n                    @ warning colors.semantic.warning\\r\\n                    @ success colors.semantic.success\\r\\n                    @ 'primary-text' colors.white\\r\\n                    @ 'secondary-text' colors.white\\r\\n                    @ 'error-text' colors.white\\r\\n                    @ 'warning-text' colors.white\\r\\n                    @ 'success-text' colors.white\\r\\n                    @ text colors.gray[900]\\r\\n                    @ soft colors.gray[500]\\r\\n                    @ 'soft-text' colors.white\\r\\n                    @ background '#F9F9F9'\\r\\n                        # semantic.background offered too little contrast with content\\r\\n                        # background: colors.semantic.background,\\r\\n                    @ content colors.white\\r\\n                    @ hover colors.gray[100]\\r\\n                    @ disabled colors.gray[300]\\r\\n                    @ selected colors.primary[500]\\r\\n                    @ 'selected-text' colors.white\\r\\n                    @ border colors.semantic.border\\r\\n            +\\r\\n            set this.lightShadows\\r\\n                {\\r\\n                    @ popover shadows.popover\\r\\n                    @ small shadows.small\\r\\n                # Use custom colors for dark theme which are not\\r\\n                # so saturated and blue-ish\\r\\n                # const darkGray = colors.gray;\\r\\n            +\\r\\n            const darkGray\\r\\n                {\\r\\n                    @ 100 '#F5F5F5'\\r\\n                    @ 200 '#EBEBEB'\\r\\n                    @ 250 '#DDDDDD'\\r\\n                    @ 300 '#CFCFCF'\\r\\n                    @ 400 '#B0B0B0'\\r\\n                    @ 500 '#8F8F8F'\\r\\n                    @ 600 '#5C5C5C'\\r\\n                    @ 700 '#3B3B3B'\\r\\n                    @ 800 '#2F2F2F'\\r\\n                    @ 900 '#212121'\\r\\n                # Use custom colors for dark theme which are not\\r\\n                # so saturated and blue-ish\\r\\n                # const darkGray = colors.gray;\\r\\n            +\\r\\n            set this.darkColors\\r\\n                {\\r\\n                    @ primary colors.primary[400]\\r\\n                    @ secondary colors.white\\r\\n                    @ error colors.red[500]\\r\\n                    @ warning colors.yellow[500]\\r\\n                    @ success colors.green[600]\\r\\n                    @ 'primary-text' colors.white\\r\\n                    @ 'secondary-text' colors.black\\r\\n                    @ 'error-text' colors.white\\r\\n                    @ 'warning-text' colors.white\\r\\n                    @ 'success-text' colors.white\\r\\n                    @ text darkGray[200]\\r\\n                    @ soft darkGray[500]\\r\\n                    @ 'soft-text' colors.black\\r\\n                    @ background darkGray[900]\\r\\n                    @ content darkGray[800]\\r\\n                    @ hover darkGray[700]\\r\\n                    @ disabled darkGray[600]\\r\\n                    @ selected colors.white\\r\\n                    @ 'selected-text' darkGray[800]\\r\\n                    @ border darkGray[700]\\r\\n            +\\r\\n            set this.darkShadows\\r\\n                {\\r\\n                    @ popover shadows.popover\\r\\n                    @ small 'none'\\r\\n        set ${myName}.prototype.c\\r\\n            function\\r\\n                param color\\r\\n                param theme\\r\\n                if theme\\r\\n                    const colors\\r\\n                        iif theme === 'dark'\\r\\n                            then this.darkColors\\r\\n                            else this.lightColors\\r\\n                    return colors[color]\\r\\n                else\\r\\n                    return\\r\\n                        `lit\\r\\n                            + var(--color-\\r\\n                            @ color\\r\\n                            + )\\r\\n        set ${myName}.prototype.s\\r\\n            function\\r\\n                param shadow\\r\\n                param theme\\r\\n                if theme\\r\\n                    const shadows\\r\\n                        iif theme === 'dark'\\r\\n                            then this.darkShadows\\r\\n                            else this.lightShadows\\r\\n                    return shadows[shadow]\\r\\n                else\\r\\n                    return\\r\\n                        `lit\\r\\n                            + var(--shadow-\\r\\n                            @ shadow\\r\\n                            + )\"},\"t/editors/monaco/t/languages/ittf-language.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n        var myName = 'MonacoIttfLanguage';\\r\\n        //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n\\r\\n        const ${myName}\\r\\n            {\\r\\n                @ defaultToken 'invalid'\\r\\n                { tokenizer\\r\\n                    [ root\\r\\n                        {\\r\\n                            @ include '@whitespace'\\r\\n                        {\\r\\n                            @ include '@include'\\r\\n                        {\\r\\n                            @ include '@ittfCommand'\\r\\n                        {\\r\\n                            @ include '@mix'\\r\\n                        {\\r\\n                            @ include '@nodeName'\\r\\n                    [ whitespace\\r\\n                        [\\r\\n                            @ /[ \\\\t]+/\\r\\n                            @ 'white'\\r\\n                        [\\r\\n                            @ /\\\\$\\\\$.*$/\\r\\n                            @ 'comment'\\r\\n                        [\\r\\n                            @ /(\\\\$\\\\*)/\\r\\n                            {\\r\\n                                @ token 'comment'\\r\\n                                @ next 'comment'\\r\\n                    [ comment\\r\\n                        [\\r\\n                            @ /[^\\\\$\\\\*]+/\\r\\n                            @ 'comment'\\r\\n                        [\\r\\n                            @ /\\\\*\\\\$/\\r\\n                            @ 'comment'\\r\\n                            @ '@pop'\\r\\n                        [\\r\\n                            @ /[\\\\$\\\\*]/\\r\\n                            @ 'comment'\\r\\n                    [ include\\r\\n                        [\\r\\n                            @ /(\\\\$include)/\\r\\n                            {\\r\\n                                @ token 'mix'\\r\\n                                @ next 'includeValue'\\r\\n                    [ includeValue\\r\\n                        [\\r\\n                            @ /.*$/\\r\\n                            @ 'mix-value'\\r\\n                            @ '@pop'\\r\\n                    [ mix\\r\\n                        [\\r\\n                            @ /([^($\\\\s]+)(?:\\\\()/\\r\\n                            {\\r\\n                                { cases\\r\\n                                    @ '@eos' 'mix'\\r\\n                                    { '@default'\\r\\n                                        @ token 'mix'\\r\\n                                        @ next 'mixValue'\\r\\n                    [ ittfCommand\\r\\n                        [\\r\\n                            @ /\\\\$[a-z]+$/\\r\\n                            @ 'ittf-command'\\r\\n                        [\\r\\n                            @ /\\\\$[a-z]+/\\r\\n                            {\\r\\n                                @ token 'ittf-command'\\r\\n                                @ next 'scriptLine'\\r\\n                        [\\r\\n                            @ /\\\\$[ ]/\\r\\n                            {\\r\\n                                @ token 'interpolation'\\r\\n                                @ next 'scriptLine'\\r\\n                        [\\r\\n                            @ /(\\\\$global|\\\\$)$/\\r\\n                            {\\r\\n                                @ token 'interpolation'\\r\\n                                @ next 'scriptMultiLine'\\r\\n                    [ nodeName\\r\\n                        [\\r\\n                            @ /([^($\\\\s]+)/\\r\\n                            {\\r\\n                                { cases\\r\\n                                    @ '@eos' 'node-name'\\r\\n                                    { '@default'\\r\\n                                        @ token 'node-name'\\r\\n                                        @ next 'nodeValue'\\r\\n                    [ nodeValue\\r\\n                        [\\r\\n                            @ /[^\\\\$]+$/\\r\\n                            {\\r\\n                                @ token 'node-value'\\r\\n                                @ next '@popall'\\r\\n                        [\\r\\n                            @ /[^\\\\$]+/\\r\\n                            {\\r\\n                                @ token 'node-value'\\r\\n                        [\\r\\n                            @ /(\\\\${\\\"$\\\"}{)([^}]*)(})/\\r\\n                            {\\r\\n                                { cases\\r\\n                                    [ '@eos'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                                        @ 'interpolation'\\r\\n                                        {\\r\\n                                            @ token 'interpolation.delimiter'\\r\\n                                            @ next '@popall'\\r\\n                                    [ '@default'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                                        @ 'interpolation'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                        [\\r\\n                            @ /\\\\${\\\"$\\\"}${\\\"$\\\"}/\\r\\n                            {\\r\\n                                @ token 'node-value'\\r\\n                                @ next '@popall'\\r\\n                            # [ /.*$/, { token: 'node-value', next: '@pop' } ]\\r\\n                        [\\r\\n                            @ /\\\\$/\\r\\n                            @ 'node-value'\\r\\n                    [ mixValue\\r\\n                        [\\r\\n                            @ /\\\\)/\\r\\n                            {\\r\\n                                @ token 'mix'\\r\\n                                @ next '@popall'\\r\\n                        [\\r\\n                            @ /[^\\\\$|\\\\)]+$/\\r\\n                            {\\r\\n                                @ token 'mix-value'\\r\\n                                @ next '@popall'\\r\\n                        [\\r\\n                            @ /[^\\\\$|\\\\)]+/\\r\\n                            {\\r\\n                                @ token 'mix-value'\\r\\n                        [\\r\\n                            @ /(\\\\${\\\"$\\\"}{)([^}]*)(})/\\r\\n                            {\\r\\n                                { cases\\r\\n                                    [ '@eos'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                                        @ 'interpolation'\\r\\n                                        {\\r\\n                                            @ token 'interpolation.delimiter'\\r\\n                                            @ next '@popall'\\r\\n                                    [ '@default'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                                        @ 'interpolation'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                        [\\r\\n                            @ /\\\\${\\\"$\\\"}${\\\"$\\\"}/\\r\\n                            {\\r\\n                                @ token 'mix-value'\\r\\n                                @ next '@popall'\\r\\n                        [\\r\\n                            @ /\\\\$/\\r\\n                            @ 'mix-value'\\r\\n                    [ scriptLine\\r\\n                        [\\r\\n                            @ /.*$/\\r\\n                            @ 'interpolation'\\r\\n                            @ '@pop'\\r\\n                    [ scriptMultiLine\\r\\n                        [\\r\\n                            @ /[^\\\\/\\\\/\\\\.]+/\\r\\n                            @ 'interpolation'\\r\\n                        [\\r\\n                            @ /\\\\/\\\\/\\\\.$/\\r\\n                            @ 'interpolation'\\r\\n                            @ '@pop'\\r\\n        # export * from 'monaco-editor-core';\\r\\n\"},\"t/styles/t/style-data.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'computeStyleData';\\r\\n      //\\r\\n    \\r\\n    iife_window( styles, ${myName})\\r\\n        \\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            if styleData && styleData.colors && styleData.shadows\\r\\n                return styleData\\r\\n            log '${myName}.styles.Colors', styles.Colors\\r\\n            log '${myName}.styles.Shadows', styles.Shadows\\r\\n            return\\r\\n              {\\r\\n                  @ Colors styles.Colors\\r\\n                  @ Shadows styles.Shadows\"},\"t/editors/monaco/t/monaco-editor.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n        var myName = 'MonacoEditor';\\r\\n        //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        var setupExecuted = false\\r\\n        const editorStates = new Map()\\r\\n            # Store editor states such as cursor position, selection and scroll position for each model\\r\\n        const findModel\\r\\n            =>\\r\\n                param path\\r\\n                _ monaco.editor.getModels().find\\r\\n                    =>\\r\\n                        param model\\r\\n                        ===\\r\\n                            + model.uri.path\\r\\n                            `lit\\r\\n                                + /\\r\\n                                @ path\\r\\n        \\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set this.styleData = styles.computeStyleData(styleData)\\r\\n            set this.overrides = new editors.MonacoOverrides(this.styleData)\\r\\n            set this._disposables = []\\r\\n            set this._editor = null\\r\\n            set this.props\\r\\n                {\\r\\n                    @ lineNumbers 'on'\\r\\n                    @ wordWrap 'on'\\r\\n                    @ scrollBeyondLastLine false\\r\\n                    { minimap\\r\\n                        @ enabled false\\r\\n                    @ fontFamily 'var(--font-monospace)'\\r\\n                    @ fontLigatures true\\r\\n            set this._handleResize\\r\\n                =>\\r\\n                  _ _.debounce\\r\\n                      =>\\r\\n                          _ this._editor?.layout?.()\\r\\n                      @ 50\\r\\n                      {\\r\\n                          @ leading true\\r\\n                          @ trailing true\\r\\n            set this._handleEditFile\\r\\n                =>\\r\\n                    param _event\\r\\n                    const model = this._editor?.getModel?.()\\r\\n                    if model\\r\\n                        const value = model.getValue()\\r\\n                        if value !== this.props.files[this.props.selectedFileName]?.contents\\r\\n                            _ this.props.updateFiles\\r\\n                                =>\\r\\n                                    (\\r\\n                                        {\\r\\n                                            { [this.props.selectedFileName]\\r\\n                                                @ type 'CODE'\\r\\n                                                @ contents value\\r\\n\\r\\n\\r\\n        set ${myName}.setup\\r\\n            function \\r\\n                param styleData\\r\\n                param callback\\r\\n                if typeof callback == 'undefined'\\r\\n                    set callback = styleData\\r\\n                    set styleData = null\\r\\n                if setupExecuted\\r\\n                    return\\r\\n                        _ callback\\r\\n                _ require.config\\r\\n                    { \\r\\n                        { paths\\r\\n                            @ 'vs' 'https://cdn.bootcdn.net/ajax/libs/monaco-editor/0.20.0/min/vs'\\r\\n                _ require\\r\\n                    [ \\r\\n                        @ 'vs/editor/editor.main'\\r\\n                    function \\r\\n                        _ ${myName}.register\\r\\n                        set setupExecuted = true\\r\\n                        return\\r\\n                            _ callback\\r\\n\\r\\n        set ${myName}.register\\r\\n            function\\r\\n              const monacoTheme = new editors.MonacoTheme(this.styleData)\\r\\n              const ittfLightTheme = editors.MonacoIttfLightTheme\\r\\n              const ittfDarkTheme = editors.MonacoIttfDarkTheme\\r\\n              const light = monacoTheme.light()\\r\\n              const dark = monacoTheme.dark()\\r\\n              info 'ittfLightTheme', ittfLightTheme\\r\\n              info 'ittfDarkTheme', ittfDarkTheme\\r\\n              info 'light', light\\r\\n              info 'dark', dark\\r\\n              _ monaco.languages.register\\r\\n                  {\\r\\n                      @ id 'ittf'\\r\\n              _ monaco.languages.setMonarchTokensProvider('ittf', editors.MonacoIttfLanguage)\\r\\n              _ monaco.editor.defineTheme('ittfLight', editors.MonacoIttfLightTheme)\\r\\n              _ monaco.editor.defineTheme('ittfDark', editors.MonacoIttfDarkTheme)\\r\\n              _ monaco.editor.defineTheme('light', monacoTheme.light())\\r\\n              _ monaco.editor.defineTheme('dark', monacoTheme.dark())\\r\\n        \\r\\n        set ${myName}.prototype.setProps\\r\\n            function\\r\\n                param props\\r\\n                const prevProps\\r\\n                    _ Object.assign\\r\\n                      {\\r\\n                      @ this.props\\r\\n                set this.props\\r\\n                    _ Object.assign\\r\\n                      {\\r\\n                      @ this.props\\r\\n                      @ props\\r\\n                _ this.componentDidUpdate\\r\\n                    @ prevProps\\r\\n\\r\\n\\r\\n        set ${myName}.prototype.getEditorTheme\\r\\n            function\\r\\n              param theme\\r\\n              param filePath\\r\\n              if filePath.endsWith('.ittf')\\r\\n                  return theme == 'ligth' ? 'ittfLight' : 'ittfDark'\\r\\n              else\\r\\n                  return theme\\r\\n        \\r\\n        set ${myName}.prototype.componentDidMount\\r\\n            function\\r\\n                const\\r\\n                    {\\r\\n                        @ files\\r\\n                        @ selectedFileName\\r\\n                        @ autoFocus\\r\\n                        @ updateFiles\\r\\n                        @ onSelectFile\\r\\n                        @ readOnly\\r\\n                        ... rest\\r\\n                    = this.props\\r\\n                const options\\r\\n                    {\\r\\n                        @ ...rest\\r\\n                        @ theme this.getEditorTheme(rest.theme, selectedFileName)\\r\\n                        @ readOnly readOnly\\r\\n                const editor\\r\\n                    _ monaco.editor.create\\r\\n                        @ this.$container\\r\\n                        {\\r\\n                            ... options\\r\\n                            @ model null\\r\\n                set this._editor = editor\\r\\n                const codeEditorService = editor._codeEditorService\\r\\n                const openEditorBase = codeEditorService.openCodeEditor.bind(codeEditorService)\\r\\n                set codeEditorService.openCodeEditor =\\r\\n                    async=>\\r\\n                        param input\\r\\n                        param source\\r\\n                        const result = await openEditorBase(input, source)\\r\\n                        const\\r\\n                            {\\r\\n                                @ resource\\r\\n                                @ options\\r\\n                            = input\\r\\n                        _ this.props.onSelectFile(resource.path.replace(/^\\\\//, ''))\\r\\n                            # Remove the leading slash added by the Uri\\r\\n                        _ editor.setSelection(options.selection)\\r\\n                        _ editor.revealLine(options.selection.startLineNumber)\\r\\n                        return result\\r\\n                    # The methods provided by the service are on it's prototype\\r\\n                    # So spreading this object doesn't work, we must mutate it\\r\\n                _ this._disposables.push\\r\\n                    @ editor\\r\\n                _ this._disposables.push\\r\\n                    _ editor.onDidChangeModelContent(this._handleEditFile)\\r\\n                _ this._openFile\\r\\n                    @ selectedFileName\\r\\n                    @ files[selectedFileName]?.contents\\r\\n                    @ autoFocus\\r\\n                for const path in files\\r\\n                    const file = files[path]\\r\\n                    if file.type === 'CODE'\\r\\n                        _ this._initializeFile(path, file.contents)\\r\\n                    # Load all the files so the editor can provide proper intellisense\\r\\n\\r\\n        set ${myName}.prototype.componentDidUpdate\\r\\n            function\\r\\n                param prevProps\\r\\n                const\\r\\n                    {\\r\\n                        @ container\\r\\n                        @ selectedFileName\\r\\n                        @ files\\r\\n                        @ autoFocus\\r\\n                        @ theme\\r\\n                        @ updateFiles\\r\\n                        @ onSelectFile\\r\\n                        ... rest\\r\\n                    = this.props\\r\\n                if this._editor == null\\r\\n                    set this.$container = document.getElementById(container)\\r\\n                    _ this.componentDidMount\\r\\n                const options\\r\\n                    {\\r\\n                        @ ...rest\\r\\n                        @ theme this.getEditorTheme(theme, selectedFileName)\\r\\n                if this._editor\\r\\n                    _ this._editor.updateOptions(options)\\r\\n                    const model = this._editor.getModel()\\r\\n                    const value = files[selectedFileName]?.contents\\r\\n                    if selectedFileName !== prevProps.selectedFileName\\r\\n                        _ editorStates.set(prevProps.selectedFileName, this._editor.saveViewState())\\r\\n                            # Save the editor state for the previous file so we can restore it when it's re-opened\\r\\n                        _ this._openFile(selectedFileName, value, autoFocus)\\r\\n                    else\\r\\n                        if model && value !== model.getValue()\\r\\n                            _ this._editor.executeEdits\\r\\n                                @ null\\r\\n                                [\\r\\n                                    {\\r\\n                                        @ range model.getFullModelRange()\\r\\n                                        @ text value\\r\\n                                # @ts-ignore\\r\\n                if theme !== prevProps.theme || selectedFileName !== prevProps.selectedFileName\\r\\n                    _ monaco.editor.setTheme\\r\\n                        _ this.getEditorTheme\\r\\n                            @ theme\\r\\n                            @ selectedFileName\\r\\n                if prevProps.files !== this.props.files\\r\\n                    for const path in this.props.files\\r\\n                        const file = this.props.files[path]\\r\\n                        if file.type === 'CODE' && \\r\\n                            \\\\b (!prevProps.files || file.contents !== prevProps.files[path]?.contents) &&\\r\\n                            \\\\b path !== selectedFileName\\r\\n                            _ this._initializeFile(path, file.contents)\\r\\n        \\r\\n        set ${myName}.prototype.dispose\\r\\n            function\\r\\n                _ this._disposables.forEach\\r\\n                    =>\\r\\n                        param d\\r\\n                        _ d.dispose()\\r\\n        \\r\\n        set ${myName}.prototype._initializeFile\\r\\n            function\\r\\n                param path\\r\\n                param value\\r\\n                let model = findModel(path)\\r\\n                if model && !model.isDisposed()\\r\\n                    _ model.pushEditOperations\\r\\n                        [\\r\\n                        [\\r\\n                            {\\r\\n                                @ range model.getFullModelRange()\\r\\n                                @ text value\\r\\n                        # If a model exists, we need to update it's value\\r\\n                        # This is needed because the content for the file might have been modified externally\\r\\n                        # Use `pushEditOperations` instead of `setValue` or `applyEdits` to preserve undo stack\\r\\n                        # @ts-ignore\\r\\n                else\\r\\n                    if path.endsWith('.ittf')\\r\\n                        set model =\\r\\n                            _ monaco.editor.createModel\\r\\n                                @ value\\r\\n                                @ 'ittf'\\r\\n                                _ monaco.Uri.from\\r\\n                                    {\\r\\n                                        @ scheme 'file'\\r\\n                                        @ path\\r\\n                    else\\r\\n                        set model =\\r\\n                            _ monaco.editor.createModel\\r\\n                                @ value\\r\\n                                @ undefined\\r\\n                                _ monaco.Uri.from\\r\\n                                    {\\r\\n                                        @ scheme 'file'\\r\\n                                        @ path\\r\\n                    _ model.updateOptions\\r\\n                        {\\r\\n                            @ tabSize 4\\r\\n                            @ insertSpaces true\\r\\n\\r\\n        set ${myName}.prototype._openFile\\r\\n            function\\r\\n                param path\\r\\n                param value\\r\\n                param focus\\r\\n                info 'PackiMonacoEditor', '_openFile', path, value\\r\\n                _ this._initializeFile(path, value)\\r\\n                const model = findModel(path)\\r\\n                if this._editor && model\\r\\n                    _ this._editor.setModel(model)\\r\\n                    const editorState = editorStates.get(path)\\r\\n                        # Restore the editor state for the file\\r\\n                    if editorState\\r\\n                        _ this._editor.restoreViewState(editorState)\\r\\n                    if focus\\r\\n                        _ this._editor.focus()\\r\\n        \\r\\n        set ${myName}.prototype.render\\r\\n            function\\r\\n                param container\\r\\n                if this._editor == null\\r\\n                    set this.$container = document.getElementById(container)\\r\\n                    _ this.componentDidMount\\r\\n                $*\\r\\n                return\\r\\n                    div\\r\\n                        @ className {css(styles.container)}\\r\\n                        < style\\r\\n                            @ type \\\"text/css\\\"\\r\\n                            @ dangerouslySetInnerHTML\\r\\n                                {\\r\\n                                    @ __html overrides\\r\\n                        < ResizeDetector\\r\\n                            @ onResize {this._handleResize}\\r\\n                            div\\r\\n                                @ ref {this._node}\\r\\n                                @ className\\r\\n                                    _ classnames\\r\\n                                        _ css(styles.editor)\\r\\n                                        @ 'packi-monaco-editor'\\r\\n                                        `lit\\r\\n                                            + theme-\\r\\n                                            @ this.props.theme\\r\\n    const styles\\r\\n        _ StyleSheet.create\\r\\n            {\\r\\n                { container\\r\\n                    @ display 'flex'\\r\\n                    @ flex 1\\r\\n                    @ flexDirection 'column'\\r\\n                    @ height '100%'\\r\\n                    @ width '100%'\\r\\n                { editor\\r\\n                    @ height '100%'\\r\\n                    @ width '100%'\\r\\n\\r\\n                *$\\r\\n\\r\\n        $if false\\r\\n            set ${myName}.removePath\\r\\n                function $$ static\\r\\n                  param path\\r\\n                  _ editorStates.delete(path)\\r\\n                      # Remove editor states\\r\\n                  const model = findModel(path)\\r\\n                      # Remove associated models\\r\\n                  _ model?.dispose?.()\\r\\n            set ${myName}.renamePath\\r\\n                function $$ static\\r\\n                    param oldPath\\r\\n                    param newPath\\r\\n                    const selection = editorStates.get(oldPath)\\r\\n                    _ editorStates.delete(oldPath)\\r\\n                    _ editorStates.set(newPath, selection)\\r\\n                    _ this.removePath(oldPath)\\r\\n\"},\"t/mvc/t/forms/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include form \\r\\n  $include control \\r\\n\"},\"t/mvc/t/forms/t/form.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'Form';\\r\\n      //\\r\\n    \\r\\n    iife_window( mvc, ${myName}, increment, Underscore)\\r\\n\\r\\n      html_f buildForm\\r\\n            var temp = []\\r\\n            foreach item in ctx.controls\\r\\n                set item.__form = ctx\\r\\n                _ mvc.Control.build\\r\\n                    @ temp\\r\\n                    @ item\\r\\n            \\r\\n            div\\r\\n                class form-card\\r\\n                if ctx.title\\r\\n                    div {{ ctx.title }}\\r\\n                        class form-title\\r\\n                div\\r\\n                    id {{ ctx.id }}-message-warning\\r\\n                    class m-b-s\\r\\n                div\\r\\n                    id {{ ctx.id }}-message-success\\r\\n                    class m-b-s\\r\\n                < form\\r\\n                    method post\\r\\n                    id {{ ctx.id }}\\r\\n                    div {{ temp.join('') }}\\r\\n                    div\\r\\n                        class form-submit\\r\\n                        input \\r\\n                            type submit\\r\\n                            value Submit\\r\\n                            class submit\\r\\n                            id submit\\r\\n                            name submit\\r\\n                        input \\r\\n                            type submit\\r\\n                            value Reset\\r\\n                            class submit\\r\\n                            id reset\\r\\n                            name reset\\r\\n        \\r\\n      set ${myName}.setup\\r\\n        function\\r\\n          param $\\r\\n          param container\\r\\n          param model\\r\\n          param originalValues\\r\\n          param handlers\\r\\n          param_object( model, required, Function mvc.${myName}.setup )\\r\\n          param_object( originalValues, required, Function mvc.${myName}.setup )\\r\\n          param_object( handlers, required, Function mvc.${myName}.setup )\\r\\n\\r\\n          var container = container.nodeName ? container : $(container)\\r\\n          if !container || !container.nodeName\\r\\n            throw new Error('Container element for ' + model.title + 'form not found: ' + container)\\r\\n\\r\\n          set container.innerHTML\\r\\n            _ buildForm\\r\\n              @ model\\r\\n\\r\\n          var formValues\\r\\n            _ Object.assign\\r\\n              {\\r\\n              @ originalValues\\r\\n\\r\\n          var currentValues\\r\\n            _ Object.assign\\r\\n              {\\r\\n              @ originalValues\\r\\n\\r\\n          var context\\r\\n              {\\r\\n                  @ originalValues formValues\\r\\n                  @ currentValues currentValues\\r\\n                  @ onChange\\r\\n                      function\\r\\n                          param id\\r\\n                          param value\\r\\n                          set currentValues[id] = value\\r\\n                          log 'Changed currentValues', currentValues\\r\\n                          if handlers.onChange\\r\\n                            _ handlers.onChange\\r\\n                              @ id\\r\\n                              @ value\\r\\n                              @ currentValues\\r\\n                  @ onSubmit\\r\\n                      function\\r\\n                          param id\\r\\n                          param value\\r\\n                          if id\\r\\n                            set currentValues[id] = value\\r\\n                          log 'Submit currentValues', currentValues\\r\\n                          if handlers.onSubmit\\r\\n                            _ handlers.onSubmit\\r\\n                              @ currentValues\\r\\n          \\r\\n          _ Form.start\\r\\n              @ $\\r\\n              @ model\\r\\n              @ context\\r\\n\\r\\n          _ Form.start_validation\\r\\n              @ $\\r\\n              @ model\\r\\n\\r\\n      $* VIA\\r\\n      set ${myName}.build\\r\\n        function\\r\\n            param __html\\r\\n            param ctx\\r\\n            param_array( __html, required, Function mvc.${myName}.build )\\r\\n            param_object( ctx, required, Function mvc.${myName}.build )\\r\\n            \\r\\n            var temp = []\\r\\n            foreach item in ctx.controls\\r\\n                _ mvc.Control.build\\r\\n                    @ temp\\r\\n                    @ item\\r\\n            \\r\\n            div\\r\\n                class form-card\\r\\n                h3 {{ ctx.title }}\\r\\n                    class form-title\\r\\n                div\\r\\n                    id {{ ctx.id }}-message-warning\\r\\n                    class m-b-s\\r\\n                div\\r\\n                    id {{ ctx.id }}-message-success\\r\\n                    class m-b-s\\r\\n                < form\\r\\n                    method post\\r\\n                    id {{ ctx.id }}\\r\\n                    div {{ temp.join('') }}\\r\\n                    div\\r\\n                        class form-submit\\r\\n                        input \\r\\n                            type submit\\r\\n                            value Submit\\r\\n                            class submit\\r\\n                            id submit\\r\\n                            name submit\\r\\n                        input \\r\\n                            type submit\\r\\n                            value Reset\\r\\n                            class submit\\r\\n                            id reset\\r\\n                            name reset\\r\\n      *$\\r\\n\\r\\n      set ${myName}.start\\r\\n        function\\r\\n            param $\\r\\n            param model\\r\\n            param context\\r\\n            param_object( model, required, Function mvc.${myName}.start )\\r\\n            param_object( context, required, Function mvc.${myName}.start )\\r\\n\\r\\n            foreach item in model.controls\\r\\n                set item.__form = model\\r\\n                _ mvc.Control.start\\r\\n                    @ $\\r\\n                    @ item\\r\\n                    @ context\\r\\n\\r\\n            if context.onSubmit\\r\\n                var el = $('#' + model.id)\\r\\n                _ $on\\r\\n                    @ el\\r\\n                    @ 'submit'\\r\\n                    =>\\r\\n                        param event\\r\\n                        _ event.preventDefault\\r\\n                        const invalids = []\\r\\n                        foreach item in model.controls\\r\\n                          _ mvc.Control.validate\\r\\n                            @ item\\r\\n                            @ model.validation_rules\\r\\n                            @ context\\r\\n                            @ invalids\\r\\n                        if invalids.length == 0\\r\\n                          log \\\"model submitted\\\", model.id\\r\\n                          _  context.onSubmit\\r\\n                        else\\r\\n                          log 'invalid forms', invalids\\r\\n\\r\\n      set ${myName}.start_validation\\r\\n        function\\r\\n            param $\\r\\n            param model\\r\\n            param_object( model, required, Function mvc.${myName}.start_validation )\\r\\n\\r\\n            var rules = {}\\r\\n            foreach item in model.controls\\r\\n                _ mvc.Control.start_validation\\r\\n                    @ $\\r\\n                    @ item\\r\\n                    @ rules\\r\\n            set model.validation_rules = rules\\r\\n\\r\\n      set ${myName}.dispose\\r\\n        function\\r\\n            param $\\r\\n            param container\\r\\n            param model\\r\\n            foreach item in model.controls\\r\\n                _ mvc.Control.dispose\\r\\n                  @ $\\r\\n                  @ item\\r\\n            var container = container.nodeName ? container : $(container)\\r\\n            set container.innerHTML = ''\"},\"t/param_array.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, kind|@@null, message|@@null\\r\\n  $if kind == 'required'\\r\\n    if !${name} || !_.isArray(${name})\\r\\n      throw new Error('The \\\"${name}\\\" parameter is required and must be an array. ${message}.')\\r\\n  $else\\r\\n    set ${name} =\\r\\n        || \\r\\n            + ${name}\\r\\n            []\"},\"t/param_object.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, kind|@@null, message|@@null\\r\\n  $if kind == 'required'\\r\\n    if !${name} || !_.isObject(${name})\\r\\n      throw new Error('The \\\"${name}\\\" parameter is required and must be an object. ${message}.')\\r\\n  $else\\r\\n    set ${name} =\\r\\n        || \\r\\n            + ${name}\\r\\n            {\"},\"t/mvc/t/forms/t/control.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'Control';\\r\\n      //\\r\\n    \\r\\n    iife_window( mvc, ${myName}, increment, Underscore)\\r\\n\\r\\n      set ${myName}.disposables = {}\\r\\n\\r\\n      set ${myName}.build\\r\\n        function\\r\\n            param __html\\r\\n            param ctx\\r\\n            param_array( __html, required, Function mvc.${myName}.build )\\r\\n            param_object( ctx, required, Function mvc.${myName}.build )\\r\\n            \\r\\n            let options = []\\r\\n            if ctx.type == 'group'\\r\\n                var direction = ctx.direction || 'row'\\r\\n                foreach item in ctx.controls\\r\\n                    set item.__form = ctx.__form\\r\\n                    var aOptions = []\\r\\n                    _ ${myName}.build\\r\\n                        @ aOptions\\r\\n                        @ item\\r\\n                    _ options.push\\r\\n                        _ aOptions.join('\\\\n')\\r\\n                div {{ options.join('\\\\n') }}\\r\\n                    class control-group grid-{{ direction }}-{{ ctx.controls.length }}\\r\\n\\r\\n                return\\r\\n            elif ctx.type == 'select'\\r\\n                foreach item in ctx.options\\r\\n                    var aOptions = []\\r\\n                    _ select_option\\r\\n                        @ aOptions\\r\\n                        @ item\\r\\n                    _ options.push\\r\\n                        _ aOptions.join('')\\r\\n            elif ctx.type == 'radio'\\r\\n                foreach item in ctx.options\\r\\n                    var aOptions = []\\r\\n                    _ radio_option\\r\\n                        @ aOptions\\r\\n                        @ ctx\\r\\n                        @ item\\r\\n                    _ options.push\\r\\n                        _ aOptions.join('')\\r\\n            \\r\\n            div\\r\\n                class single-control row row-space\\r\\n                label {{ ctx.label }}\\r\\n                    @ for {{ ctx.id }}\\r\\n                    class control-label {{ (ctx.required ? 'required' : '') }} \\r\\n                div\\r\\n                    class input-group\\r\\n                    if ctx.type == 'static'\\r\\n                        div\\r\\n                            class form-control-static\\r\\n                            id {{ ctx.__form.id + '-' +  ctx.id }}\\r\\n                    elif ctx.type == 'text'\\r\\n                        input\\r\\n                            class input--style-2\\r\\n                            type text\\r\\n                            placeholder {{ ctx.label }}\\r\\n                            name {{ ctx.id }}\\r\\n                    elif ctx.type == 'select'\\r\\n                        div\\r\\n                            class rs-select2 js-select-simple select--no-search\\r\\n                            select {{ options.join('\\\\n') }}\\r\\n                                name {{ ctx.id }}\\r\\n                            $*\\r\\n                            div\\r\\n                                id {{ ctx.id }}-dropdown\\r\\n                                class select-dropdown\\r\\n                            *$\\r\\n                    elif ctx.type == 'date'\\r\\n                        $*\\r\\n                        input\\r\\n                            class input--style-2 js-datepicker\\r\\n                            type text\\r\\n                            placeholder {{ ctx.label }}\\r\\n                            name {{ ctx.id }}\\r\\n                        i\\r\\n                            class zmdi zmdi-calendar-note input-icon js-btn-calendar\\r\\n                        *$\\r\\n                        div\\r\\n                            class form-container\\r\\n                            div\\r\\n                                class form\\r\\n                                i \\r\\n                                    class far fa-calendar-alt\\r\\n                                input \\r\\n                                    type text\\r\\n                                    placeholder Pick a date\\r\\n                                    class date-input\\r\\n                                    name {{ ctx.id }}\\r\\n\\r\\n                    elif ctx.type == 'checkbox'\\r\\n                        div\\r\\n                            class checkbox-item\\r\\n                            input\\r\\n                                class input--style-2\\r\\n                                type checkbox\\r\\n                                placeholder {{ ctx.label }}\\r\\n                                name {{ ctx.id }}\\r\\n                    elif ctx.type == 'radio'\\r\\n                        div {{ options.join('\\\\n') }}\\r\\n                            class radio-group\\r\\n                    elif ctx.type == 'slider'\\r\\n                        div\\r\\n                            class slider-group ui-slider ui-slider-horizontal\\r\\n                            div\\r\\n                                class slider-item\\r\\n                                id {{ ctx.id }}\\r\\n                            span\\r\\n                                class donate-value\\r\\n                                id value-lower\\r\\n                    elif ctx.type == 'range-slider'\\r\\n                        div\\r\\n                            class slider\\r\\n                            id {{ ctx.id }}\\r\\n                            @ se-min {{ (ctx.min || 0) }}\\r\\n                            @ se-step {{ (ctx.step || 1) }}\\r\\n                            @ se-min-value {{ (ctx.minValue || 50) }}\\r\\n                            @ se-max-value {{ (ctx.maxValue || 50) }}\\r\\n                            @ se-max {{ (ctx.max || 100) }}\\r\\n                            div\\r\\n                              class slider-touch-left\\r\\n                              span \\r\\n                            div\\r\\n                              class slider-touch-right\\r\\n                              span \\r\\n                            div\\r\\n                              class slider-line\\r\\n                              span \\r\\n                    elif ctx.type == 'code'\\r\\n                        div\\r\\n                            id {{ ctx.id }}\\r\\n                    elif ctx.type == 'ittf-editor'\\r\\n                        div\\r\\n                            id {{ ctx.id }}\\r\\n                            @ style height:{{ (ctx.height || '400') }}px;width:100%;\\r\\n\\r\\n                          $*\\r\\n                          @ style display:flex;flex:1;flex-direction:column;height:{{ (ctx.height || '400px') }};width:100%;\\r\\n                          div $$ ResizeDetector\\r\\n                              @ style display:flex;flex:1;flex-direction:column;min-width:0;min-height:0;position:relative\\r\\n                              iframe\\r\\n                                  id {{ ctx.id }}-horizontal\\r\\n                                  @ style display:block;position:absolute;left:0;top:0;pointer-events:none;opacity:0;width:100%;height:1px;\\r\\n                              iframe\\r\\n                                  id {{ ctx.id }}-vertical\\r\\n                                  @ style display:block;position:absolute;left:0;top:0;pointer-events:none;opacity:0;height:100%;width:1px;\\r\\n                              div $$ MonacoEditor\\r\\n                                  id {{ ctx.id }}\\r\\n                                  @ style height:100%;width:100%;\\r\\n                          *$\\r\\n                label &nbsp;\\r\\n                    @ id {{ ctx.id }}-error\\r\\n                    @ for {{ ctx.id }}\\r\\n                    class control-error\\r\\n\\r\\n        function select_option\\r\\n            param __html\\r\\n            param ctx\\r\\n            _ __html.push('<option')\\r\\n            _ __html.push(' value=\\\"' + ctx.value + '\\\"')\\r\\n            if ctx.selected\\r\\n                _ __html.push(' selected=\\\"selected\\\"')\\r\\n            _ __html.push('>')\\r\\n            _ __html.push(ctx.label)\\r\\n            _ __html.push('</option>')   \\r\\n\\r\\n        function radio_option\\r\\n            param __html\\r\\n            param radio\\r\\n            param ctx\\r\\n            div\\r\\n                class radio-item\\r\\n                input \\r\\n                    type radio\\r\\n                    name {{ radio.id }}\\r\\n                    id {{ ctx.id }}\\r\\n                    value {{ ctx.value }}\\r\\n                    checked \\r\\n                label {{ ctx.label }}\\r\\n                    @ for {{ ctx.id }}\\r\\n                span \\r\\n                    class check\\r\\n\\r\\n      set ${myName}.start\\r\\n          function\\r\\n              param $\\r\\n              param item\\r\\n              param context\\r\\n              param_object( item, required, Function mvc.${myName}.start )\\r\\n              param_object( context, required, Function mvc.${myName}.start )\\r\\n\\r\\n              if item.type == 'group'\\r\\n                  foreach child in item.controls\\r\\n                      set child.__form = item.__form\\r\\n                      _ ${myName}.start\\r\\n                          @ $\\r\\n                          @ child\\r\\n                          @ context\\r\\n                  return\\r\\n              elif item.type == 'static'\\r\\n                  try \\r\\n                      var el = $('#' + item.__form.id + '-' + item.id)\\r\\n                      set el.innerHTML = context.originalValues[item.id]\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'text'\\r\\n                  try \\r\\n                      var el = $('input[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.value = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                          _ $on\\r\\n                              @ el\\r\\n                              @ 'change'\\r\\n                              =>\\r\\n                                  param event\\r\\n                                  log \\\"value changed\\\", el\\r\\n                                  _  context.onChange\\r\\n                                      @ item.id\\r\\n                                      @ el.value\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'select'\\r\\n                  try \\r\\n                      var selectBox = $('select[name=\\\"' + item.id + '\\\"]')\\r\\n                      if item.isSearcheable\\r\\n                          _ controls.NiceSelect.bind(selectBox, {searchable: true})\\r\\n                      else\\r\\n                          _ controls.NiceSelect.bind(selectBox)\\r\\n                      var el = $('select[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.value = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                          _ $on\\r\\n                              @ el\\r\\n                              @ 'change'\\r\\n                              =>\\r\\n                                  param event\\r\\n                                  log \\\"value changed\\\", el\\r\\n                                  _  context.onChange\\r\\n                                      @ item.id\\r\\n                                      @ el.value\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'checkbox'\\r\\n                  try \\r\\n                      var el = $('input[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.checked = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                          _ $on\\r\\n                              @ el\\r\\n                              @ 'change'\\r\\n                              =>\\r\\n                                  param event\\r\\n                                  _  context.onChange\\r\\n                                      @ item.id\\r\\n                                      @ el.checked\\r\\n                  catch err\\r\\n                    log err\\r\\n              elif item.type == 'radio'\\r\\n                  try \\r\\n                      # original value set in build\\r\\n                      var els\\r\\n                        _ document.querySelectorAll\\r\\n                          @ 'input[type=radio][name=\\\"' + item.id + '\\\"]'\\r\\n                      _ els.forEach\\r\\n                        =>\\r\\n                          param el\\r\\n                          if context.onChange\\r\\n                            _ $on\\r\\n                                @ el\\r\\n                                @ 'change'\\r\\n                                =>\\r\\n                                    param event\\r\\n                                    _  context.onChange\\r\\n                                        @ item.id\\r\\n                                        @ el.value\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'date'\\r\\n                  try \\r\\n                      var el = $('input[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.value = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                        $*\\r\\n                        _ $('input[name=\\\"' + item.id + '\\\"]').daterangepicker\\r\\n                            { \\r\\n                                @ \\\"singleDatePicker\\\" true\\r\\n                                @ \\\"showDropdowns\\\" true\\r\\n                                @ \\\"autoUpdateInput\\\" true\\r\\n                                @ \\\"autoApply\\\" true\\r\\n                                { locale\\r\\n                                    @ format 'DD/MM/YYYY'\\r\\n                        _ $('input[name=\\\"' + item.id + '\\\"]').on\\r\\n                            @ 'apply.daterangepicker'\\r\\n                            function \\r\\n                                param ev\\r\\n                                param picker\\r\\n                                _ $(this).val(picker.startDate.format('DD/MM/YYYY'))\\r\\n                        log 'datepicker', item.id, 'activated'\\r\\n                        *$\\r\\n                        _ $on\\r\\n                            @ el\\r\\n                            @ 'change'\\r\\n                            =>\\r\\n                                param event\\r\\n                                _  context.onChange\\r\\n                                    @ item.id\\r\\n                                    @ el.value\\r\\n                        var dateControl\\r\\n                            new controls.CodepenDatePicker(\\\".date-input\\\")\\r\\n                  catch err\\r\\n                      log err\\r\\n\\r\\n              elif item.type == 'slider'\\r\\n                  try \\r\\n                      _ noUiSlider.create\\r\\n                          @ $('#' + item.id)[0]\\r\\n                          { \\r\\n                              [ start\\r\\n                                  @ item.start\\r\\n                              @ step item.step\\r\\n                              [ connect\\r\\n                                  @ true\\r\\n                                  @ false\\r\\n                              [ tooltips\\r\\n                                  @ true\\r\\n                              { range\\r\\n                                  @ 'min' item.range.min\\r\\n                                  @ 'max' item.range.max\\r\\n                              @ format\\r\\n                                  _ wNumb\\r\\n                                      { \\r\\n                                          @ decimals 0\\r\\n                                          @ thousand ','\\r\\n                                          @ prefix '$ '\\r\\n                  catch err\\r\\n                      log err\\r\\n\\r\\n              elif item.type == 'range-slider'\\r\\n                  # original value set in build\\r\\n                  if context.onChange\\r\\n                      try \\r\\n                          var newRangeSlider = new controls.RangeSlider(item.id)\\r\\n                          set newRangeSlider.onChange =\\r\\n                              function \\r\\n                                  param min\\r\\n                                  param max\\r\\n                                  _  context.onChange\\r\\n                                          @ item.id\\r\\n                                          @ min + ';' + max\\r\\n                          set newRangeSlider.didChanged\\r\\n                              function \\r\\n                                  param min\\r\\n                                  param max\\r\\n                                  _  context.onChange\\r\\n                                          @ item.id\\r\\n                                          @ min + ';' + max\\r\\n                      catch err\\r\\n                          log err\\r\\n                  # call reset if needed\\r\\n                  # newRangeSlider.reset();\\r\\n              elif item.type == 'code'\\r\\n                  try \\r\\n                      var editor\\r\\n                          _ CodeMirror\\r\\n                              @ $('#' + item.id)[0]\\r\\n                              { \\r\\n                                  @ mode \\\"text/html\\\"\\r\\n                                  @ theme \\\"dracula\\\"\\r\\n                                  @ lineWrapping false\\r\\n                                  @ lineNumbers true\\r\\n                                  @ styleActiveLine true\\r\\n                                  @ matchBrackets true\\r\\n                                  @ viewportMargin Infinity\\r\\n                                  { extraKeys\\r\\n                                      @ \\\"Ctrl-Space\\\" \\\"autocomplete\\\"\\r\\n                                  @ value \\\"<!doctype html>\\\\n<html>\\\\n  \\\" + $('#' + item.id)[0].innerHTML + \\\"\\\\n</html>\\\"\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'ittf-editor'\\r\\n                  try \\r\\n                      _ editors.MonacoEditor.setup\\r\\n                          function\\r\\n                              var monacoEditor = new editors.MonacoEditor()\\r\\n                              _ monacoEditor.setProps\\r\\n                                  {\\r\\n                                      @ container item.id\\r\\n                                      { files\\r\\n                                        { ['file.ittf']\\r\\n                                          @ type 'CODE'\\r\\n                                          @ contents context.originalValues[item.id] || ''\\r\\n                                      @ selectedFileName 'file.ittf'\\r\\n                                      @ autoFocus true\\r\\n                                      @ automaticLayout true\\r\\n                                      @ updateFiles\\r\\n                                        =>\\r\\n                                            param data\\r\\n                                            if context.onChange\\r\\n                                              log 'monacoEditor.updateFiles.data', data()\\r\\n                                              _ context.onChange\\r\\n                                                  @ item.id\\r\\n                                                  @ data()['file.ittf'].contents\\r\\n                                      @ readOnly false\\r\\n                              set ${myName}.disposables[item.id]\\r\\n                                [\\r\\n                                  @ monacoEditor\\r\\n                              _ monacoEditor.render\\r\\n                  catch err\\r\\n                      log err\\r\\n\\r\\n      set ${myName}.start_validation\\r\\n          function\\r\\n              param $\\r\\n              param item\\r\\n              param rules\\r\\n              param_object( item, required, Function mvc.${myName}.start_validation )\\r\\n              param_object( rules, required, Function mvc.${myName}.start_validation )\\r\\n\\r\\n              if item.type == 'group'\\r\\n                  foreach child in item.controls\\r\\n                      _ ${myName}.start_validation\\r\\n                          @ $\\r\\n                          @ child\\r\\n                          @ rules\\r\\n                  return\\r\\n              \\r\\n              var errorEl = item.required || item.validate ? \\r\\n                  \\\\b $('#' + item.id + '-error') : null\\r\\n              if item.required\\r\\n                  set rules[item.id] = rules[item.id] || []\\r\\n                  _ rules[item.id].push\\r\\n                    {\\r\\n                      @ kind \\\"required\\\"\\r\\n                      @ $error errorEl\\r\\n              if item.validate\\r\\n                  set rules[item.id] = rules[item.id] || []\\r\\n                  _ rules[item.id].push\\r\\n                    {\\r\\n                      @ kind \\\"function\\\"\\r\\n                      @ validate item.validate\\r\\n                      @ $error errorEl\\r\\n\\r\\n      set ${myName}.validate\\r\\n          function\\r\\n              param item\\r\\n              param formRules\\r\\n              param context\\r\\n              param invalids\\r\\n              if item.type == 'group'\\r\\n                  foreach child in item.controls\\r\\n                      _ ${myName}.validate\\r\\n                          @ child\\r\\n                          @ formRules\\r\\n                          @ context\\r\\n                          @ invalids\\r\\n                  return\\r\\n              var rules = formRules[item.id]\\r\\n              log item.id, 'rules', rules\\r\\n              if rules && rules.length > 0\\r\\n                const value = context.currentValues[item.id]\\r\\n                foreach rule in rules\\r\\n                  if rule.kind == 'required'\\r\\n                    if typeof value == 'undefined' || value == 'null' || value.length == 0\\r\\n                      _ invalids.push\\r\\n                        @ item\\r\\n                      set rule.$error.innerHTML = 'Please enter the ' + item.label + ' value.'\\r\\n                  else\\r\\n                    set rule.$error.innerHTML = '&nbsp;'\\r\\n\\r\\n      set ${myName}.dispose\\r\\n        function\\r\\n            param $\\r\\n            param item\\r\\n            const dispArray = ${myName}.disposables[item.id]\\r\\n            if dispArray\\r\\n              foreach disp in dispArray\\r\\n                  _ disp.dispose\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"},\"t/styles/t/inject-css.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'InjectCss';\\r\\n      //\\r\\n\\r\\n    iife_window( styles, ${myName}, increment)\\r\\n\\r\\n      set ${myName}.addLink\\r\\n        function\\r\\n          param href\\r\\n          var head = document.head || document.getElementsByTagName('head')[0]\\r\\n          var link = document.createElement('link')\\r\\n          set link.rel = \\\"stylesheet\\\"\\r\\n          set link.href = href\\r\\n          set link.type = \\\"text/css\\\"\\r\\n          _ head.appendChild(link)\\r\\n    \\r\\n      set ${myName}.addText\\r\\n        function\\r\\n          param cssObj\\r\\n          var head = document.head || document.getElementsByTagName('head')[0]\\r\\n          var style = document.createElement('style')\\r\\n          set style.type = 'text/css'\\r\\n          var aCss = []\\r\\n          for var krule in cssObj\\r\\n              var ruleObj = cssObj[krule]\\r\\n              var aRule = []\\r\\n              for var kstyle in ruleObj\\r\\n                  if typeof ruleObj[kstyle] === 'object'\\r\\n                      var aRule2 = [] \\r\\n                      for var kstyle2 in ruleObj[kstyle]\\r\\n                          _ aRule2.push\\r\\n                              @ kstyle2 + ': ' + ruleObj[kstyle][kstyle2]\\r\\n                      _ aRule.push\\r\\n                          @ kstyle + ' { ' + aRule2.join(';\\\\n') + ' } '\\r\\n                  else\\r\\n                      _ aRule.push\\r\\n                          @ kstyle + ': ' + ruleObj[kstyle]\\r\\n              _ aCss.push\\r\\n                  @ krule + ' { ' + aRule.join(';\\\\n') + ' } '\\r\\n          var css = aCss.join('\\\\n')\\r\\n          # IE8 and below.\\r\\n          if style.styleSheet\\r\\n              set style.styleSheet.cssText = css\\r\\n          else\\r\\n              _ style.appendChild(document.createTextNode(css))\\r\\n          _ head.appendChild(style)    \\r\\n\"},\"t/controls/select/nice-select.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'NiceSelect'; \\r\\n      //\\r\\n    \\r\\n    iife_window( controls, ${myName} )\\r\\n        function triggerClick\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"MouseEvents\\\")\\r\\n            _ event.initEvent(\\\"click\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n            # utility functions\\r\\n        function triggerChange\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"HTMLEvents\\\")\\r\\n            _ event.initEvent(\\\"change\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n        function triggerFocusIn\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"FocusEvent\\\")\\r\\n            _ event.initEvent(\\\"focusin\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n        function triggerFocusOut\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"FocusEvent\\\")\\r\\n            _ event.initEvent(\\\"focusout\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n        function attr\\r\\n            param el\\r\\n            param key\\r\\n            return el.getAttribute(key)\\r\\n        function data\\r\\n            param el\\r\\n            param key\\r\\n            return el.getAttribute(\\\"data-\\\" + key)\\r\\n        function hasClass\\r\\n            param el\\r\\n            param className\\r\\n            if el\\r\\n                return el.classList.contains(className)\\r\\n            else\\r\\n                return false\\r\\n        function addClass\\r\\n            param el\\r\\n            param className\\r\\n            if el\\r\\n                return el.classList.add(className)\\r\\n        function removeClass\\r\\n            param el\\r\\n            param className\\r\\n            if el\\r\\n                return el.classList.remove(className)\\r\\n        var defaultOptions\\r\\n            { \\r\\n                @ data null\\r\\n                @ searchable false\\r\\n        function ${myName}\\r\\n            param element\\r\\n            param options\\r\\n            set this.el = element\\r\\n            set this.config =\\r\\n                _ Object.assign\\r\\n                    { \\r\\n                    @ defaultOptions\\r\\n                    || \\r\\n                        + options\\r\\n                        { \\r\\n            set this.data = this.config.data\\r\\n            set this.selectedOptions = []\\r\\n            set this.placeholder = attr(this.el, \\\"placeholder\\\") || this.config.placeholder || \\\"Select an option\\\"\\r\\n            set this.dropdown = null\\r\\n            set this.multiple = attr(this.el, \\\"multiple\\\")\\r\\n            set this.disabled = attr(this.el, \\\"disabled\\\")\\r\\n            _ this.create()\\r\\n        set ${myName}.prototype.create =\\r\\n            function \\r\\n                set this.el.style.display = \\\"none\\\"\\r\\n                if this.data\\r\\n                    _ this.processData(this.data)\\r\\n                else\\r\\n                    _ this.extractData()\\r\\n                _ this.renderDropdown()\\r\\n                _ this.bindEvent()\\r\\n        set ${myName}.prototype.processData =\\r\\n            function \\r\\n                param data\\r\\n                var options = []\\r\\n                _ data.forEach\\r\\n                    => \\r\\n                        param item\\r\\n                        _ options.push\\r\\n                            { \\r\\n                                @ data item\\r\\n                                { attributes\\r\\n                                    @ selected false\\r\\n                                    @ disabled false\\r\\n                                    @ optgroup item.value == 'optgroup'\\r\\n                set this.options = options\\r\\n        set ${myName}.prototype.extractData =\\r\\n            function \\r\\n                var options = this.el.querySelectorAll(\\\"option,optgroup\\\")\\r\\n                var data = []\\r\\n                var allOptions = []\\r\\n                var selectedOptions = []\\r\\n                _ options.forEach\\r\\n                    => \\r\\n                        param item\\r\\n                        if item.tagName == 'OPTGROUP'\\r\\n                            var itemData\\r\\n                                { \\r\\n                                    @ text item.label\\r\\n                                    @ value 'optgroup'\\r\\n                        else\\r\\n                            var itemData\\r\\n                                { \\r\\n                                    @ text item.innerText\\r\\n                                    @ value item.value\\r\\n                        var attributes\\r\\n                            { \\r\\n                                @ selected item.getAttribute(\\\"selected\\\") != null\\r\\n                                @ disabled item.getAttribute(\\\"disabled\\\") != null\\r\\n                                @ optgroup item.tagName == 'OPTGROUP'\\r\\n                        _ data.push(itemData)\\r\\n                        _ allOptions.push\\r\\n                            { \\r\\n                                @ data itemData\\r\\n                                @ attributes\\r\\n                set this.data = data\\r\\n                set this.options = allOptions\\r\\n                _ this.options.forEach\\r\\n                    function \\r\\n                        param item\\r\\n                        if item.attributes.selected\\r\\n                            _ selectedOptions.push(item)\\r\\n                set this.selectedOptions = selectedOptions\\r\\n        set ${myName}.prototype.renderDropdown =\\r\\n            function \\r\\n                var classes\\r\\n                    [ \\r\\n                        @ \\\"nice-select\\\"\\r\\n                        @ attr(this.el, \\\"class\\\") || \\\"\\\"\\r\\n                        iif this.disabled\\r\\n                            then \\\"disabled\\\"\\r\\n                            else \\\"\\\"\\r\\n                        iif this.multiple\\r\\n                            then \\\"has-multiple\\\"\\r\\n                            else \\\"\\\"\\r\\n                let searchHtml\\r\\n                    `lit \\r\\n                        + <div class=\\\"nice-select-search-box\\\">&lf;\\r\\n                        + <input type=\\\"text\\\" class=\\\"nice-select-search\\\" placeholder=\\\"Search...\\\"/>&lf;\\r\\n                        + </div>\\r\\n                var html\\r\\n                    `lit \\r\\n                        + <div class=\\\"\\r\\n                        _ classes.join(\\\" \\\")\\r\\n                        + \\\" tabindex=\\\"\\r\\n                        iif this.disabled\\r\\n                            then null\\r\\n                            else 0\\r\\n                        + \\\">&lf;\\r\\n                        + &nbsp; <span class=\\\"\\r\\n                        iif this.multiple\\r\\n                            then \\\"multiple-options\\\"\\r\\n                            else \\\"current\\\"\\r\\n                        + \\\"></span>&lf;\\r\\n                        + &nbsp; <div class=\\\"nice-select-dropdown\\\">&lf;\\r\\n                        + &nbsp;&nbsp;\\r\\n                        iif this.config.searchable\\r\\n                            then searchHtml\\r\\n                            else \\\"\\\"\\r\\n                        + &lf;\\r\\n                        + &nbsp; <ul class=\\\"list\\\"></ul>&lf;\\r\\n                        + &nbsp; </div></div>&lf;\\r\\n                        + \\r\\n                _ this.el.insertAdjacentHTML(\\\"afterend\\\", html)\\r\\n                set this.dropdown = this.el.nextElementSibling\\r\\n                _ this._renderSelectedItems()\\r\\n                _ this._renderItems()\\r\\n        set ${myName}.prototype._renderSelectedItems =\\r\\n            function \\r\\n                if this.multiple\\r\\n                    var selectedHtml = \\\"\\\"\\r\\n                    if window.getComputedStyle(this.dropdown).width == 'auto' || this.selectedOptions.length < 2\\r\\n                        _ this.selectedOptions.forEach\\r\\n                            function \\r\\n                                param item\\r\\n                                set selectedHtml +=\\r\\n                                    `lit \\r\\n                                        + <span class=\\\"current\\\">\\r\\n                                        @ item.data.text\\r\\n                                        + </span>\\r\\n                        set selectedHtml =\\r\\n                            iif selectedHtml == \\\"\\\"\\r\\n                                then this.placeholder\\r\\n                                else selectedHtml\\r\\n                    else\\r\\n                        set selectedHtml = this.selectedOptions.length + ' selected'\\r\\n                    set this.dropdown.querySelector(\\\".multiple-options\\\").innerHTML = selectedHtml\\r\\n                else\\r\\n                    var html\\r\\n                        iif this.selectedOptions.length > 0\\r\\n                            then this.selectedOptions[0].data.text\\r\\n                            else this.placeholder\\r\\n                    set this.dropdown.querySelector(\\\".current\\\").innerHTML = html\\r\\n        set ${myName}.prototype._renderItems =\\r\\n            function \\r\\n                var ul = this.dropdown.querySelector(\\\"ul\\\")\\r\\n                _ this.options.forEach\\r\\n                    => \\r\\n                        param item\\r\\n                        _ ul.appendChild(this._renderItem(item))\\r\\n        set ${myName}.prototype._renderItem =\\r\\n            function \\r\\n                param option\\r\\n                var el = document.createElement(\\\"li\\\")\\r\\n                set el.innerHTML = option.data.text\\r\\n                if option.attributes.optgroup\\r\\n                    _ el.classList.add('optgroup')\\r\\n                else\\r\\n                    _ el.setAttribute(\\\"data-value\\\", option.data.value)\\r\\n                    var classList\\r\\n                        [ \\r\\n                            @ \\\"option\\\"\\r\\n                            iif option.attributes.selected\\r\\n                                then \\\"selected\\\"\\r\\n                                else null\\r\\n                            iif option.attributes.disabled\\r\\n                                then \\\"disabled\\\"\\r\\n                                else null\\r\\n                    _ el.addEventListener(\\\"click\\\", this._onItemClicked.bind(this, option))\\r\\n                    _ el.classList.add(...classList)\\r\\n                set option.element = el\\r\\n                return el\\r\\n        set ${myName}.prototype.update =\\r\\n            function \\r\\n                _ this.extractData()\\r\\n                if this.dropdown\\r\\n                    var open = hasClass(this.dropdown, \\\"open\\\")\\r\\n                    _ this.dropdown.parentNode.removeChild(this.dropdown)\\r\\n                    _ this.create()\\r\\n                    if open\\r\\n                        _ triggerClick(this.dropdown)\\r\\n        set ${myName}.prototype.disable =\\r\\n            function \\r\\n                if !this.disabled\\r\\n                    set this.disabled = true\\r\\n                    _ addClass(this.dropdown, \\\"disabled\\\")\\r\\n        set ${myName}.prototype.enable =\\r\\n            function \\r\\n                if this.disabled\\r\\n                    set this.disabled = false\\r\\n                    _ removeClass(this.dropdown, \\\"disabled\\\")\\r\\n        set ${myName}.prototype.clear =\\r\\n            function \\r\\n                set this.selectedOptions = []\\r\\n                _ this._renderSelectedItems()\\r\\n                _ this.updateSelectValue()\\r\\n                _ triggerChange(this.el)\\r\\n        set ${myName}.prototype.destroy =\\r\\n            function \\r\\n                if this.dropdown\\r\\n                    _ this.dropdown.parentNode.removeChild(this.dropdown)\\r\\n                    set this.el.style.display = \\\"\\\"\\r\\n        set ${myName}.prototype.bindEvent =\\r\\n            function \\r\\n                var $this = this\\r\\n                _ this.dropdown.addEventListener(\\\"click\\\", this._onClicked.bind(this))\\r\\n                _ this.dropdown.addEventListener(\\\"keydown\\\", this._onKeyPressed.bind(this))\\r\\n                _ this.dropdown.addEventListener(\\\"focusin\\\", triggerFocusIn.bind(this, this.el))\\r\\n                _ this.dropdown.addEventListener(\\\"focusout\\\", triggerFocusOut.bind(this, this.el))\\r\\n                _ window.addEventListener(\\\"click\\\", this._onClickedOutside.bind(this))\\r\\n                if this.config.searchable\\r\\n                    _ this._bindSearchEvent()\\r\\n        set ${myName}.prototype._bindSearchEvent =\\r\\n            function \\r\\n                var searchBox = this.dropdown.querySelector(\\\".nice-select-search\\\")\\r\\n                if searchBox\\r\\n                    _ searchBox.addEventListener\\r\\n                        @ \\\"click\\\"\\r\\n                        function \\r\\n                            param e\\r\\n                            _ e.stopPropagation()\\r\\n                            return false\\r\\n                _ searchBox.addEventListener(\\\"input\\\", this._onSearchChanged.bind(this))\\r\\n        set ${myName}.prototype._onClicked =\\r\\n            function \\r\\n                param e\\r\\n                if this.multiple\\r\\n                    _ this.dropdown.classList.add(\\\"open\\\")\\r\\n                else\\r\\n                    _ this.dropdown.classList.toggle(\\\"open\\\")\\r\\n                if this.dropdown.classList.contains(\\\"open\\\")\\r\\n                    var search = this.dropdown.querySelector(\\\".nice-select-search\\\")\\r\\n                    if search\\r\\n                        set search.value = \\\"\\\"\\r\\n                        _ search.focus()\\r\\n                    var t = this.dropdown.querySelector(\\\".focus\\\")\\r\\n                    _ removeClass(t, \\\"focus\\\")\\r\\n                    set t = this.dropdown.querySelector(\\\".selected\\\")\\r\\n                    _ addClass(t, \\\"focus\\\")\\r\\n                    _ this.dropdown.querySelectorAll(\\\"ul li\\\").forEach\\r\\n                        function \\r\\n                            param item\\r\\n                            set item.style.display = \\\"\\\"\\r\\n                else\\r\\n                    _ this.dropdown.focus()\\r\\n        set ${myName}.prototype._onItemClicked =\\r\\n            function \\r\\n                param option\\r\\n                param e\\r\\n                var optionEl = e.target\\r\\n                if !hasClass(optionEl, \\\"disabled\\\")\\r\\n                    if this.multiple\\r\\n                        if hasClass(optionEl, \\\"selected\\\")\\r\\n                            _ removeClass(optionEl, \\\"selected\\\")\\r\\n                            _ this.selectedOptions.splice(this.selectedOptions.indexOf(option), 1)\\r\\n                            set this.el.querySelector('option[value=\\\"' + optionEl.dataset.value + '\\\"]').selected = false\\r\\n                        else\\r\\n                            _ addClass(optionEl, \\\"selected\\\")\\r\\n                            _ this.selectedOptions.push(option)\\r\\n                    else\\r\\n                        _ this.selectedOptions.forEach\\r\\n                            function \\r\\n                                param item\\r\\n                                _ removeClass(item.element, \\\"selected\\\")\\r\\n                        _ addClass(optionEl, \\\"selected\\\")\\r\\n                        set this.selectedOptions =\\r\\n                            [ \\r\\n                                @ option\\r\\n                    _ this._renderSelectedItems()\\r\\n                    _ this.updateSelectValue()\\r\\n        set ${myName}.prototype.updateSelectValue =\\r\\n            function \\r\\n                if this.multiple\\r\\n                    var select = this.el\\r\\n                    _ this.selectedOptions.forEach\\r\\n                        function \\r\\n                            param item\\r\\n                            var el = select.querySelector('option[value=\\\"' + item.data.value + '\\\"]')\\r\\n                            if el\\r\\n                                _ el.setAttribute(\\\"selected\\\", true)\\r\\n                else\\r\\n                    if this.selectedOptions.length > 0\\r\\n                        set this.el.value = this.selectedOptions[0].data.value\\r\\n                _ triggerChange(this.el)\\r\\n        set ${myName}.prototype._onClickedOutside =\\r\\n            function \\r\\n                param e\\r\\n                if !this.dropdown.contains(e.target)\\r\\n                    _ this.dropdown.classList.remove(\\\"open\\\")\\r\\n        set ${myName}.prototype._onKeyPressed =\\r\\n            function \\r\\n                param e\\r\\n                var focusedOption = this.dropdown.querySelector(\\\".focus\\\")\\r\\n                    # Keyboard events\\r\\n                var open = this.dropdown.classList.contains(\\\"open\\\")\\r\\n                    # Space or Enter\\r\\n                if e.keyCode == 32 || e.keyCode == 13\\r\\n                    if open\\r\\n                        _ triggerClick(focusedOption)\\r\\n                    else\\r\\n                        _ triggerClick(this.dropdown)\\r\\n                else\\r\\n                    if e.keyCode == 40\\r\\n                        if !open\\r\\n                            _ triggerClick(this.dropdown)\\r\\n                        else\\r\\n                            var next = this._findNext(focusedOption)\\r\\n                            if next\\r\\n                                var t = this.dropdown.querySelector(\\\".focus\\\")\\r\\n                                _ removeClass(t, \\\"focus\\\")\\r\\n                                _ addClass(next, \\\"focus\\\")\\r\\n                        _ e.preventDefault()\\r\\n                    else\\r\\n                        if e.keyCode == 38\\r\\n                            if !open\\r\\n                                _ triggerClick(this.dropdown)\\r\\n                            else\\r\\n                                var prev = this._findPrev(focusedOption)\\r\\n                                if prev\\r\\n                                    var t = this.dropdown.querySelector(\\\".focus\\\")\\r\\n                                    _ removeClass(t, \\\"focus\\\")\\r\\n                                    _ addClass(prev, \\\"focus\\\")\\r\\n                            _ e.preventDefault()\\r\\n                        else\\r\\n                            if e.keyCode == 27 && open\\r\\n                                _ triggerClick(this.dropdown)\\r\\n                return false\\r\\n        set ${myName}.prototype._findNext =\\r\\n            function \\r\\n                param el\\r\\n                if el\\r\\n                    set el = el.nextElementSibling\\r\\n                else\\r\\n                    set el = this.dropdown.querySelector(\\\".list .option\\\")\\r\\n                while el\\r\\n                    if !hasClass(el, \\\"disabled\\\") && el.style.display != \\\"none\\\"\\r\\n                        return el\\r\\n                    set el = el.nextElementSibling\\r\\n                return null\\r\\n        set ${myName}.prototype._findPrev =\\r\\n            function \\r\\n                param el\\r\\n                if el\\r\\n                    set el = el.previousElementSibling\\r\\n                else\\r\\n                    set el = this.dropdown.querySelector(\\\".list .option:last-child\\\")\\r\\n                while el\\r\\n                    if !hasClass(el, \\\"disabled\\\") && el.style.display != \\\"none\\\"\\r\\n                        return el\\r\\n                    set el = el.previousElementSibling\\r\\n                return null\\r\\n        set ${myName}.prototype._onSearchChanged =\\r\\n            function \\r\\n                param e\\r\\n                var open = this.dropdown.classList.contains(\\\"open\\\")\\r\\n                var text = e.target.value\\r\\n                set text = text.toLowerCase()\\r\\n                if text == \\\"\\\"\\r\\n                    _ this.options.forEach\\r\\n                        function \\r\\n                            param item\\r\\n                            set item.element.style.display = \\\"\\\"\\r\\n                else\\r\\n                    if open\\r\\n                        var matchReg = new RegExp(text)\\r\\n                        _ this.options.forEach\\r\\n                            function \\r\\n                                param item\\r\\n                                var optionText = item.data.text.toLowerCase()\\r\\n                                var matched = matchReg.test(optionText)\\r\\n                                set item.element.style.display =\\r\\n                                    iif matched\\r\\n                                        then \\\"\\\"\\r\\n                                        else \\\"none\\\"\\r\\n                _ this.dropdown.querySelectorAll(\\\".focus\\\").forEach\\r\\n                    function \\r\\n                        param item\\r\\n                        _ removeClass(item, \\\"focus\\\")\\r\\n                var firstEl = this._findNext(null)\\r\\n                _ addClass(firstEl, \\\"focus\\\")\\r\\n        set ${myName}.bind\\r\\n            function\\r\\n                param el\\r\\n                param options\\r\\n                return new ${myName}(el, options)\"},\"t/controls/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include select/nice-select\\r\\n  $include slider/zb-range-slider\\r\\n  $include date-picker/codepen-date-picker\"},\"t/controls/slider/zb-range-slider.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'RangeSlider'; \\r\\n      //\\r\\n\\r\\n    # from https://codepen.io/zebresel/pen/xGLYOM\\r\\n    \\r\\n    iife_window( controls, ${myName} )\\r\\n\\r\\n        const ${myName}\\r\\n            function \\r\\n                param id\\r\\n                var self = this\\r\\n                var \\r\\n                    decl startX = 0\\r\\n                    decl x = 0\\r\\n                    # retrieve touch button\\r\\n                var slider = document.getElementById(id)\\r\\n                    # retrieve touch button\\r\\n                var touchLeft = slider.querySelector('.slider-touch-left')\\r\\n                var touchRight = slider.querySelector('.slider-touch-right')\\r\\n                var lineSpan = slider.querySelector('.slider-line span')\\r\\n                    # get some properties\\r\\n                var min = parseFloat(slider.getAttribute('se-min'))\\r\\n                    # get some properties\\r\\n                var max = parseFloat(slider.getAttribute('se-max'))\\r\\n                    # retrieve default values\\r\\n                var defaultMinValue = min\\r\\n                    # retrieve default values\\r\\n                if slider.hasAttribute('se-min-value')\\r\\n                    set defaultMinValue = parseFloat(slider.getAttribute('se-min-value'))\\r\\n                var defaultMaxValue = max\\r\\n                if slider.hasAttribute('se-max-value')\\r\\n                    set defaultMaxValue = parseFloat(slider.getAttribute('se-max-value'))\\r\\n                if defaultMinValue < min\\r\\n                    set defaultMinValue = min\\r\\n                if defaultMaxValue > max\\r\\n                    set defaultMaxValue = max\\r\\n                if defaultMinValue > defaultMaxValue\\r\\n                    set defaultMinValue = defaultMaxValue\\r\\n                var step = 0\\r\\n                if slider.getAttribute('se-step')\\r\\n                    set step = Math.abs(parseFloat(slider.getAttribute('se-step')))\\r\\n                var normalizeFact = 26\\r\\n                    # normalize flag\\r\\n                set self.slider = slider\\r\\n                set self.reset =\\r\\n                    function \\r\\n                        set touchLeft.style.left = '0px'\\r\\n                        set touchRight.style.left = (slider.offsetWidth - touchLeft.offsetWidth) + 'px'\\r\\n                        set lineSpan.style.marginLeft = '0px'\\r\\n                        set lineSpan.style.width = (slider.offsetWidth - touchLeft.offsetWidth) + 'px'\\r\\n                        set startX = 0\\r\\n                        set x = 0\\r\\n                set self.setMinValue =\\r\\n                    function \\r\\n                        param minValue\\r\\n                        var ratio = ((minValue - min) / (max - min))\\r\\n                        set touchLeft.style.left = Math.ceil(ratio * (slider.offsetWidth - (touchLeft.offsetWidth + normalizeFact))) + 'px'\\r\\n                        set lineSpan.style.marginLeft = touchLeft.offsetLeft + 'px'\\r\\n                        set lineSpan.style.width = (touchRight.offsetLeft - touchLeft.offsetLeft) + 'px'\\r\\n                        _ slider.setAttribute('se-min-value', minValue)\\r\\n                set self.setMaxValue =\\r\\n                    function \\r\\n                        param maxValue\\r\\n                        var ratio = ((maxValue - min) / (max - min))\\r\\n                        set touchRight.style.left = Math.ceil(ratio * (slider.offsetWidth - (touchLeft.offsetWidth + normalizeFact)) + normalizeFact) + 'px'\\r\\n                        set lineSpan.style.marginLeft = touchLeft.offsetLeft + 'px'\\r\\n                        set lineSpan.style.width = (touchRight.offsetLeft - touchLeft.offsetLeft) + 'px'\\r\\n                        _ slider.setAttribute('se-max-value', maxValue)\\r\\n                    # initial reset\\r\\n                _ self.reset()\\r\\n                    # initial reset\\r\\n                    # usefull values, min, max, normalize fact is the width of both touch buttons\\r\\n                var maxX = slider.offsetWidth - touchRight.offsetWidth\\r\\n                    # usefull values, min, max, normalize fact is the width of both touch buttons\\r\\n                var selectedTouch = null\\r\\n                var initialValue = (lineSpan.offsetWidth - normalizeFact)\\r\\n                    # set defualt values\\r\\n                _ self.setMinValue(defaultMinValue)\\r\\n                    # set defualt values\\r\\n                _ self.setMaxValue(defaultMaxValue)\\r\\n                    # setup touch/click events\\r\\n                function onStart\\r\\n                    param event\\r\\n                    _ event.preventDefault()\\r\\n                        # Prevent default dragging of selected content\\r\\n                    var eventTouch = event\\r\\n                    if event.touches\\r\\n                        set eventTouch = event.touches[0]\\r\\n                    if this === touchLeft\\r\\n                        set x = touchLeft.offsetLeft\\r\\n                    else\\r\\n                        set x = touchRight.offsetLeft\\r\\n                    set startX = eventTouch.pageX - x\\r\\n                    set selectedTouch = this\\r\\n                    _ document.addEventListener('mousemove', onMove)\\r\\n                    _ document.addEventListener('mouseup', onStop)\\r\\n                    _ document.addEventListener('touchmove', onMove)\\r\\n                    _ document.addEventListener('touchend', onStop)\\r\\n                    # setup touch/click events\\r\\n                function onMove\\r\\n                    param event\\r\\n                    var eventTouch = event\\r\\n                    if event.touches\\r\\n                        set eventTouch = event.touches[0]\\r\\n                    set x = eventTouch.pageX - startX\\r\\n                    if selectedTouch === touchLeft\\r\\n                        if x > (touchRight.offsetLeft - selectedTouch.offsetWidth + 10)\\r\\n                            set x = (touchRight.offsetLeft - selectedTouch.offsetWidth + 10)\\r\\n                        else\\r\\n                            if x < 0\\r\\n                                set x = 0\\r\\n                        set selectedTouch.style.left = x + 'px'\\r\\n                    else\\r\\n                        if selectedTouch === touchRight\\r\\n                            if x < (touchLeft.offsetLeft + touchLeft.offsetWidth - 10)\\r\\n                                set x = (touchLeft.offsetLeft + touchLeft.offsetWidth - 10)\\r\\n                            else\\r\\n                                if x > maxX\\r\\n                                    set x = maxX\\r\\n                            set selectedTouch.style.left = x + 'px'\\r\\n                    set lineSpan.style.marginLeft = touchLeft.offsetLeft + 'px'\\r\\n                        # update line span\\r\\n                    set lineSpan.style.width = (touchRight.offsetLeft - touchLeft.offsetLeft) + 'px'\\r\\n                        # write new value\\r\\n                    _ calculateValue()\\r\\n                        # write new value\\r\\n                        # call on change\\r\\n                    if slider.getAttribute('on-change')\\r\\n                        var fn = new Function('min, max', slider.getAttribute('on-change'))\\r\\n                        _ fn(slider.getAttribute('se-min-value'), slider.getAttribute('se-max-value'))\\r\\n                    if self.onChange\\r\\n                        _ self.onChange(slider.getAttribute('se-min-value'), slider.getAttribute('se-max-value'))\\r\\n                function onStop\\r\\n                    param event\\r\\n                    _ document.removeEventListener('mousemove', onMove)\\r\\n                    _ document.removeEventListener('mouseup', onStop)\\r\\n                    _ document.removeEventListener('touchmove', onMove)\\r\\n                    _ document.removeEventListener('touchend', onStop)\\r\\n                    set selectedTouch = null\\r\\n                        # write new value\\r\\n                    _ calculateValue()\\r\\n                        # write new value\\r\\n                        # call did changed\\r\\n                    if slider.getAttribute('did-changed')\\r\\n                        var fn = new Function('min, max', slider.getAttribute('did-changed'))\\r\\n                        _ fn(slider.getAttribute('se-min-value'), slider.getAttribute('se-max-value'))\\r\\n                    if self.didChanged\\r\\n                        _ self.didChanged(slider.getAttribute('se-min-value'), slider.getAttribute('se-max-value'))\\r\\n                function calculateValue\\r\\n                    var newValue = (lineSpan.offsetWidth - normalizeFact) / initialValue\\r\\n                    var minValue = lineSpan.offsetLeft / initialValue\\r\\n                    var maxValue = minValue + newValue\\r\\n                    var minValue = minValue * (max - min) + min\\r\\n                    var maxValue = maxValue * (max - min) + min\\r\\n                    _ console.log(step)\\r\\n                    if step !== 0\\r\\n                        var multi = Math.floor((minValue / step))\\r\\n                        set minValue = step * multi\\r\\n                        set multi = Math.floor((maxValue / step))\\r\\n                        set maxValue = step * multi\\r\\n                    _ slider.setAttribute('se-min-value', minValue)\\r\\n                    _ slider.setAttribute('se-max-value', maxValue)\\r\\n                    # link events\\r\\n                _ touchLeft.addEventListener('mousedown', onStart)\\r\\n                    # link events\\r\\n                _ touchRight.addEventListener('mousedown', onStart)\\r\\n                _ touchLeft.addEventListener('touchstart', onStart)\\r\\n                _ touchRight.addEventListener('touchstart', onStart)\\r\\n\"},\"toIttf/file.html\":{\"type\":\"CODE\",\"contents\":\"<div class=\\\"form-container\\\">\\r\\n   <form>\\r\\n      <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Pick a date\\\" class=\\\"date-input\\\">\\r\\n   </form>\\r\\n</div>\"},\"t/controls/date-picker/codepen-date-picker.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'CodepenDatePicker'; \\r\\n      //\\r\\n\\r\\n    # from https://codepen.io/tomuzarowski/pen/xxZOEGV\\r\\n    \\r\\n    iife_window( controls, ${myName} )\\r\\n        function triggerChange\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"HTMLEvents\\\")\\r\\n            _ event.initEvent(\\\"change\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n        class ${myName}\\r\\n            ctor \\r\\n                param inputSelector\\r\\n                set this.input = document.querySelector(inputSelector)\\r\\n                set this.form = this.input.parentElement\\r\\n                set this.popupContainer = null\\r\\n                set this.monthContainer = null\\r\\n                set this.tableContainer = null\\r\\n                set this.table = document.createElement(\\\"table\\\")\\r\\n                set this.months =\\r\\n                    [ \\r\\n                        @ 'January'\\r\\n                        @ 'February'\\r\\n                        @ 'March'\\r\\n                        @ 'April'\\r\\n                        @ 'May'\\r\\n                        @ 'June'\\r\\n                        @ 'July'\\r\\n                        @ 'August'\\r\\n                        @ 'September'\\r\\n                        @ 'October'\\r\\n                        @ 'November'\\r\\n                        @ 'December'\\r\\n                set this.selectedMonth = new Date().getMonth()\\r\\n                set this.selectedYear = new Date().getFullYear()\\r\\n                _ this.buildCalendar()\\r\\n                _ this.setMainEventListener()\\r\\n            m buildCalendar\\r\\n                set this.popupContainer = document.createElement(\\\"div\\\")\\r\\n                _ this.popupContainer.classList.add(\\\"calendar-popup\\\")\\r\\n                _ this.form.appendChild(this.popupContainer)\\r\\n                set this.monthContainer = document.createElement(\\\"div\\\")\\r\\n                _ this.monthContainer.classList.add(\\\"month-and-year\\\")\\r\\n                set this.monthContainer.innerHTML =\\r\\n                    `lit \\r\\n                        + <h4>\\r\\n                        _ this.getMonth()\\r\\n                        + &nbsp;\\r\\n                        _ this.getYear()\\r\\n                        + </h4>\\r\\n                _ this.popupContainer.appendChild(this.monthContainer)\\r\\n                _ this.createButtons()\\r\\n                _ this.populateTable(this.selectedMonth, this.selectedYear)\\r\\n            m createButtons\\r\\n                const prev = document.createElement(\\\"button\\\")\\r\\n                _ prev.classList.add('button', 'prev')\\r\\n                set prev.innerHTML = \\\"<i class='fas fa-chevron-left'></i>\\\"\\r\\n                const next = document.createElement(\\\"button\\\")\\r\\n                _ next.classList.add('button', 'next')\\r\\n                set next.innerHTML = \\\"<i class='fas fa-chevron-right'></i>\\\"\\r\\n                _ prev.addEventListener\\r\\n                    @ \\\"click\\\"\\r\\n                    => \\r\\n                        param e\\r\\n                        _ e.preventDefault()\\r\\n                        _ this.updateMonth(this.selectedMonth - 1)\\r\\n                _ next.addEventListener\\r\\n                    @ \\\"click\\\"\\r\\n                    => \\r\\n                        param e\\r\\n                        _ e.preventDefault()\\r\\n                        _ this.updateMonth(this.selectedMonth + 1)\\r\\n                _ this.popupContainer.appendChild(prev)\\r\\n                _ this.popupContainer.appendChild(next)\\r\\n            m populateTable\\r\\n                param month\\r\\n                param year\\r\\n                set this.table.innerHTML = \\\"\\\"\\r\\n                const namesRow = document.createElement(\\\"tr\\\")\\r\\n                const days\\r\\n                  [ \\r\\n                      @ \\\"Mon\\\"\\r\\n                      @ \\\"Tue\\\"\\r\\n                      @ \\\"Wed\\\"\\r\\n                      @ \\\"Thu\\\"\\r\\n                      @ \\\"Fri\\\"\\r\\n                      @ \\\"Sat\\\"\\r\\n                      @ \\\"Sun\\\"\\r\\n                _ days.forEach\\r\\n                    => \\r\\n                        param name\\r\\n                        const th = document.createElement(\\\"th\\\")\\r\\n                        set th.innerHTML = name\\r\\n                        _ namesRow.appendChild(th)\\r\\n                _ this.table.appendChild(namesRow)\\r\\n                const tempDate = new Date(year, month, 1)\\r\\n                let firstMonthDay = tempDate.getDay()\\r\\n                set firstMonthDay =\\r\\n                    iif firstMonthDay === 0\\r\\n                        then 7\\r\\n                        else tempDate.getDay()\\r\\n                const daysInMonth = this.getDaysInMonth(month, year)\\r\\n                const j = daysInMonth + firstMonthDay - 1\\r\\n                let tr = document.createElement(\\\"tr\\\")\\r\\n                if firstMonthDay - 1 !== 0\\r\\n                    set tr = document.createElement(\\\"tr\\\")\\r\\n                    _ this.table.appendChild(tr)\\r\\n                for let i = 0; i < firstMonthDay - 1; i++\\r\\n                    const td = document.createElement(\\\"td\\\")\\r\\n                    set td.innerHTML = \\\"\\\"\\r\\n                    _ tr.appendChild(td)\\r\\n                for let i = firstMonthDay - 1; i < j; i++\\r\\n                    if i % 7 === 0\\r\\n                        set tr = document.createElement(\\\"tr\\\")\\r\\n                        _ this.table.appendChild(tr)\\r\\n                    const td = document.createElement(\\\"td\\\")\\r\\n                    set td.innerText = i - firstMonthDay + 2\\r\\n                    set td.dayNr = i - firstMonthDay + 2\\r\\n                    _ td.classList.add(\\\"day\\\")\\r\\n                    _ td.addEventListener\\r\\n                        @ \\\"click\\\"\\r\\n                        => \\r\\n                            param e\\r\\n                            const selectedDay = e.target.innerHTML\\r\\n                            _ this.fillInput(selectedDay)\\r\\n                            _ this.hideCalendar()\\r\\n                    _ tr.appendChild(td)\\r\\n                _ this.popupContainer.appendChild(this.table)\\r\\n            m fillInput\\r\\n                param day\\r\\n                set day =\\r\\n                    iif day < 10\\r\\n                        then \\\"0\\\" + day\\r\\n                        else day\\r\\n                let month = null\\r\\n                set month =\\r\\n                    iif this.selectedMonth < 9\\r\\n                        then \\\"0\\\" + (this.selectedMonth + 1)\\r\\n                        else this.selectedMonth + 1\\r\\n                set this.input.value =\\r\\n                    `lit \\r\\n                        + \\r\\n                        @ day\\r\\n                        + .\\r\\n                        @ month\\r\\n                        + .\\r\\n                        @ this.selectedYear\\r\\n                        + \\r\\n                _ triggerChange                        \\r\\n                  @ this.input\\r\\n            m updateMonth\\r\\n                param month\\r\\n                set this.selectedMonth = month\\r\\n                if this.selectedMonth < 0\\r\\n                    set this.selectedYear--\\r\\n                    set this.selectedMonth = 11\\r\\n                else\\r\\n                    if this.selectedMonth > 11\\r\\n                        set this.selectedYear++\\r\\n                        set this.selectedMonth = 0\\r\\n                set this.monthContainer.innerHTML =\\r\\n                    `lit \\r\\n                        + <h4>\\r\\n                        @ this.months[this.selectedMonth]\\r\\n                        + &nbsp;\\r\\n                        @ this.selectedYear\\r\\n                        + </h4>\\r\\n                _ this.populateTable(this.selectedMonth, this.selectedYear)\\r\\n            m getMonth\\r\\n                return this.months[this.selectedMonth]\\r\\n            m getYear\\r\\n                return this.selectedYear\\r\\n            m getDaysInMonth\\r\\n                param month\\r\\n                param year\\r\\n                return new Date(year, month + 1, 0).getDate()\\r\\n            m hideCalendar\\r\\n                _ this.form.classList.remove(\\\"open\\\")\\r\\n            m setMainEventListener\\r\\n                _ this.input.addEventListener\\r\\n                    @ \\\"click\\\"\\r\\n                    => \\r\\n                        param e\\r\\n                        _ this.form.classList.toggle(\\\"open\\\")\\r\\n                        if !this.form.classList.contains(\\\"open\\\")\\r\\n                            _ this.hideCalendar()\"},\"t/api/t/packiManager.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n        var myName = 'Wizzi';\\r\\n        //\\r\\n\\r\\n    iife_window( api, ${myName}, increment )\\r\\n\\r\\n      class PackiManager\\r\\n        ctor\\r\\n          param packiFiles\\r\\n          set this.packiFiles = packiFiles || {}\\r\\n          set this.dmp = new diff_match_patch()\\r\\n        \\r\\n        m getFileContent\\r\\n          param filePath\\r\\n          const file = this.packiFiles[filePath] \\r\\n          return file ? file.contents : null\\r\\n\\r\\n        m putFile\\r\\n          param filePath\\r\\n          param type\\r\\n          param contents\\r\\n          set this.packiFiles[filePath] \\r\\n            {\\r\\n              @ type type\\r\\n              @ contents contents\\r\\n\\r\\n        m putCodeFile\\r\\n          param filePath\\r\\n          param contents\\r\\n          _ this.putFile\\r\\n            @ filePath\\r\\n            @ 'CODE'\\r\\n            @ contents\\r\\n        \\r\\n        m deleteFile\\r\\n          param filePath\\r\\n          delete this.packiFiles[filePath]\\r\\n\\r\\n        m getFileDiffs\\r\\n          param filePath\\r\\n          param newContent\\r\\n          const diffs\\r\\n            _ this._diffLineMode\\r\\n              @ this.packiFiles[filePath].contents\\r\\n              @ newContent\\r\\n          return diffs\\r\\n\\r\\n        m applyFileDiffs\\r\\n          param filePath\\r\\n          param diffs\\r\\n          const textToPatch = this.packiFiles[filePath].contents\\r\\n          const patches\\r\\n            _ this.dmp.patch_make\\r\\n              @ textToPatch\\r\\n              @ diffs\\r\\n          const [patchedText, results]\\r\\n            _ this.dmp.patch_apply(patches, textToPatch)\\r\\n          set this.packiFiles[filePath].contents = patchedText\\r\\n\\r\\n        m getPackiFilesDiffs\\r\\n          param packiFiles\\r\\n          const matches = {}\\r\\n          foreach key in Object.keys(packiFiles)\\r\\n            if this.packiFiles[key]\\r\\n              set matches[key]\\r\\n                {\\r\\n                  @ d 0\\r\\n                  @ diffs\\r\\n                    _ this._diffLineMode\\r\\n                      @ this.packiFiles[key].contents\\r\\n                      @ packiFiles[key].contents\\r\\n            else\\r\\n              set matches[key]\\r\\n                {\\r\\n                  @ d 1\\r\\n                  @ type packiFiles[key].type\\r\\n                  @ contents packiFiles[key].contents\\r\\n          foreach key in Object.keys(this.packiFiles)\\r\\n            if !packiFiles[key]\\r\\n              set matches[key]\\r\\n                {\\r\\n                  @ d -1\\r\\n          return matches\\r\\n\\r\\n        m applyPatch\\r\\n          param packiDiffs\\r\\n          const patchedFiles = {}\\r\\n          foreach key in Object.keys(packiDiffs)\\r\\n            if packiDiffs[key].d == 1\\r\\n              set patchedFiles[key]\\r\\n                {\\r\\n                  @ type packiDiffs[key].type\\r\\n                  @ contents packiDiffs[key].contents\\r\\n            elif packiDiffs[key].d == 0\\r\\n              const textToPatch = this.packiFiles[key].contents\\r\\n              const patches \\r\\n                _ this.dmp.patch_make\\r\\n                  @ textToPatch\\r\\n                  @ packiDiffs[key].diffs\\r\\n              log 'applyPatch.key.patches', key, patches\\r\\n              const [patchedText, results]\\r\\n                _ this.dmp.patch_apply(patches, textToPatch)\\r\\n              set patchedFiles[key]\\r\\n                {\\r\\n                  @ type this.packiFiles[key].type\\r\\n                  @ contents patchedText\\r\\n          set this.packiFiles = patchedFiles\\r\\n\\r\\n        m equals\\r\\n          param packiFiles\\r\\n          const matches = {}\\r\\n          foreach key in Object.keys(packiFiles)\\r\\n            if this.packiFiles[key]\\r\\n              if this.packiFiles[key].type != packiFiles[key].type\\r\\n                return false\\r\\n              if this.packiFiles[key].contents != packiFiles[key].contents\\r\\n                return false\\r\\n              set matches[key]\\r\\n                {\\r\\n            else\\r\\n              return false\\r\\n          foreach key in Object.keys(this.packiFiles)\\r\\n            if !packiFiles[key]\\r\\n              return false\\r\\n          return true\\r\\n\\r\\n        m _diffLineMode\\r\\n          param text1\\r\\n          param text2\\r\\n          var a = this.dmp.diff_linesToChars_(text1, text2)\\r\\n          var lineText1 = a.chars1\\r\\n          var lineText2 = a.chars2\\r\\n          var lineArray = a.lineArray\\r\\n          var diffs = this.dmp.diff_main(lineText1, lineText2, false)\\r\\n          _ this.dmp.diff_charsToLines_(diffs, lineArray)\\r\\n          return diffs    \\r\\n      \\r\\n      set ${myName}.PackiManager = PackiManager\\r\\n\\r\\n\\r\\n\"},\"t/api/t/wizzi/cdn.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params &md\\r\\n    iife_window( api, ${md.ApiName}, increment )\\r\\n        \\r\\n        set ${md.ApiName}.createCdnResource\\r\\n          function\\r\\n              param owner\\r\\n              param name\\r\\n              param contents\\r\\n              log '${md.ApiName}.createCdnResource', 'owner', owner, 'name', name, 'contents', contents\\r\\n              r_promise()\\r\\n                  _ api.Fetch.post\\r\\n                      { \\r\\n                          @ url '${md.apiUrl}/cdn/' + encodeURIComponent(owner) + '/' + encodeURIComponent(name)\\r\\n                          { body\\r\\n                            @ contents\\r\\n                      ._ then\\r\\n                          =>\\r\\n                              param response\\r\\n                              info 'createCdnResource.response', response\\r\\n                              _ resolve\\r\\n                                  @ response\\r\\n                      catch_reject( createCdnResource )\\r\\n          #\\r\\n              # \\r\\n              # Creates a new CdnResource item\\r\\n              # \\r\\n              # @param {string} [owner] The owner of the production item\\r\\n              # @param {string} [name] The name of the production item\\r\\n              # @param {string} [contents] The contents of the resource\\r\\n              #          \\r\\n\\r\\n        set ${md.ApiName}.updateCdnResource\\r\\n          function\\r\\n              param name\\r\\n              param type\\r\\n              log '${md.ApiName}.updateCdnResource', 'owner', owner, 'name', name \\r\\n              r_promise()\\r\\n                  _ api.Fetch.put\\r\\n                      { \\r\\n                          @ url '${md.apiUrl}/cdn/' + encodeURIComponent(owner) + '/' + encodeURIComponent(name)\\r\\n                          { body\\r\\n                            @ contents\\r\\n                      ._ then\\r\\n                          =>\\r\\n                              param response\\r\\n                              info 'updateCdnResource.response', response\\r\\n                              _ resolve\\r\\n                                  @ response\\r\\n                      catch_reject( updateCdnResource )\\r\\n          #\\r\\n              # \\r\\n              # Updates a CdnResource item\\r\\n              # \\r\\n              # @param {string} [owner] The owner of the production item\\r\\n              # @param {string} [name] The name of the production item\\r\\n              # @param {string} [contents] The contents of the resource\\r\\n              #\\r\\n\\r\\n        set ${md.ApiName}.deleteCdnResource\\r\\n          function\\r\\n              param name\\r\\n              param type\\r\\n              log '${md.ApiName}.deleteCdnResource', 'owner', owner, 'name', name \\r\\n              r_promise()\\r\\n                  _ api.Fetch.delete\\r\\n                      { \\r\\n                          @ url '${md.apiUrl}/cdn/' + encodeURIComponent(owner) + '/' + encodeURIComponent(name)\\r\\n                          { body\\r\\n                            @ contents\\r\\n                      ._ then\\r\\n                          =>\\r\\n                              param response\\r\\n                              info 'putResource.response', response\\r\\n                              _ resolve\\r\\n                                  @ response\\r\\n                      catch_reject( deleteCdnResource )\\r\\n          #\\r\\n              # \\r\\n              # Deletes a CdnResource item\\r\\n              # \\r\\n              # @param {string} [owner] The owner of the production item\\r\\n              # @param {string} [name] The name of the production item\\r\\n              #              \"}}"
    },
    {
      "_id": "6380f26fc37c8fc86a66b32a",
      "id": "6380f26fc37c8fc86a66b32a",
      "owner": "stfnbssl",
      "name": "vanillajs-forms",
      "description": null,
      "packiFiles": "{\"test.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\r\\n  kind es6\\r\\n  $include vanillajs-forms\\r\\n\"},\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        [ contexts\\n            {\\n                $$ propertyName \\\"..name..\\\"\\n                $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\"t/vanillajs-forms.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include js/forms/form \\r\\n  $include js/forms/control \\r\\n\"},\"t/js/editors/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include monaco/index\"},\"t/js/editors/monaco/index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include languages/ittf-language\\r\\n  $include themes/colors-dark\\r\\n  $include themes/colors-light\\r\\n  $include themes/ittf-dark-theme\\r\\n  $include themes/ittf-light-theme\\r\\n  $include themes/monaco-overrides\\r\\n  $include themes/monaco\\r\\n  $include monaco-editor\"},\"t/js/editors/monaco/t/monaco-editor.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n        var myName = 'MonacoEditor';\\r\\n        //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        var setupExecuted = false\\r\\n        const editorStates = new Map()\\r\\n            # Store editor states such as cursor position, selection and scroll position for each model\\r\\n        const findModel\\r\\n            =>\\r\\n                param path\\r\\n                _ monaco.editor.getModels().find\\r\\n                    =>\\r\\n                        param model\\r\\n                        ===\\r\\n                            + model.uri.path\\r\\n                            `lit\\r\\n                                + /\\r\\n                                @ path\\r\\n        \\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set this.styleData = styles.computeStyleData(styleData)\\r\\n            set this.overrides = new editors.MonacoOverrides(this.styleData)\\r\\n            set this._disposables = []\\r\\n            set this._editor = null\\r\\n            set this.props\\r\\n                {\\r\\n                    @ lineNumbers 'on'\\r\\n                    @ wordWrap 'on'\\r\\n                    @ scrollBeyondLastLine false\\r\\n                    { minimap\\r\\n                        @ enabled false\\r\\n                    @ fontFamily 'var(--font-monospace)'\\r\\n                    @ fontLigatures true\\r\\n            set this._handleResize\\r\\n                =>\\r\\n                  _ _.debounce\\r\\n                      =>\\r\\n                          _ this._editor?.layout?.()\\r\\n                      @ 50\\r\\n                      {\\r\\n                          @ leading true\\r\\n                          @ trailing true\\r\\n            set this._handleEditFile\\r\\n                =>\\r\\n                    param _event\\r\\n                    const model = this._editor?.getModel?.()\\r\\n                    if model\\r\\n                        const value = model.getValue()\\r\\n                        if value !== this.props.files[this.props.selectedFileName]?.contents\\r\\n                            _ this.props.updateFiles\\r\\n                                =>\\r\\n                                    (\\r\\n                                        {\\r\\n                                            { [this.props.selectedFileName]\\r\\n                                                @ type 'CODE'\\r\\n                                                @ contents value\\r\\n\\r\\n\\r\\n        set ${myName}.setup\\r\\n            function \\r\\n                param styleData\\r\\n                param callback\\r\\n                if typeof callback == 'undefined'\\r\\n                    set callback = styleData\\r\\n                    set styleData = null\\r\\n                if setupExecuted\\r\\n                    return\\r\\n                        _ callback\\r\\n                _ require.config\\r\\n                    { \\r\\n                        { paths\\r\\n                            @ 'vs' 'https://cdn.bootcdn.net/ajax/libs/monaco-editor/0.20.0/min/vs'\\r\\n                _ require\\r\\n                    [ \\r\\n                        @ 'vs/editor/editor.main'\\r\\n                    function \\r\\n                        _ ${myName}.register\\r\\n                        set setupExecuted = true\\r\\n                        return\\r\\n                            _ callback\\r\\n\\r\\n        set ${myName}.register\\r\\n            function\\r\\n              const monacoTheme = new editors.MonacoTheme(this.styleData)\\r\\n              const ittfLightTheme = editors.MonacoIttfLightTheme\\r\\n              const ittfDarkTheme = editors.MonacoIttfDarkTheme\\r\\n              const light = monacoTheme.light()\\r\\n              const dark = monacoTheme.dark()\\r\\n              info 'ittfLightTheme', ittfLightTheme\\r\\n              info 'ittfDarkTheme', ittfDarkTheme\\r\\n              info 'light', light\\r\\n              info 'dark', dark\\r\\n              _ monaco.languages.register\\r\\n                  {\\r\\n                      @ id 'ittf'\\r\\n              _ monaco.languages.setMonarchTokensProvider('ittf', editors.MonacoIttfLanguage)\\r\\n              _ monaco.editor.defineTheme('ittfLight', editors.MonacoIttfLightTheme)\\r\\n              _ monaco.editor.defineTheme('ittfDark', editors.MonacoIttfDarkTheme)\\r\\n              _ monaco.editor.defineTheme('light', monacoTheme.light())\\r\\n              _ monaco.editor.defineTheme('dark', monacoTheme.dark())\\r\\n        \\r\\n        set ${myName}.prototype.setProps\\r\\n            function\\r\\n                param props\\r\\n                const prevProps\\r\\n                    _ Object.assign\\r\\n                      {\\r\\n                      @ this.props\\r\\n                set this.props\\r\\n                    _ Object.assign\\r\\n                      {\\r\\n                      @ this.props\\r\\n                      @ props\\r\\n                _ this.componentDidUpdate\\r\\n                    @ prevProps\\r\\n\\r\\n\\r\\n        set ${myName}.prototype.getEditorTheme\\r\\n            function\\r\\n              param theme\\r\\n              param filePath\\r\\n              if filePath.endsWith('.ittf')\\r\\n                  return theme == 'ligth' ? 'ittfLight' : 'ittfDark'\\r\\n              else\\r\\n                  return theme\\r\\n        \\r\\n        set ${myName}.prototype.componentDidMount\\r\\n            function\\r\\n                const\\r\\n                    {\\r\\n                        @ files\\r\\n                        @ selectedFileName\\r\\n                        @ autoFocus\\r\\n                        @ updateFiles\\r\\n                        @ onSelectFile\\r\\n                        @ readOnly\\r\\n                        ... rest\\r\\n                    = this.props\\r\\n                const options\\r\\n                    {\\r\\n                        @ ...rest\\r\\n                        @ theme this.getEditorTheme(rest.theme, selectedFileName)\\r\\n                        @ readOnly readOnly\\r\\n                const editor\\r\\n                    _ monaco.editor.create\\r\\n                        @ this.$container\\r\\n                        {\\r\\n                            ... options\\r\\n                            @ model null\\r\\n                set this._editor = editor\\r\\n                const codeEditorService = editor._codeEditorService\\r\\n                const openEditorBase = codeEditorService.openCodeEditor.bind(codeEditorService)\\r\\n                set codeEditorService.openCodeEditor =\\r\\n                    async=>\\r\\n                        param input\\r\\n                        param source\\r\\n                        const result = await openEditorBase(input, source)\\r\\n                        const\\r\\n                            {\\r\\n                                @ resource\\r\\n                                @ options\\r\\n                            = input\\r\\n                        _ this.props.onSelectFile(resource.path.replace(/^\\\\//, ''))\\r\\n                            # Remove the leading slash added by the Uri\\r\\n                        _ editor.setSelection(options.selection)\\r\\n                        _ editor.revealLine(options.selection.startLineNumber)\\r\\n                        return result\\r\\n                    # The methods provided by the service are on it's prototype\\r\\n                    # So spreading this object doesn't work, we must mutate it\\r\\n                _ this._disposables.push\\r\\n                    @ editor\\r\\n                _ this._disposables.push\\r\\n                    _ editor.onDidChangeModelContent(this._handleEditFile)\\r\\n                _ this._openFile\\r\\n                    @ selectedFileName\\r\\n                    @ files[selectedFileName]?.contents\\r\\n                    @ autoFocus\\r\\n                for const path in files\\r\\n                    const file = files[path]\\r\\n                    if file.type === 'CODE'\\r\\n                        _ this._initializeFile(path, file.contents)\\r\\n                    # Load all the files so the editor can provide proper intellisense\\r\\n\\r\\n        set ${myName}.prototype.componentDidUpdate\\r\\n            function\\r\\n                param prevProps\\r\\n                const\\r\\n                    {\\r\\n                        @ container\\r\\n                        @ selectedFileName\\r\\n                        @ files\\r\\n                        @ autoFocus\\r\\n                        @ theme\\r\\n                        @ updateFiles\\r\\n                        @ onSelectFile\\r\\n                        ... rest\\r\\n                    = this.props\\r\\n                if this._editor == null\\r\\n                    set this.$container = document.getElementById(container)\\r\\n                    _ this.componentDidMount\\r\\n                const options\\r\\n                    {\\r\\n                        @ ...rest\\r\\n                        @ theme this.getEditorTheme(theme, selectedFileName)\\r\\n                if this._editor\\r\\n                    _ this._editor.updateOptions(options)\\r\\n                    const model = this._editor.getModel()\\r\\n                    const value = files[selectedFileName]?.contents\\r\\n                    if selectedFileName !== prevProps.selectedFileName\\r\\n                        _ editorStates.set(prevProps.selectedFileName, this._editor.saveViewState())\\r\\n                            # Save the editor state for the previous file so we can restore it when it's re-opened\\r\\n                        _ this._openFile(selectedFileName, value, autoFocus)\\r\\n                    else\\r\\n                        if model && value !== model.getValue()\\r\\n                            _ this._editor.executeEdits\\r\\n                                @ null\\r\\n                                [\\r\\n                                    {\\r\\n                                        @ range model.getFullModelRange()\\r\\n                                        @ text value\\r\\n                                # @ts-ignore\\r\\n                if theme !== prevProps.theme || selectedFileName !== prevProps.selectedFileName\\r\\n                    _ monaco.editor.setTheme\\r\\n                        _ this.getEditorTheme\\r\\n                            @ theme\\r\\n                            @ selectedFileName\\r\\n                if prevProps.files !== this.props.files\\r\\n                    for const path in this.props.files\\r\\n                        const file = this.props.files[path]\\r\\n                        if file.type === 'CODE' && \\r\\n                            \\\\b (!prevProps.files || file.contents !== prevProps.files[path]?.contents) &&\\r\\n                            \\\\b path !== selectedFileName\\r\\n                            _ this._initializeFile(path, file.contents)\\r\\n        \\r\\n        set ${myName}.prototype.dispose\\r\\n            function\\r\\n                _ this._disposables.forEach\\r\\n                    =>\\r\\n                        param d\\r\\n                        _ d.dispose()\\r\\n        \\r\\n        set ${myName}.prototype._initializeFile\\r\\n            function\\r\\n                param path\\r\\n                param value\\r\\n                let model = findModel(path)\\r\\n                if model && !model.isDisposed()\\r\\n                    _ model.pushEditOperations\\r\\n                        [\\r\\n                        [\\r\\n                            {\\r\\n                                @ range model.getFullModelRange()\\r\\n                                @ text value\\r\\n                        # If a model exists, we need to update it's value\\r\\n                        # This is needed because the content for the file might have been modified externally\\r\\n                        # Use `pushEditOperations` instead of `setValue` or `applyEdits` to preserve undo stack\\r\\n                        # @ts-ignore\\r\\n                else\\r\\n                    if path.endsWith('.ittf')\\r\\n                        set model =\\r\\n                            _ monaco.editor.createModel\\r\\n                                @ value\\r\\n                                @ 'ittf'\\r\\n                                _ monaco.Uri.from\\r\\n                                    {\\r\\n                                        @ scheme 'file'\\r\\n                                        @ path\\r\\n                    else\\r\\n                        set model =\\r\\n                            _ monaco.editor.createModel\\r\\n                                @ value\\r\\n                                @ undefined\\r\\n                                _ monaco.Uri.from\\r\\n                                    {\\r\\n                                        @ scheme 'file'\\r\\n                                        @ path\\r\\n                    _ model.updateOptions\\r\\n                        {\\r\\n                            @ tabSize 4\\r\\n                            @ insertSpaces true\\r\\n\\r\\n        set ${myName}.prototype._openFile\\r\\n            function\\r\\n                param path\\r\\n                param value\\r\\n                param focus\\r\\n                info 'PackiMonacoEditor', '_openFile', path, value\\r\\n                _ this._initializeFile(path, value)\\r\\n                const model = findModel(path)\\r\\n                if this._editor && model\\r\\n                    _ this._editor.setModel(model)\\r\\n                    const editorState = editorStates.get(path)\\r\\n                        # Restore the editor state for the file\\r\\n                    if editorState\\r\\n                        _ this._editor.restoreViewState(editorState)\\r\\n                    if focus\\r\\n                        _ this._editor.focus()\\r\\n        \\r\\n        set ${myName}.prototype.render\\r\\n            function\\r\\n                param container\\r\\n                if this._editor == null\\r\\n                    set this.$container = document.getElementById(container)\\r\\n                    _ this.componentDidMount\\r\\n                $*\\r\\n                return\\r\\n                    div\\r\\n                        @ className {css(styles.container)}\\r\\n                        < style\\r\\n                            @ type \\\"text/css\\\"\\r\\n                            @ dangerouslySetInnerHTML\\r\\n                                {\\r\\n                                    @ __html overrides\\r\\n                        < ResizeDetector\\r\\n                            @ onResize {this._handleResize}\\r\\n                            div\\r\\n                                @ ref {this._node}\\r\\n                                @ className\\r\\n                                    _ classnames\\r\\n                                        _ css(styles.editor)\\r\\n                                        @ 'packi-monaco-editor'\\r\\n                                        `lit\\r\\n                                            + theme-\\r\\n                                            @ this.props.theme\\r\\n    const styles\\r\\n        _ StyleSheet.create\\r\\n            {\\r\\n                { container\\r\\n                    @ display 'flex'\\r\\n                    @ flex 1\\r\\n                    @ flexDirection 'column'\\r\\n                    @ height '100%'\\r\\n                    @ width '100%'\\r\\n                { editor\\r\\n                    @ height '100%'\\r\\n                    @ width '100%'\\r\\n\\r\\n                *$\\r\\n\\r\\n        $if false\\r\\n            set ${myName}.removePath\\r\\n                function $$ static\\r\\n                  param path\\r\\n                  _ editorStates.delete(path)\\r\\n                      # Remove editor states\\r\\n                  const model = findModel(path)\\r\\n                      # Remove associated models\\r\\n                  _ model?.dispose?.()\\r\\n            set ${myName}.renamePath\\r\\n                function $$ static\\r\\n                    param oldPath\\r\\n                    param newPath\\r\\n                    const selection = editorStates.get(oldPath)\\r\\n                    _ editorStates.delete(oldPath)\\r\\n                    _ editorStates.set(newPath, selection)\\r\\n                    _ this.removePath(oldPath)\\r\\n\"},\"t/js/editors/monaco/t/languages/ittf-language.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n        var myName = 'MonacoIttfLanguage';\\r\\n        //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n\\r\\n        const ${myName}\\r\\n            {\\r\\n                @ defaultToken 'invalid'\\r\\n                { tokenizer\\r\\n                    [ root\\r\\n                        {\\r\\n                            @ include '@whitespace'\\r\\n                        {\\r\\n                            @ include '@include'\\r\\n                        {\\r\\n                            @ include '@ittfCommand'\\r\\n                        {\\r\\n                            @ include '@mix'\\r\\n                        {\\r\\n                            @ include '@nodeName'\\r\\n                    [ whitespace\\r\\n                        [\\r\\n                            @ /[ \\\\t]+/\\r\\n                            @ 'white'\\r\\n                        [\\r\\n                            @ /\\\\$\\\\$.*$/\\r\\n                            @ 'comment'\\r\\n                        [\\r\\n                            @ /(\\\\$\\\\*)/\\r\\n                            {\\r\\n                                @ token 'comment'\\r\\n                                @ next 'comment'\\r\\n                    [ comment\\r\\n                        [\\r\\n                            @ /[^\\\\$\\\\*]+/\\r\\n                            @ 'comment'\\r\\n                        [\\r\\n                            @ /\\\\*\\\\$/\\r\\n                            @ 'comment'\\r\\n                            @ '@pop'\\r\\n                        [\\r\\n                            @ /[\\\\$\\\\*]/\\r\\n                            @ 'comment'\\r\\n                    [ include\\r\\n                        [\\r\\n                            @ /(\\\\$include)/\\r\\n                            {\\r\\n                                @ token 'mix'\\r\\n                                @ next 'includeValue'\\r\\n                    [ includeValue\\r\\n                        [\\r\\n                            @ /.*$/\\r\\n                            @ 'mix-value'\\r\\n                            @ '@pop'\\r\\n                    [ mix\\r\\n                        [\\r\\n                            @ /([^($\\\\s]+)(?:\\\\()/\\r\\n                            {\\r\\n                                { cases\\r\\n                                    @ '@eos' 'mix'\\r\\n                                    { '@default'\\r\\n                                        @ token 'mix'\\r\\n                                        @ next 'mixValue'\\r\\n                    [ ittfCommand\\r\\n                        [\\r\\n                            @ /\\\\$[a-z]+$/\\r\\n                            @ 'ittf-command'\\r\\n                        [\\r\\n                            @ /\\\\$[a-z]+/\\r\\n                            {\\r\\n                                @ token 'ittf-command'\\r\\n                                @ next 'scriptLine'\\r\\n                        [\\r\\n                            @ /\\\\$[ ]/\\r\\n                            {\\r\\n                                @ token 'interpolation'\\r\\n                                @ next 'scriptLine'\\r\\n                        [\\r\\n                            @ /(\\\\$global|\\\\$)$/\\r\\n                            {\\r\\n                                @ token 'interpolation'\\r\\n                                @ next 'scriptMultiLine'\\r\\n                    [ nodeName\\r\\n                        [\\r\\n                            @ /([^($\\\\s]+)/\\r\\n                            {\\r\\n                                { cases\\r\\n                                    @ '@eos' 'node-name'\\r\\n                                    { '@default'\\r\\n                                        @ token 'node-name'\\r\\n                                        @ next 'nodeValue'\\r\\n                    [ nodeValue\\r\\n                        [\\r\\n                            @ /[^\\\\$]+$/\\r\\n                            {\\r\\n                                @ token 'node-value'\\r\\n                                @ next '@popall'\\r\\n                        [\\r\\n                            @ /[^\\\\$]+/\\r\\n                            {\\r\\n                                @ token 'node-value'\\r\\n                        [\\r\\n                            @ /(\\\\${\\\"$\\\"}{)([^}]*)(})/\\r\\n                            {\\r\\n                                { cases\\r\\n                                    [ '@eos'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                                        @ 'interpolation'\\r\\n                                        {\\r\\n                                            @ token 'interpolation.delimiter'\\r\\n                                            @ next '@popall'\\r\\n                                    [ '@default'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                                        @ 'interpolation'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                        [\\r\\n                            @ /\\\\${\\\"$\\\"}${\\\"$\\\"}/\\r\\n                            {\\r\\n                                @ token 'node-value'\\r\\n                                @ next '@popall'\\r\\n                            # [ /.*$/, { token: 'node-value', next: '@pop' } ]\\r\\n                        [\\r\\n                            @ /\\\\$/\\r\\n                            @ 'node-value'\\r\\n                    [ mixValue\\r\\n                        [\\r\\n                            @ /\\\\)/\\r\\n                            {\\r\\n                                @ token 'mix'\\r\\n                                @ next '@popall'\\r\\n                        [\\r\\n                            @ /[^\\\\$|\\\\)]+$/\\r\\n                            {\\r\\n                                @ token 'mix-value'\\r\\n                                @ next '@popall'\\r\\n                        [\\r\\n                            @ /[^\\\\$|\\\\)]+/\\r\\n                            {\\r\\n                                @ token 'mix-value'\\r\\n                        [\\r\\n                            @ /(\\\\${\\\"$\\\"}{)([^}]*)(})/\\r\\n                            {\\r\\n                                { cases\\r\\n                                    [ '@eos'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                                        @ 'interpolation'\\r\\n                                        {\\r\\n                                            @ token 'interpolation.delimiter'\\r\\n                                            @ next '@popall'\\r\\n                                    [ '@default'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                                        @ 'interpolation'\\r\\n                                        @ 'interpolation.delimiter'\\r\\n                        [\\r\\n                            @ /\\\\${\\\"$\\\"}${\\\"$\\\"}/\\r\\n                            {\\r\\n                                @ token 'mix-value'\\r\\n                                @ next '@popall'\\r\\n                        [\\r\\n                            @ /\\\\$/\\r\\n                            @ 'mix-value'\\r\\n                    [ scriptLine\\r\\n                        [\\r\\n                            @ /.*$/\\r\\n                            @ 'interpolation'\\r\\n                            @ '@pop'\\r\\n                    [ scriptMultiLine\\r\\n                        [\\r\\n                            @ /[^\\\\/\\\\/\\\\.]+/\\r\\n                            @ 'interpolation'\\r\\n                        [\\r\\n                            @ /\\\\/\\\\/\\\\.$/\\r\\n                            @ 'interpolation'\\r\\n                            @ '@pop'\\r\\n        # export * from 'monaco-editor-core';\\r\\n\"},\"t/js/editors/monaco/t/themes/colors-dark.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoColorsDark';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set styleData = styles.computeStyleData(styleData)\\r\\n            var tp = new styles.ThemeProvider(styleData)\\r\\n            set this.syntax\\r\\n                {\\r\\n                    @ text '#d9d7ce'\\r\\n                    @ variable '#d9d7ce'\\r\\n                    @ invalid '#ff3333'\\r\\n                    @ constant '#ff9d45'\\r\\n                    @ comment '#5c6773'\\r\\n                    @ regexp '#95e6cb'\\r\\n                    @ annotation '#5ccfe6'\\r\\n                    @ tag '#80d4ff'\\r\\n                    @ number '#ff9d45'\\r\\n                    @ string '#bae67e'\\r\\n                    @ property '#5ccfe6'\\r\\n                    @ value '#bae67e'\\r\\n                    @ keyword '#ffae57'\\r\\n                    @ operator '#778899'\\r\\n                    @ predefined '#ff00ff'\\r\\n            set this.ui\\r\\n                {\\r\\n                    @ background tp.c('background', 'dark')\\r\\n                    @ text '#d9d7ce'\\r\\n                    @ selection '#aaaaaa'\\r\\n                    { indent\\r\\n                        @ active '#393b41'\\r\\n                        @ inactive '#494b51'\"},\"t/js/editors/monaco/t/themes/colors-light.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoColorsLight';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set styleData = styles.computeStyleData(styleData)\\r\\n            var tp = new styles.ThemeProvider(styleData)\\r\\n            set this.syntax\\r\\n                {\\r\\n                    @ text '#5c6773'\\r\\n                    @ variable '#5c6773'\\r\\n                    @ invalid '#ff3333'\\r\\n                    @ constant '#f08c36'\\r\\n                    @ comment '#abb0b6'\\r\\n                    @ regexp '#4dbf99'\\r\\n                    @ annotation '#41a6d9'\\r\\n                    @ tag '#e7c547'\\r\\n                    @ number '#f08c36'\\r\\n                    @ string '#86b300'\\r\\n                    @ property '#41a6d9'\\r\\n                    @ value '#0451a5'\\r\\n                    @ keyword '#f2590c'\\r\\n                    @ operator '#778899'\\r\\n                    @ predefined '#FF00FF'\\r\\n            set this.ui\\r\\n                {\\r\\n                    @ background tp.c('background', 'light')\\r\\n                    @ text '#5c6773'\\r\\n                    @ selection '#cccccc'\\r\\n                    { indent\\r\\n                        @ active '#e0e0e0'\\r\\n                        @ inactive '#ecebec'\"},\"t/js/editors/monaco/t/themes/ittf-dark-theme.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoIttfDarkTheme';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        const ${myName}\\r\\n            {\\r\\n                @ base 'vs-dark'\\r\\n                @ inherit false\\r\\n                [ rules\\r\\n                    {\\r\\n                        @ token 'node-name'\\r\\n                        @ foreground '57e34d'\\r\\n                    {\\r\\n                        @ token 'node-value'\\r\\n                        @ foreground '40d1f5'\\r\\n                    {\\r\\n                        @ token 'ittf-command'\\r\\n                        @ foreground 'ffa500'\\r\\n                    {\\r\\n                        @ token 'mix'\\r\\n                        @ foreground 'ff0000'\\r\\n                    {\\r\\n                        @ token 'mix-value'\\r\\n                        @ foreground 'ffffff'\\r\\n                    {\\r\\n                        @ token 'comment'\\r\\n                        @ foreground 'ababab'\\r\\n                    {\\r\\n                        @ token 'interpolation.delimiter'\\r\\n                        @ foreground 'ff0000'\\r\\n                    {\\r\\n                        @ token 'interpolation'\\r\\n                        @ foreground 'ffff00'\\r\\n                    {\\r\\n                        @ token 'invalid'\\r\\n                        @ foreground 'ff00ff'\\r\\n                { colors\"},\"t/js/editors/monaco/t/themes/ittf-light-theme.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoIttfLightTheme';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        const ${myName}\\r\\n          {\\r\\n              @ base 'vs'\\r\\n              @ inherit false\\r\\n              [ rules\\r\\n                  {\\r\\n                      @ token 'node-name'\\r\\n                      @ foreground '0000ff'\\r\\n                  {\\r\\n                      @ token 'node-value'\\r\\n                      @ foreground '000000'\\r\\n                  {\\r\\n                      @ token 'ittf-command'\\r\\n                      @ foreground 'ffa500'\\r\\n                  {\\r\\n                      @ token 'mix'\\r\\n                      @ foreground 'ff0000'\\r\\n                  {\\r\\n                      @ token 'mix-value'\\r\\n                      @ foreground '4f548f'\\r\\n                  {\\r\\n                      @ token 'comment'\\r\\n                      @ foreground 'ababab'\\r\\n                  {\\r\\n                      @ token 'invalid'\\r\\n                      @ foreground 'ff00ff'\\r\\n                  {\\r\\n                      @ token 'interpolation.delimiter'\\r\\n                      @ foreground 'ff0000'\\r\\n                  {\\r\\n                      @ token 'interpolation'\\r\\n                      @ foreground '54db4b'\\r\\n              { colors\"},\"t/js/editors/monaco/t/themes/monaco-overrides.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n        var myName = 'MonacoOverrides';\\r\\n        //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set this.styleData = styles.computeStyleData(styleData)\\r\\n        set ${myName}.prototype.getCss\\r\\n            function\\r\\n                const css = String.raw\\r\\n                var tp = new styles.ThemeProvider(this.styleData)\\r\\n                var darkColors = new editors.MonacoColorsDark(styleData)\\r\\n                var lightColors = new editors.MonacoColorsLight(styleData)\\r\\n                var monacoTheme = new editors.MonacoTheme(styleData)\\r\\n                var light = monacoTheme.light()\\r\\n                var dark = monacoTheme.dark()\\r\\n                return\\r\\n                    _` css\\r\\n                        + &lf;\\r\\n                        + &nbsp; /* Common overrides */&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-editor .line-numbers {&lf;\\r\\n                        + &nbsp;   color: currentColor;&lf;\\r\\n                        + &nbsp;   opacity: 0.5;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; /* Context menu overrides */&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .context-view.monaco-menu-container {&lf;\\r\\n                        + &nbsp;   font-family: 'Source Sans Pro', 'Helvetica Neue', Helvetica, Arial, sans-serif;&lf;\\r\\n                        + &nbsp;   background-color: transparent;&lf;\\r\\n                        + &nbsp;   box-shadow: none;&lf;\\r\\n                        + &nbsp;   border: none;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar {&lf;\\r\\n                        + &nbsp;   padding: 4px;&lf;\\r\\n                        + &nbsp;   border-radius: 3px;&lf;\\r\\n                        + &nbsp;   border-style: solid;&lf;\\r\\n                        + &nbsp;   box-shadow:&nbsp;\\r\\n                        _ tp.s('popover')\\r\\n                        + &nbsp;!important;&lf;\\r\\n                        + &nbsp;   background-color:&nbsp;\\r\\n                        _ tp.c('content')\\r\\n                        + &nbsp;!important;&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        _ tp.c('text')\\r\\n                        + &nbsp;!important;&lf;\\r\\n                        + &nbsp;   border-color: transparent !important;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .monaco-menu .monaco-action-bar {&lf;\\r\\n                        + &nbsp;   border-width: 0;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .monaco-menu .monaco-action-bar {&lf;\\r\\n                        + &nbsp;   border-width: 1px;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-label,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-label:focus {&lf;\\r\\n                        + &nbsp;   font-size: 14px;&lf;\\r\\n                        + &nbsp;   line-height: 1;&lf;\\r\\n                        + &nbsp;   color: inherit;&lf;\\r\\n                        + &nbsp;   border: 0;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item:focus {&lf;\\r\\n                        + &nbsp;   color: inherit !important;&lf;\\r\\n                        + &nbsp;   text-shadow: none !important;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item.disabled .action-menu-item {&lf;\\r\\n                        + &nbsp;   pointer-events: none;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item.focused:not(.disabled),&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item:hover:not(.disabled) {&lf;\\r\\n                        + &nbsp;   border-radius: 2px;&lf;\\r\\n                        + &nbsp;   background-color:&nbsp;\\r\\n                        _ tp.c('primary')\\r\\n                        + &nbsp;!important;&lf;\\r\\n                        + &nbsp;   color: white !important;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-item .action-menu-item {&lf;\\r\\n                        + &nbsp;   background-color: transparent !important;&lf;\\r\\n                        + &nbsp;   color: inherit !important;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor&lf;\\r\\n                        + &nbsp;   .monaco-menu&lf;\\r\\n                        + &nbsp;   .monaco-action-bar&lf;\\r\\n                        + &nbsp;   .action-item&lf;\\r\\n                        + &nbsp;   .action-menu-item:focus:not(.disabled)&lf;\\r\\n                        + &nbsp;   .action-label,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor&lf;\\r\\n                        + &nbsp;   .monaco-menu&lf;\\r\\n                        + &nbsp;   .monaco-action-bar&lf;\\r\\n                        + &nbsp;   .action-item:hover:not(.disabled)&lf;\\r\\n                        + &nbsp;   .action-label {&lf;\\r\\n                        + &nbsp;   color: inherit;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .keybinding {&lf;\\r\\n                        + &nbsp;   color: inherit;&lf;\\r\\n                        + &nbsp;   font-size: 85%;&lf;\\r\\n                        + &nbsp;   font-family: 'SF Mono', Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;&lf;\\r\\n                        + &nbsp;   line-height: 18px;&lf;\\r\\n                        + &nbsp;   opacity: 0.5;&lf;\\r\\n                        + &nbsp;   margin-left: 8px;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .keybinding,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-menu .monaco-action-bar .action-label:not(.separator) {&lf;\\r\\n                        + &nbsp;   padding: 8px 12px;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor .monaco-action-bar .action-label.separator {&lf;\\r\\n                        + &nbsp;   border-bottom-color: currentColor;&lf;\\r\\n                        + &nbsp;   opacity: 0.1;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; /* Light theme overrides */&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .JsxText {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ light.colors['editor.foreground']\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .JsxSelfClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .JsxOpeningElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .JsxClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .tagName-of-JsxOpeningElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .tagName-of-JsxClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .tagName-of-JsxSelfClosingElement {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ lightColors.syntax.property\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .name-of-JsxAttribute {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ lightColors.syntax.number\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .name-of-PropertyAssignment {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ lightColors.syntax.string\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-light .name-of-PropertyAccessExpression {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ lightColors.syntax.constant\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; /* Dark theme overrides */&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .JsxText {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ dark.colors['editor.foreground']\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .JsxSelfClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .JsxOpeningElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .JsxClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .tagName-of-JsxOpeningElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .tagName-of-JsxClosingElement,&lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .tagName-of-JsxSelfClosingElement {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ darkColors.syntax.property\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .name-of-JsxAttribute {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ darkColors.syntax.number\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .name-of-PropertyAssignment {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ darkColors.syntax.string\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-editor.theme-dark .name-of-PropertyAccessExpression {&lf;\\r\\n                        + &nbsp;   color:&nbsp;\\r\\n                        @ darkColors.syntax.constant\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-vim-statusbar {&lf;\\r\\n                        + &nbsp;   font-family:&nbsp;\\r\\n                        @ 'var(--font-monospace)'\\r\\n                        + ;&lf;\\r\\n                        + &nbsp;   font-size: 12px;&lf;\\r\\n                        + &nbsp;   padding: 0 16px;&lf;\\r\\n                        + &nbsp;   height: 24px;&lf;\\r\\n                        + &nbsp;   line-height: 24px;&lf;\\r\\n                        + &nbsp;   border-top: 1px solid&nbsp;\\r\\n                        _ tp.c('border')\\r\\n                        + ;&lf;\\r\\n                        + &nbsp; }&lf;\\r\\n                        + &lf;\\r\\n                        + &nbsp; .packi-monaco-vim-statusbar input {&lf;\\r\\n                        + &nbsp;   font-family:&nbsp;\\r\\n                        @ 'var(--font-monospace)'\\r\\n                        + ;&lf;\\r\\n                        + &nbsp;   height: 100%;&lf;\\r\\n                        + &nbsp;   outline: 0;&lf;\\r\\n                        + &nbsp;   border: 0;&lf;\\r\\n                        + &nbsp;   background: transparent;&lf;\\r\\n                        + &nbsp; }&lf;\"},\"t/js/editors/monaco/t/themes/monaco.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    $\\r\\n      var myName = 'MonacoTheme';\\r\\n      //\\r\\n    \\r\\n    iife_window( editors, ${myName})\\r\\n        const s1\\r\\n            =>\\r\\n                param color\\r\\n                _ color.substr(1)\\r\\n        const theme\\r\\n            =>\\r\\n                {\\r\\n                    @ ui\\r\\n                    @ syntax\\r\\n                param base\\r\\n                (\\r\\n                    {\\r\\n                        @ base\\r\\n                        @ inherit true\\r\\n                        [ rules\\r\\n                            {\\r\\n                                @ token ''\\r\\n                                @ foreground s1(syntax.text)\\r\\n                            {\\r\\n                                @ token 'invalid'\\r\\n                                @ foreground s1(syntax.invalid)\\r\\n                            {\\r\\n                                @ token 'emphasis'\\r\\n                                @ fontStyle 'italic'\\r\\n                            {\\r\\n                                @ token 'strong'\\r\\n                                @ fontStyle 'bold'\\r\\n                            {\\r\\n                                @ token 'variable'\\r\\n                                @ foreground s1(syntax.variable)\\r\\n                            {\\r\\n                                @ token 'variable.predefined'\\r\\n                                @ foreground s1(syntax.variable)\\r\\n                            {\\r\\n                                @ token 'constant'\\r\\n                                @ foreground s1(syntax.constant)\\r\\n                            {\\r\\n                                @ token 'comment'\\r\\n                                @ foreground s1(syntax.comment)\\r\\n                                @ fontStyle 'italic'\\r\\n                            {\\r\\n                                @ token 'number'\\r\\n                                @ foreground s1(syntax.number)\\r\\n                            {\\r\\n                                @ token 'number.hex'\\r\\n                                @ foreground s1(syntax.number)\\r\\n                            {\\r\\n                                @ token 'regexp'\\r\\n                                @ foreground s1(syntax.regexp)\\r\\n                            {\\r\\n                                @ token 'annotation'\\r\\n                                @ foreground s1(syntax.annotation)\\r\\n                            {\\r\\n                                @ token 'type'\\r\\n                                @ foreground s1(syntax.annotation)\\r\\n                            {\\r\\n                                @ token 'delimiter'\\r\\n                                @ foreground s1(syntax.text)\\r\\n                            {\\r\\n                                @ token 'delimiter.html'\\r\\n                                @ foreground s1(syntax.text)\\r\\n                            {\\r\\n                                @ token 'delimiter.xml'\\r\\n                                @ foreground s1(syntax.text)\\r\\n                            {\\r\\n                                @ token 'tag'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'tag.id.jade'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'tag.class.jade'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'meta.scss'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'metatag'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'metatag.content.html'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'metatag.html'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'metatag.xml'\\r\\n                                @ foreground s1(syntax.tag)\\r\\n                            {\\r\\n                                @ token 'metatag.php'\\r\\n                                @ fontStyle 'bold'\\r\\n                            {\\r\\n                                @ token 'key'\\r\\n                                @ foreground s1(syntax.property)\\r\\n                            {\\r\\n                                @ token 'string.key.json'\\r\\n                                @ foreground s1(syntax.property)\\r\\n                            {\\r\\n                                @ token 'string.value.json'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'attribute.name'\\r\\n                                @ foreground s1(syntax.constant)\\r\\n                            {\\r\\n                                @ token 'attribute.value'\\r\\n                                @ foreground s1(syntax.property)\\r\\n                            {\\r\\n                                @ token 'attribute.value.number'\\r\\n                                @ foreground s1(syntax.number)\\r\\n                            {\\r\\n                                @ token 'attribute.value.unit'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'attribute.value.html'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'attribute.value.xml'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'string'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'string.html'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'string.sql'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'string.yaml'\\r\\n                                @ foreground s1(syntax.string)\\r\\n                            {\\r\\n                                @ token 'keyword'\\r\\n                                @ foreground s1(syntax.keyword)\\r\\n                            {\\r\\n                                @ token 'keyword.json'\\r\\n                                @ foreground s1(syntax.keyword)\\r\\n                            {\\r\\n                                @ token 'keyword.flow'\\r\\n                                @ foreground s1(syntax.keyword)\\r\\n                            {\\r\\n                                @ token 'keyword.flow.scss'\\r\\n                                @ foreground s1(syntax.keyword)\\r\\n                            {\\r\\n                                @ token 'operator.scss'\\r\\n                                @ foreground s1(syntax.operator)\\r\\n                            {\\r\\n                                @ token 'operator.sql'\\r\\n                                @ foreground s1(syntax.operator)\\r\\n                            {\\r\\n                                @ token 'operator.swift'\\r\\n                                @ foreground s1(syntax.operator)\\r\\n                            {\\r\\n                                @ token 'predefined.sql'\\r\\n                                @ foreground s1(syntax.predefined)\\r\\n                        { colors\\r\\n                            @ 'editor.background' ui.background\\r\\n                            @ 'editor.foreground' ui.text\\r\\n                            @ 'editorIndentGuide.background' ui.indent.inactive\\r\\n                            @ 'editorIndentGuide.activeBackground' ui.indent.active\\r\\n                            @ 'editorOverviewRuler.border' ui.background\\r\\n\\r\\n        function ${myName}\\r\\n            param styleData\\r\\n            set styleData = styles.computeStyleData(styleData)\\r\\n            set this.darkColors = new editors.MonacoColorsDark(styleData)\\r\\n            set this.lightColors = new editors.MonacoColorsLight(styleData)\\r\\n        set ${myName}.prototype.light\\r\\n            function\\r\\n                return theme(this.lightColors, 'vs')\\r\\n        set ${myName}.prototype.dark\\r\\n            function\\r\\n                return theme(this.darkColors, 'vs-dark')\\r\\n\"},\"t/js/forms/control.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'Control';\\r\\n      //\\r\\n    \\r\\n    iife_window( mvc, ${myName}, increment, Underscore)\\r\\n\\r\\n      set ${myName}.disposables = {}\\r\\n\\r\\n      set ${myName}.build\\r\\n        function\\r\\n            param __html\\r\\n            param ctx\\r\\n            param_array( __html, required, Function mvc.${myName}.build )\\r\\n            param_object( ctx, required, Function mvc.${myName}.build )\\r\\n            \\r\\n            let options = []\\r\\n            if ctx.type == 'group'\\r\\n                var direction = ctx.direction || 'row'\\r\\n                foreach item in ctx.controls\\r\\n                    set item.__form = ctx.__form\\r\\n                    var aOptions = []\\r\\n                    _ ${myName}.build\\r\\n                        @ aOptions\\r\\n                        @ item\\r\\n                    _ options.push\\r\\n                        _ aOptions.join('\\\\n')\\r\\n                div {{ options.join('\\\\n') }}\\r\\n                    class control-group grid-{{ direction }}-{{ ctx.controls.length }}\\r\\n\\r\\n                return\\r\\n            elif ctx.type == 'object-condition'\\r\\n                foreach item in ctx.controls\\r\\n                    set item.__form = ctx.__form\\r\\n                    var aOptions = []\\r\\n                    _ ${myName}.build\\r\\n                        @ aOptions\\r\\n                        @ item\\r\\n                    _ options.push\\r\\n                        _ aOptions.join('\\\\n')\\r\\n            elif ctx.type == 'select'\\r\\n                foreach item in ctx.options\\r\\n                    var aOptions = []\\r\\n                    _ select_option\\r\\n                        @ aOptions\\r\\n                        @ item\\r\\n                    _ options.push\\r\\n                        _ aOptions.join('')\\r\\n            elif ctx.type == 'radio'\\r\\n                foreach item in ctx.options\\r\\n                    var aOptions = []\\r\\n                    _ radio_option\\r\\n                        @ aOptions\\r\\n                        @ ctx\\r\\n                        @ item\\r\\n                    _ options.push\\r\\n                        _ aOptions.join('')\\r\\n            \\r\\n            div\\r\\n                class single-control row row-space {{ (ctx.type == 'object-condition' ? 'object-condition' : '') }} \\r\\n                div\\r\\n                  class {{ (ctx.type == 'object-condition' ? 'object-condition-checkbox' : '') }} \\r\\n                  label {{ ctx.label }}\\r\\n                      @ for {{ ctx.id }}\\r\\n                      class control-label {{ (ctx.required ? 'required' : '') }} \\r\\n                div\\r\\n                    class input-group\\r\\n                    if ctx.type == 'object-condition'\\r\\n                        div\\r\\n                            class checkbox-item object-condition-checkbox\\r\\n                            input\\r\\n                                class input--style-2\\r\\n                                type checkbox\\r\\n                                placeholder {{ ctx.label }}\\r\\n                                name {{ ctx.id }}\\r\\n                        div\\r\\n                          id {{ ctx.id }}-conditioned\\r\\n                          div {{ options.join('\\\\n') }}\\r\\n                              class control-group grid-column-{{ ctx.controls.length }}\\r\\n                    elif ctx.type == 'static'\\r\\n                        div\\r\\n                            class form-control-static\\r\\n                            id {{ ctx.__form.id + '-' +  ctx.id }}\\r\\n                    elif ctx.type == 'text'\\r\\n                        input\\r\\n                            class input--style-2\\r\\n                            type text\\r\\n                            placeholder {{ ctx.label }}\\r\\n                            name {{ ctx.id }}\\r\\n                    elif ctx.type == 'select'\\r\\n                        div\\r\\n                            class rs-select2 js-select-simple select--no-search\\r\\n                            select {{ options.join('\\\\n') }}\\r\\n                                name {{ ctx.id }}\\r\\n                            $*\\r\\n                            div\\r\\n                                id {{ ctx.id }}-dropdown\\r\\n                                class select-dropdown\\r\\n                            *$\\r\\n                    elif ctx.type == 'date'\\r\\n                        $*\\r\\n                        input\\r\\n                            class input--style-2 js-datepicker\\r\\n                            type text\\r\\n                            placeholder {{ ctx.label }}\\r\\n                            name {{ ctx.id }}\\r\\n                        i\\r\\n                            class zmdi zmdi-calendar-note input-icon js-btn-calendar\\r\\n                        *$\\r\\n                        div\\r\\n                            class form-container\\r\\n                            div\\r\\n                                class form\\r\\n                                i \\r\\n                                    class far fa-calendar-alt\\r\\n                                input \\r\\n                                    type text\\r\\n                                    placeholder Pick a date\\r\\n                                    class date-input\\r\\n                                    name {{ ctx.id }}\\r\\n\\r\\n                    elif ctx.type == 'checkbox'\\r\\n                        div\\r\\n                            class checkbox-item\\r\\n                            input\\r\\n                                class input--style-2\\r\\n                                type checkbox\\r\\n                                placeholder {{ ctx.label }}\\r\\n                                name {{ ctx.id }}\\r\\n                    elif ctx.type == 'radio'\\r\\n                        div {{ options.join('\\\\n') }}\\r\\n                            class radio-group\\r\\n                    elif ctx.type == 'slider'\\r\\n                        div\\r\\n                            class slider-group ui-slider ui-slider-horizontal\\r\\n                            div\\r\\n                                class slider-item\\r\\n                                id {{ ctx.id }}\\r\\n                            span\\r\\n                                class donate-value\\r\\n                                id value-lower\\r\\n                    elif ctx.type == 'range-slider'\\r\\n                        div\\r\\n                            class slider\\r\\n                            id {{ ctx.id }}\\r\\n                            @ se-min {{ (ctx.min || 0) }}\\r\\n                            @ se-step {{ (ctx.step || 1) }}\\r\\n                            @ se-min-value {{ (ctx.minValue || 50) }}\\r\\n                            @ se-max-value {{ (ctx.maxValue || 50) }}\\r\\n                            @ se-max {{ (ctx.max || 100) }}\\r\\n                            div\\r\\n                              class slider-touch-left\\r\\n                              span \\r\\n                            div\\r\\n                              class slider-touch-right\\r\\n                              span \\r\\n                            div\\r\\n                              class slider-line\\r\\n                              span \\r\\n                    elif ctx.type == 'code'\\r\\n                        div\\r\\n                            id {{ ctx.id }}\\r\\n                    elif ctx.type == 'ittf-editor'\\r\\n                        div\\r\\n                            id {{ ctx.id }}\\r\\n                            @ style height:{{ (ctx.height || '400') }}px;width:100%;\\r\\n\\r\\n                          $*\\r\\n                          @ style display:flex;flex:1;flex-direction:column;height:{{ (ctx.height || '400px') }};width:100%;\\r\\n                          div $$ ResizeDetector\\r\\n                              @ style display:flex;flex:1;flex-direction:column;min-width:0;min-height:0;position:relative\\r\\n                              iframe\\r\\n                                  id {{ ctx.id }}-horizontal\\r\\n                                  @ style display:block;position:absolute;left:0;top:0;pointer-events:none;opacity:0;width:100%;height:1px;\\r\\n                              iframe\\r\\n                                  id {{ ctx.id }}-vertical\\r\\n                                  @ style display:block;position:absolute;left:0;top:0;pointer-events:none;opacity:0;height:100%;width:1px;\\r\\n                              div $$ MonacoEditor\\r\\n                                  id {{ ctx.id }}\\r\\n                                  @ style height:100%;width:100%;\\r\\n                          *$\\r\\n                label\\r\\n                    @ id {{ ctx.id }}-error\\r\\n                    @ for {{ ctx.id }}\\r\\n                    class control-error\\r\\n\\r\\n        function select_option\\r\\n            param __html\\r\\n            param ctx\\r\\n            _ __html.push('<option')\\r\\n            _ __html.push(' value=\\\"' + ctx.value + '\\\"')\\r\\n            if ctx.selected\\r\\n                _ __html.push(' selected=\\\"selected\\\"')\\r\\n            _ __html.push('>')\\r\\n            _ __html.push(ctx.label)\\r\\n            _ __html.push('</option>')   \\r\\n\\r\\n        function radio_option\\r\\n            param __html\\r\\n            param radio\\r\\n            param ctx\\r\\n            div\\r\\n                class radio-item\\r\\n                input \\r\\n                    type radio\\r\\n                    name {{ radio.id }}\\r\\n                    id {{ ctx.id }}\\r\\n                    value {{ ctx.value }}\\r\\n                    checked \\r\\n                label {{ ctx.label }}\\r\\n                    @ for {{ ctx.id }}\\r\\n                span \\r\\n                    class check\\r\\n\\r\\n      set ${myName}.start\\r\\n          function\\r\\n              param $\\r\\n              param item\\r\\n              param context\\r\\n              param_object( item, required, Function mvc.${myName}.start )\\r\\n              param_object( context, required, Function mvc.${myName}.start )\\r\\n\\r\\n              if item.type == 'group'\\r\\n                  foreach child in item.controls\\r\\n                      set child.__form = item.__form\\r\\n                      _ ${myName}.start\\r\\n                          @ $\\r\\n                          @ child\\r\\n                          @ context\\r\\n                  return\\r\\n              elif item.type == 'object-condition'\\r\\n                  try \\r\\n                      var el = $('input[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.checked = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                          _ $on\\r\\n                              @ el\\r\\n                              @ 'change'\\r\\n                              =>\\r\\n                                  param event\\r\\n                                  log 'object-condition.checkbox.onChange', item, el.checked\\r\\n                                  _  context.onChange\\r\\n                                      @ item.id\\r\\n                                      @ el.checked\\r\\n                                      @ item.valuePath\\r\\n                                  set $('#' + item.id + '-conditioned').style.display = el.checked ? 'block' : 'none'\\r\\n                      set $('#' + item.id + '-conditioned').style.display = el.checked ? 'block' : 'none'\\r\\n                  catch err\\r\\n                    log err\\r\\n                  foreach child in item.controls\\r\\n                      set child.__form = item.__form\\r\\n                      _ ${myName}.start\\r\\n                          @ $\\r\\n                          @ child\\r\\n                          @ context\\r\\n                  return\\r\\n\\r\\n              elif item.type == 'static'\\r\\n                  try \\r\\n                      var el = $('#' + item.__form.id + '-' + item.id)\\r\\n                      set el.innerHTML = context.originalValues[item.id]\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'text'\\r\\n                  try \\r\\n                      var el = $('input[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.value = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                          _ $on\\r\\n                              @ el\\r\\n                              @ 'change'\\r\\n                              =>\\r\\n                                  param event\\r\\n                                  log \\\"value changed\\\", el\\r\\n                                  _  context.onChange\\r\\n                                      @ item.id\\r\\n                                      @ el.value\\r\\n                                      @ item.valuePath\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'select'\\r\\n                  try \\r\\n                      var selectBox = $('select[name=\\\"' + item.id + '\\\"]')\\r\\n                      if item.isSearcheable\\r\\n                          _ controls.NiceSelect.bind(selectBox, {searchable: true})\\r\\n                      else\\r\\n                          _ controls.NiceSelect.bind(selectBox)\\r\\n                      var el = $('select[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.value = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                          _ $on\\r\\n                              @ el\\r\\n                              @ 'change'\\r\\n                              =>\\r\\n                                  param event\\r\\n                                  log \\\"value changed\\\", el\\r\\n                                  _  context.onChange\\r\\n                                      @ item.id\\r\\n                                      @ el.value\\r\\n                                      @ item.valuePath\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'checkbox'\\r\\n                  try \\r\\n                      var el = $('input[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.checked = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                          _ $on\\r\\n                              @ el\\r\\n                              @ 'change'\\r\\n                              =>\\r\\n                                  param event\\r\\n                                  log 'checkbox.onChange', item, el.checked\\r\\n                                  _  context.onChange\\r\\n                                      @ item.id\\r\\n                                      @ el.checked\\r\\n                                      @ item.valuePath\\r\\n                  catch err\\r\\n                    log err\\r\\n              elif item.type == 'radio'\\r\\n                  try \\r\\n                      # original value set in build\\r\\n                      var els\\r\\n                        _ document.querySelectorAll\\r\\n                          @ 'input[type=radio][name=\\\"' + item.id + '\\\"]'\\r\\n                      _ els.forEach\\r\\n                        =>\\r\\n                          param el\\r\\n                          if context.onChange\\r\\n                            _ $on\\r\\n                                @ el\\r\\n                                @ 'change'\\r\\n                                =>\\r\\n                                    param event\\r\\n                                    _  context.onChange\\r\\n                                        @ item.id\\r\\n                                        @ el.value\\r\\n                                        @ item.valuePath\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'date'\\r\\n                  try \\r\\n                      var el = $('input[name=\\\"' + item.id + '\\\"]')\\r\\n                      if typeof context.originalValues[item.id] != \\\"undefined\\\"\\r\\n                        set el.value = context.originalValues[item.id]\\r\\n                      if context.onChange\\r\\n                        $*\\r\\n                        _ $('input[name=\\\"' + item.id + '\\\"]').daterangepicker\\r\\n                            { \\r\\n                                @ \\\"singleDatePicker\\\" true\\r\\n                                @ \\\"showDropdowns\\\" true\\r\\n                                @ \\\"autoUpdateInput\\\" true\\r\\n                                @ \\\"autoApply\\\" true\\r\\n                                { locale\\r\\n                                    @ format 'DD/MM/YYYY'\\r\\n                        _ $('input[name=\\\"' + item.id + '\\\"]').on\\r\\n                            @ 'apply.daterangepicker'\\r\\n                            function \\r\\n                                param ev\\r\\n                                param picker\\r\\n                                _ $(this).val(picker.startDate.format('DD/MM/YYYY'))\\r\\n                        log 'datepicker', item.id, 'activated'\\r\\n                        *$\\r\\n                        _ $on\\r\\n                            @ el\\r\\n                            @ 'change'\\r\\n                            =>\\r\\n                                param event\\r\\n                                _  context.onChange\\r\\n                                    @ item.id\\r\\n                                    @ el.value\\r\\n                                    @ item.valuePath\\r\\n                        var dateControl\\r\\n                            new controls.CodepenDatePicker(\\\".date-input\\\")\\r\\n                  catch err\\r\\n                      log err\\r\\n\\r\\n              elif item.type == 'slider'\\r\\n                  try \\r\\n                      _ noUiSlider.create\\r\\n                          @ $('#' + item.id)[0]\\r\\n                          { \\r\\n                              [ start\\r\\n                                  @ item.start\\r\\n                              @ step item.step\\r\\n                              [ connect\\r\\n                                  @ true\\r\\n                                  @ false\\r\\n                              [ tooltips\\r\\n                                  @ true\\r\\n                              { range\\r\\n                                  @ 'min' item.range.min\\r\\n                                  @ 'max' item.range.max\\r\\n                              @ format\\r\\n                                  _ wNumb\\r\\n                                      { \\r\\n                                          @ decimals 0\\r\\n                                          @ thousand ','\\r\\n                                          @ prefix '$ '\\r\\n                  catch err\\r\\n                      log err\\r\\n\\r\\n              elif item.type == 'range-slider'\\r\\n                  # original value set in build\\r\\n                  if context.onChange\\r\\n                      try \\r\\n                          var newRangeSlider = new controls.RangeSlider(item.id)\\r\\n                          set newRangeSlider.onChange =\\r\\n                              function \\r\\n                                  param min\\r\\n                                  param max\\r\\n                                  _  context.onChange\\r\\n                                          @ item.id\\r\\n                                          @ min + ';' + max\\r\\n                                          @ item.valuePath\\r\\n                          set newRangeSlider.didChanged\\r\\n                              function \\r\\n                                  param min\\r\\n                                  param max\\r\\n                                  _  context.onChange\\r\\n                                          @ item.id\\r\\n                                          @ min + ';' + max\\r\\n                                          @ item.valuePath\\r\\n                      catch err\\r\\n                          log err\\r\\n                  # call reset if needed\\r\\n                  # newRangeSlider.reset();\\r\\n              elif item.type == 'code'\\r\\n                  try \\r\\n                      var editor\\r\\n                          _ CodeMirror\\r\\n                              @ $('#' + item.id)[0]\\r\\n                              { \\r\\n                                  @ mode \\\"text/html\\\"\\r\\n                                  @ theme \\\"dracula\\\"\\r\\n                                  @ lineWrapping false\\r\\n                                  @ lineNumbers true\\r\\n                                  @ styleActiveLine true\\r\\n                                  @ matchBrackets true\\r\\n                                  @ viewportMargin Infinity\\r\\n                                  { extraKeys\\r\\n                                      @ \\\"Ctrl-Space\\\" \\\"autocomplete\\\"\\r\\n                                  @ value \\\"<!doctype html>\\\\n<html>\\\\n  \\\" + $('#' + item.id)[0].innerHTML + \\\"\\\\n</html>\\\"\\r\\n                  catch err\\r\\n                      log err\\r\\n              elif item.type == 'ittf-editor'\\r\\n                  try \\r\\n                      _ editors.MonacoEditor.setup\\r\\n                          function\\r\\n                              var monacoEditor = new editors.MonacoEditor()\\r\\n                              _ monacoEditor.setProps\\r\\n                                  {\\r\\n                                      @ container item.id\\r\\n                                      { files\\r\\n                                        { ['file.ittf']\\r\\n                                          @ type 'CODE'\\r\\n                                          @ contents context.originalValues[item.id] || ''\\r\\n                                      @ selectedFileName 'file.ittf'\\r\\n                                      @ autoFocus true\\r\\n                                      @ automaticLayout true\\r\\n                                      @ updateFiles\\r\\n                                        =>\\r\\n                                            param data\\r\\n                                            if context.onChange\\r\\n                                              log 'monacoEditor.updateFiles.data', data()\\r\\n                                              _ context.onChange\\r\\n                                                  @ item.id\\r\\n                                                  @ data()['file.ittf'].contents\\r\\n                                                  @ item.valuePath\\r\\n                                      @ readOnly false\\r\\n                              set ${myName}.disposables[item.id]\\r\\n                                [\\r\\n                                  @ monacoEditor\\r\\n                              _ monacoEditor.render\\r\\n                  catch err\\r\\n                      log err\\r\\n\\r\\n      set ${myName}.start_validation\\r\\n          function\\r\\n              param $\\r\\n              param item\\r\\n              param rules\\r\\n              param_object( item, required, Function mvc.${myName}.start_validation )\\r\\n              param_object( rules, required, Function mvc.${myName}.start_validation )\\r\\n\\r\\n              if item.type == 'group'\\r\\n                  foreach child in item.controls\\r\\n                      _ ${myName}.start_validation\\r\\n                          @ $\\r\\n                          @ child\\r\\n                          @ rules\\r\\n                  return\\r\\n              \\r\\n              var errorEl = item.required || item.validate ? \\r\\n                  \\\\b $('#' + item.id + '-error') : null\\r\\n              if item.required\\r\\n                  set rules[item.id] = rules[item.id] || []\\r\\n                  _ rules[item.id].push\\r\\n                    {\\r\\n                      @ kind \\\"required\\\"\\r\\n                      @ $error errorEl\\r\\n              if item.validate\\r\\n                  set rules[item.id] = rules[item.id] || []\\r\\n                  _ rules[item.id].push\\r\\n                    {\\r\\n                      @ kind \\\"function\\\"\\r\\n                      @ validate item.validate\\r\\n                      @ $error errorEl\\r\\n\\r\\n      set ${myName}.validate\\r\\n          function\\r\\n              param item\\r\\n              param formRules\\r\\n              param context\\r\\n              param invalids\\r\\n              if item.type == 'group'\\r\\n                  foreach child in item.controls\\r\\n                      _ ${myName}.validate\\r\\n                          @ child\\r\\n                          @ formRules\\r\\n                          @ context\\r\\n                          @ invalids\\r\\n                  return\\r\\n              var rules = formRules[item.id]\\r\\n              log item.id, 'rules', rules\\r\\n              if rules && rules.length > 0\\r\\n                const value = context.currentValues[item.id]\\r\\n                foreach rule in rules\\r\\n                  if rule.kind == 'required'\\r\\n                    if typeof value == 'undefined' || value == 'null' || value.length == 0\\r\\n                      _ invalids.push\\r\\n                        @ item\\r\\n                      set rule.$error.innerHTML = 'Please enter the ' + item.label + ' value.'\\r\\n                  else\\r\\n                    set rule.$error.innerHTML = '&nbsp;'\\r\\n\\r\\n      set ${myName}.dispose\\r\\n        function\\r\\n            param $\\r\\n            param item\\r\\n            const dispArray = ${myName}.disposables[item.id]\\r\\n            if dispArray\\r\\n              foreach disp in dispArray\\r\\n                  _ disp.dispose\\r\\n\"},\"t/js/forms/form.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'Form';\\r\\n      //\\r\\n    \\r\\n    iife_window( mvc, ${myName}, increment, Underscore)\\r\\n\\r\\n      html_f buildForm\\r\\n            var temp = []\\r\\n            foreach item in ctx.controls\\r\\n                set item.__form = ctx\\r\\n                _ mvc.Control.build\\r\\n                    @ temp\\r\\n                    @ item\\r\\n            \\r\\n            div\\r\\n                class form-card\\r\\n                if ctx.title\\r\\n                    div {{ ctx.title }}\\r\\n                        class form-title\\r\\n                div\\r\\n                    id {{ ctx.id }}-message-warning\\r\\n                    class m-b-s\\r\\n                div\\r\\n                    id {{ ctx.id }}-message-success\\r\\n                    class m-b-s\\r\\n                < form\\r\\n                    method post\\r\\n                    id {{ ctx.id }}\\r\\n                    div {{ temp.join('') }}\\r\\n                    div\\r\\n                        class form-submit\\r\\n                        input \\r\\n                            type submit\\r\\n                            value Submit\\r\\n                            class submit\\r\\n                            id submit\\r\\n                            name submit\\r\\n                        input \\r\\n                            type submit\\r\\n                            value Reset\\r\\n                            class submit\\r\\n                            id reset\\r\\n                            name reset\\r\\n        \\r\\n      set ${myName}.setup\\r\\n        function\\r\\n          param $\\r\\n          param container\\r\\n          param model\\r\\n          param originalValues\\r\\n          param handlers\\r\\n          param_object( model, required, Function mvc.${myName}.setup )\\r\\n          param_object( originalValues, required, Function mvc.${myName}.setup )\\r\\n          param_object( handlers, required, Function mvc.${myName}.setup )\\r\\n\\r\\n          var container = container.nodeName ? container : $(container)\\r\\n          if !container || !container.nodeName\\r\\n            throw new Error('Container element for ' + model.title + 'form not found: ' + container)\\r\\n\\r\\n          set container.innerHTML\\r\\n            _ buildForm\\r\\n              @ model\\r\\n\\r\\n          var formValues\\r\\n            _ Object.assign\\r\\n              {\\r\\n              @ originalValues\\r\\n\\r\\n          var currentValues\\r\\n            _ Object.assign\\r\\n              {\\r\\n              @ originalValues\\r\\n\\r\\n          var context\\r\\n              {\\r\\n                  @ originalValues formValues\\r\\n                  @ currentValues currentValues\\r\\n                  @ onChange\\r\\n                      function\\r\\n                          param id\\r\\n                          param value\\r\\n                          param valuePath\\r\\n                          if valuePath\\r\\n                            var obj = currentValues\\r\\n                            const parts = valuePath.split('.')\\r\\n                            foreach part in parts\\r\\n                              log 'part', part\\r\\n                              var partObj = obj[part]\\r\\n                              if !partObj\\r\\n                                set obj = obj[part] = {}\\r\\n                              else\\r\\n                                set obj = partObj\\r\\n                            set obj[id] = value\\r\\n                          else\\r\\n                            set currentValues[id] = value\\r\\n                          log 'Changed currentValues', valuePath, currentValues\\r\\n                          if handlers.onChange\\r\\n                            _ handlers.onChange\\r\\n                              @ id\\r\\n                              @ value\\r\\n                              @ currentValues\\r\\n                  @ onSubmit\\r\\n                      function\\r\\n                          param id\\r\\n                          param value\\r\\n                          if id\\r\\n                            set currentValues[id] = value\\r\\n                          log 'Submit currentValues', currentValues\\r\\n                          if handlers.onSubmit\\r\\n                            _ handlers.onSubmit\\r\\n                              @ currentValues\\r\\n          \\r\\n          _ Form.start\\r\\n              @ $\\r\\n              @ model\\r\\n              @ context\\r\\n\\r\\n          _ Form.start_validation\\r\\n              @ $\\r\\n              @ model\\r\\n\\r\\n      $* VIA\\r\\n      set ${myName}.build\\r\\n        function\\r\\n            param __html\\r\\n            param ctx\\r\\n            param_array( __html, required, Function mvc.${myName}.build )\\r\\n            param_object( ctx, required, Function mvc.${myName}.build )\\r\\n            \\r\\n            var temp = []\\r\\n            foreach item in ctx.controls\\r\\n                _ mvc.Control.build\\r\\n                    @ temp\\r\\n                    @ item\\r\\n            \\r\\n            div\\r\\n                class form-card\\r\\n                h3 {{ ctx.title }}\\r\\n                    class form-title\\r\\n                div\\r\\n                    id {{ ctx.id }}-message-warning\\r\\n                    class m-b-s\\r\\n                div\\r\\n                    id {{ ctx.id }}-message-success\\r\\n                    class m-b-s\\r\\n                < form\\r\\n                    method post\\r\\n                    id {{ ctx.id }}\\r\\n                    div {{ temp.join('') }}\\r\\n                    div\\r\\n                        class form-submit\\r\\n                        input \\r\\n                            type submit\\r\\n                            value Submit\\r\\n                            class submit\\r\\n                            id submit\\r\\n                            name submit\\r\\n                        input \\r\\n                            type submit\\r\\n                            value Reset\\r\\n                            class submit\\r\\n                            id reset\\r\\n                            name reset\\r\\n      *$\\r\\n\\r\\n      set ${myName}.start\\r\\n        function\\r\\n            param $\\r\\n            param model\\r\\n            param context\\r\\n            param_object( model, required, Function mvc.${myName}.start )\\r\\n            param_object( context, required, Function mvc.${myName}.start )\\r\\n\\r\\n            foreach item in model.controls\\r\\n                set item.__form = model\\r\\n                _ mvc.Control.start\\r\\n                    @ $\\r\\n                    @ item\\r\\n                    @ context\\r\\n\\r\\n            if context.onSubmit\\r\\n                var el = $('#' + model.id)\\r\\n                _ $on\\r\\n                    @ el\\r\\n                    @ 'submit'\\r\\n                    =>\\r\\n                        param event\\r\\n                        _ event.preventDefault\\r\\n                        const invalids = []\\r\\n                        foreach item in model.controls\\r\\n                          _ mvc.Control.validate\\r\\n                            @ item\\r\\n                            @ model.validation_rules\\r\\n                            @ context\\r\\n                            @ invalids\\r\\n                        if invalids.length == 0\\r\\n                          log \\\"model submitted\\\", model.id\\r\\n                          _  context.onSubmit\\r\\n                        else\\r\\n                          log 'invalid forms', invalids\\r\\n\\r\\n      set ${myName}.start_validation\\r\\n        function\\r\\n            param $\\r\\n            param model\\r\\n            param_object( model, required, Function mvc.${myName}.start_validation )\\r\\n\\r\\n            var rules = {}\\r\\n            foreach item in model.controls\\r\\n                _ mvc.Control.start_validation\\r\\n                    @ $\\r\\n                    @ item\\r\\n                    @ rules\\r\\n            set model.validation_rules = rules\\r\\n\\r\\n      set ${myName}.dispose\\r\\n        function\\r\\n            param $\\r\\n            param container\\r\\n            param model\\r\\n            foreach item in model.controls\\r\\n                _ mvc.Control.dispose\\r\\n                  @ $\\r\\n                  @ item\\r\\n            var container = container.nodeName ? container : $(container)\\r\\n            set container.innerHTML = ''\"},\"toIttf/file.html\":{\"type\":\"CODE\",\"contents\":\"<div class=\\\"form-container\\\">\\r\\n   <form>\\r\\n      <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Pick a date\\\" class=\\\"date-input\\\">\\r\\n   </form>\\r\\n</div>\"},\"toIttf/file.css\":{\"type\":\"CODE\",\"contents\":\".alpha {\\r\\n    padding: 10px;\\r\\n}\"},\"toIttf/file.js\":{\"type\":\"CODE\",\"contents\":\"export default function restArguments(func, startIndex) {\\r\\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\\r\\n  return function() {\\r\\n    var length = Math.max(arguments.length - startIndex, 0),\\r\\n        rest = Array(length),\\r\\n        index = 0;\\r\\n    for (; index < length; index++) {\\r\\n      rest[index] = arguments[index + startIndex];\\r\\n    }\\r\\n    switch (startIndex) {\\r\\n      case 0: return func.call(this, rest);\\r\\n      case 1: return func.call(this, arguments[0], rest);\\r\\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\\r\\n    }\\r\\n    var args = Array(startIndex + 1);\\r\\n    for (index = 0; index < startIndex; index++) {\\r\\n      args[index] = arguments[index];\\r\\n    }\\r\\n    args[startIndex] = rest;\\r\\n    return func.apply(this, args);\\r\\n  };\\r\\n}\"},\"t/catch_reject.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params method\\r\\n    ._ catch\\r\\n        =>\\r\\n            param err\\r\\n            if typeof err === 'object' && err !== null\\r\\n                $hook\\r\\n            error '${method}.error', err\\r\\n            return reject(err)\\r\\n\"},\"t/iife_window.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params ns|@@null, apiName|@@null, kind|@@null, requires|@@null\\r\\n  \\r\\n  $if requires != null && requires.indexOf('Underscore') > -1\\r\\n    if !window.utils || !window.utils.Underscore \\r\\n      throw new Error('The api \\\"${apiName}\\\" requires the object \\\"utils.Underscore\\\". You must include it.')\\r\\n  iife \\r\\n    param window\\r\\n    $if requires != null && requires.indexOf('Underscore') > -1\\r\\n      param _\\r\\n    $if ns != null\\r\\n      set window.${ns} = window.${ns} || {}\\r\\n    $if apiName != null && kind == 'increment'\\r\\n      const ${apiName}\\r\\n        ||\\r\\n          @expr ${ns}.${apiName}\\r\\n          {\\r\\n    \\r\\n    $hook\\r\\n    \\r\\n    $if apiName != null\\r\\n      set window.${ns}.${apiName} = ${apiName}\\r\\n    (\\r\\n      @ window\\r\\n      $if requires != null && requires.indexOf('Underscore') > -1\\r\\n        @ utils.Underscore\\r\\n\"},\"t/param_array.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, kind|@@null, message|@@null\\r\\n  $if kind == 'required'\\r\\n    if !${name} || !_.isArray(${name})\\r\\n      throw new Error('The \\\"${name}\\\" parameter is required and must be an array. ${message}.')\\r\\n  $else\\r\\n    set ${name} =\\r\\n        || \\r\\n            + ${name}\\r\\n            []\"},\"t/param_callback.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params kind|@@null, message|@@null\\r\\n  param callback\\r\\n  $if kind == 'required'\\r\\n    if !callback\\r\\n      throw new Error('The callback parameter is required. ${message}.')\\r\\n  $else\\r\\n    set callback =\\r\\n        || \\r\\n            + callback\\r\\n            function \"},\"t/param_object.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, kind|@@null, message|@@null\\r\\n  $if kind == 'required'\\r\\n    if !${name} || !_.isObject(${name})\\r\\n      throw new Error('The \\\"${name}\\\" parameter is required and must be an object. ${message}.')\\r\\n  $else\\r\\n    set ${name} =\\r\\n        || \\r\\n            + ${name}\\r\\n            {\"},\"t/r_promise.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    return\\r\\n        new Promise\\r\\n            =>\\r\\n                param resolve\\r\\n                param reject\\r\\n                $hook\\r\\n\"},\"t/vanillajs-forms.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include css/forms/form \\r\\n\"},\"t/css/forms/form.css.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n    # ==========================================================================\\r\\n    # Form\\r\\n    # ==========================================================================\\r\\n    . form-card\\r\\n        padding 30px\\r\\n        border 1px solid #ebebeb\\r\\n    . form-title\\r\\n        font-size 30px\\r\\n        font-weight 700\\r\\n        margin-bottom 20px\\r\\n    \\r\\n    # ==========================================================================\\r\\n    # Control\\r\\n    # ==========================================================================\\r\\n    . control-group\\r\\n        width 100%\\r\\n        padding 10px\\r\\n        margin-bottom 5px\\r\\n    . single-control\\r\\n        width 100%\\r\\n        margin-bottom 5px\\r\\n    . control-label\\r\\n        font-weight bold\\r\\n        margin-bottom 7px\\r\\n        $$ text-transform uppercase\\r\\n    . control-error\\r\\n        font-size 12px\\r\\n        color red\\r\\n\\r\\n    # ==========================================================================\\r\\n    # Label\\r\\n    # ==========================================================================\\r\\n    < label.required\\r\\n        position relative\\r\\n    < label.required:after\\r\\n        content '*'\\r\\n        margin-left 2px\\r\\n        color #b90000\\r\\n    \\r\\n    # ==========================================================================\\r\\n    # GRID\\r\\n    # ==========================================================================\\r\\n    . grid-row-2\\r\\n        display grid\\r\\n        grid-template-columns 1fr 1fr\\r\\n    . grid-row-3\\r\\n        display grid\\r\\n        grid-template-columns 1fr 1fr 1fr\\r\\n    . input-group\\r\\n        position relative\\r\\n        width 100%\\r\\n        margin-bottom 1px\\r\\n        padding-bottom 4px\\r\\n    \\r\\n    # ==========================================================================\\r\\n    # BUTTON\\r\\n    # ==========================================================================\\r\\n    . btn\\r\\n        line-height 40px\\r\\n        display inline-block\\r\\n        padding 0 25px\\r\\n        cursor pointer\\r\\n        color #fff\\r\\n        font-family \\\"Roboto\\\", \\\"Arial\\\", \\\"Helvetica Neue\\\", sans-serif\\r\\n        transition all 0.4s ease\\r\\n        font-size 14px\\r\\n        font-weight 700\\r\\n    . btn--radius\\r\\n        border-radius 3px\\r\\n    . btn--green\\r\\n        background #57b846\\r\\n    . btn--green:hover\\r\\n        background #4dae3c\\r\\n    \\r\\n    # ==========================================================================\\r\\n    # Input\\r\\n    # ==========================================================================\\r\\n    < input\\r\\n        box-sizing border-box\\r\\n        border 1px solid #ebebeb\\r\\n        padding 14px 20px\\r\\n        border-radius 5px\\r\\n        font-size 14px\\r\\n        font-family inherit\\r\\n    < input:focus\\r\\n        border 1px solid #009e00\\r\\n    < input.error\\r\\n        border 1px solid #c70000\\r\\n    . input-icon\\r\\n        position absolute\\r\\n        font-size 18px\\r\\n        color #ccc\\r\\n        right 8px\\r\\n        top 50%\\r\\n        transform translateY(-50%)\\r\\n        cursor pointer\\r\\n    . input--style-2\\r\\n        color #666\\r\\n        font-size 16px\\r\\n        font-weight 500\\r\\n    . input--style-2::-webkit-input-placeholder\\r\\n        $$ /* WebKit, Blink, Edge */\\r\\n        color #808080\\r\\n        opacity .4\\r\\n    . input--style-2:-moz-placeholder\\r\\n        $$ /* Mozilla Firefox 4 to 18 */\\r\\n        color #808080\\r\\n        opacity .4\\r\\n    . input--style-2::-moz-placeholder\\r\\n        $$ /* Mozilla Firefox 19+ */\\r\\n        color #808080\\r\\n        opacity .4\\r\\n    . input--style-2:-ms-input-placeholder\\r\\n        $$ /* Internet Explorer 10-11 */\\r\\n        color #808080\\r\\n        opacity .4\\r\\n    . input--style-2:-ms-input-placeholder\\r\\n        $$ /* Microsoft Edge */\\r\\n        color #808080\\r\\n        opacity .4\\r\\n\\r\\n    # ==========================================================================\\r\\n    # Object condition\\r\\n    # ==========================================================================\\r\\n    . object-condition\\r\\n      border 1px solid #cbcbcb\\r\\n      padding 5px\\r\\n      background-color #efefef\\r\\n    . object-condition-checkbox\\r\\n      background-color #fff\\r\\n\"},\"test.css.ittf\":{\"type\":\"CODE\",\"contents\":\"css\\r\\n  $include vanillajs-forms\\r\\n\"}}"
    },
    {
      "_id": "6380f282cb26f86f4f13a439",
      "id": "6380f282cb26f86f4f13a439",
      "owner": "stfnbssl",
      "name": "vanillajs-controls",
      "description": null,
      "packiFiles": "{\"test.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\r\\n  kind es6\\r\\n  $include vanillajs-controls\"},\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        [ contexts\\n            {\\n                $$ propertyName \\\"..name..\\\"\\n                $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\"t/vanillajs-controls.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include js/select/nice-select\\r\\n  $include js/slider/zb-range-slider\\r\\n  $include js/date-picker/codepen-date-picker\"},\"t/js/date-picker/codepen-date-picker.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'CodepenDatePicker'; \\r\\n      //\\r\\n\\r\\n    # from https://codepen.io/tomuzarowski/pen/xxZOEGV\\r\\n    \\r\\n    iife_window( controls, ${myName} )\\r\\n        function triggerChange\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"HTMLEvents\\\")\\r\\n            _ event.initEvent(\\\"change\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n        class ${myName}\\r\\n            ctor \\r\\n                param inputSelector\\r\\n                set this.input = document.querySelector(inputSelector)\\r\\n                set this.form = this.input.parentElement\\r\\n                set this.popupContainer = null\\r\\n                set this.monthContainer = null\\r\\n                set this.tableContainer = null\\r\\n                set this.table = document.createElement(\\\"table\\\")\\r\\n                set this.months =\\r\\n                    [ \\r\\n                        @ 'January'\\r\\n                        @ 'February'\\r\\n                        @ 'March'\\r\\n                        @ 'April'\\r\\n                        @ 'May'\\r\\n                        @ 'June'\\r\\n                        @ 'July'\\r\\n                        @ 'August'\\r\\n                        @ 'September'\\r\\n                        @ 'October'\\r\\n                        @ 'November'\\r\\n                        @ 'December'\\r\\n                set this.selectedMonth = new Date().getMonth()\\r\\n                set this.selectedYear = new Date().getFullYear()\\r\\n                _ this.buildCalendar()\\r\\n                _ this.setMainEventListener()\\r\\n            m buildCalendar\\r\\n                set this.popupContainer = document.createElement(\\\"div\\\")\\r\\n                _ this.popupContainer.classList.add(\\\"calendar-popup\\\")\\r\\n                _ this.form.appendChild(this.popupContainer)\\r\\n                set this.monthContainer = document.createElement(\\\"div\\\")\\r\\n                _ this.monthContainer.classList.add(\\\"month-and-year\\\")\\r\\n                set this.monthContainer.innerHTML =\\r\\n                    `lit \\r\\n                        + <h4>\\r\\n                        _ this.getMonth()\\r\\n                        + &nbsp;\\r\\n                        _ this.getYear()\\r\\n                        + </h4>\\r\\n                _ this.popupContainer.appendChild(this.monthContainer)\\r\\n                _ this.createButtons()\\r\\n                _ this.populateTable(this.selectedMonth, this.selectedYear)\\r\\n            m createButtons\\r\\n                const prev = document.createElement(\\\"button\\\")\\r\\n                _ prev.classList.add('button', 'prev')\\r\\n                set prev.innerHTML = \\\"<i class='fas fa-chevron-left'></i>\\\"\\r\\n                const next = document.createElement(\\\"button\\\")\\r\\n                _ next.classList.add('button', 'next')\\r\\n                set next.innerHTML = \\\"<i class='fas fa-chevron-right'></i>\\\"\\r\\n                _ prev.addEventListener\\r\\n                    @ \\\"click\\\"\\r\\n                    => \\r\\n                        param e\\r\\n                        _ e.preventDefault()\\r\\n                        _ this.updateMonth(this.selectedMonth - 1)\\r\\n                _ next.addEventListener\\r\\n                    @ \\\"click\\\"\\r\\n                    => \\r\\n                        param e\\r\\n                        _ e.preventDefault()\\r\\n                        _ this.updateMonth(this.selectedMonth + 1)\\r\\n                _ this.popupContainer.appendChild(prev)\\r\\n                _ this.popupContainer.appendChild(next)\\r\\n            m populateTable\\r\\n                param month\\r\\n                param year\\r\\n                set this.table.innerHTML = \\\"\\\"\\r\\n                const namesRow = document.createElement(\\\"tr\\\")\\r\\n                const days\\r\\n                  [ \\r\\n                      @ \\\"Mon\\\"\\r\\n                      @ \\\"Tue\\\"\\r\\n                      @ \\\"Wed\\\"\\r\\n                      @ \\\"Thu\\\"\\r\\n                      @ \\\"Fri\\\"\\r\\n                      @ \\\"Sat\\\"\\r\\n                      @ \\\"Sun\\\"\\r\\n                _ days.forEach\\r\\n                    => \\r\\n                        param name\\r\\n                        const th = document.createElement(\\\"th\\\")\\r\\n                        set th.innerHTML = name\\r\\n                        _ namesRow.appendChild(th)\\r\\n                _ this.table.appendChild(namesRow)\\r\\n                const tempDate = new Date(year, month, 1)\\r\\n                let firstMonthDay = tempDate.getDay()\\r\\n                set firstMonthDay =\\r\\n                    iif firstMonthDay === 0\\r\\n                        then 7\\r\\n                        else tempDate.getDay()\\r\\n                const daysInMonth = this.getDaysInMonth(month, year)\\r\\n                const j = daysInMonth + firstMonthDay - 1\\r\\n                let tr = document.createElement(\\\"tr\\\")\\r\\n                if firstMonthDay - 1 !== 0\\r\\n                    set tr = document.createElement(\\\"tr\\\")\\r\\n                    _ this.table.appendChild(tr)\\r\\n                for let i = 0; i < firstMonthDay - 1; i++\\r\\n                    const td = document.createElement(\\\"td\\\")\\r\\n                    set td.innerHTML = \\\"\\\"\\r\\n                    _ tr.appendChild(td)\\r\\n                for let i = firstMonthDay - 1; i < j; i++\\r\\n                    if i % 7 === 0\\r\\n                        set tr = document.createElement(\\\"tr\\\")\\r\\n                        _ this.table.appendChild(tr)\\r\\n                    const td = document.createElement(\\\"td\\\")\\r\\n                    set td.innerText = i - firstMonthDay + 2\\r\\n                    set td.dayNr = i - firstMonthDay + 2\\r\\n                    _ td.classList.add(\\\"day\\\")\\r\\n                    _ td.addEventListener\\r\\n                        @ \\\"click\\\"\\r\\n                        => \\r\\n                            param e\\r\\n                            const selectedDay = e.target.innerHTML\\r\\n                            _ this.fillInput(selectedDay)\\r\\n                            _ this.hideCalendar()\\r\\n                    _ tr.appendChild(td)\\r\\n                _ this.popupContainer.appendChild(this.table)\\r\\n            m fillInput\\r\\n                param day\\r\\n                set day =\\r\\n                    iif day < 10\\r\\n                        then \\\"0\\\" + day\\r\\n                        else day\\r\\n                let month = null\\r\\n                set month =\\r\\n                    iif this.selectedMonth < 9\\r\\n                        then \\\"0\\\" + (this.selectedMonth + 1)\\r\\n                        else this.selectedMonth + 1\\r\\n                set this.input.value =\\r\\n                    `lit \\r\\n                        + \\r\\n                        @ day\\r\\n                        + .\\r\\n                        @ month\\r\\n                        + .\\r\\n                        @ this.selectedYear\\r\\n                        + \\r\\n                _ triggerChange                        \\r\\n                  @ this.input\\r\\n            m updateMonth\\r\\n                param month\\r\\n                set this.selectedMonth = month\\r\\n                if this.selectedMonth < 0\\r\\n                    set this.selectedYear--\\r\\n                    set this.selectedMonth = 11\\r\\n                else\\r\\n                    if this.selectedMonth > 11\\r\\n                        set this.selectedYear++\\r\\n                        set this.selectedMonth = 0\\r\\n                set this.monthContainer.innerHTML =\\r\\n                    `lit \\r\\n                        + <h4>\\r\\n                        @ this.months[this.selectedMonth]\\r\\n                        + &nbsp;\\r\\n                        @ this.selectedYear\\r\\n                        + </h4>\\r\\n                _ this.populateTable(this.selectedMonth, this.selectedYear)\\r\\n            m getMonth\\r\\n                return this.months[this.selectedMonth]\\r\\n            m getYear\\r\\n                return this.selectedYear\\r\\n            m getDaysInMonth\\r\\n                param month\\r\\n                param year\\r\\n                return new Date(year, month + 1, 0).getDate()\\r\\n            m hideCalendar\\r\\n                _ this.form.classList.remove(\\\"open\\\")\\r\\n            m setMainEventListener\\r\\n                _ this.input.addEventListener\\r\\n                    @ \\\"click\\\"\\r\\n                    => \\r\\n                        param e\\r\\n                        _ this.form.classList.toggle(\\\"open\\\")\\r\\n                        if !this.form.classList.contains(\\\"open\\\")\\r\\n                            _ this.hideCalendar()\"},\"t/js/select/nice-select.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'NiceSelect'; \\r\\n      //\\r\\n    \\r\\n    iife_window( controls, ${myName} )\\r\\n        function triggerClick\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"MouseEvents\\\")\\r\\n            _ event.initEvent(\\\"click\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n            # utility functions\\r\\n        function triggerChange\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"HTMLEvents\\\")\\r\\n            _ event.initEvent(\\\"change\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n        function triggerFocusIn\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"FocusEvent\\\")\\r\\n            _ event.initEvent(\\\"focusin\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n        function triggerFocusOut\\r\\n            param el\\r\\n            var event = document.createEvent(\\\"FocusEvent\\\")\\r\\n            _ event.initEvent(\\\"focusout\\\", true, false)\\r\\n            _ el.dispatchEvent(event)\\r\\n        function attr\\r\\n            param el\\r\\n            param key\\r\\n            return el.getAttribute(key)\\r\\n        function data\\r\\n            param el\\r\\n            param key\\r\\n            return el.getAttribute(\\\"data-\\\" + key)\\r\\n        function hasClass\\r\\n            param el\\r\\n            param className\\r\\n            if el\\r\\n                return el.classList.contains(className)\\r\\n            else\\r\\n                return false\\r\\n        function addClass\\r\\n            param el\\r\\n            param className\\r\\n            if el\\r\\n                return el.classList.add(className)\\r\\n        function removeClass\\r\\n            param el\\r\\n            param className\\r\\n            if el\\r\\n                return el.classList.remove(className)\\r\\n        var defaultOptions\\r\\n            { \\r\\n                @ data null\\r\\n                @ searchable false\\r\\n        function ${myName}\\r\\n            param element\\r\\n            param options\\r\\n            set this.el = element\\r\\n            set this.config =\\r\\n                _ Object.assign\\r\\n                    { \\r\\n                    @ defaultOptions\\r\\n                    || \\r\\n                        + options\\r\\n                        { \\r\\n            set this.data = this.config.data\\r\\n            set this.selectedOptions = []\\r\\n            set this.placeholder = attr(this.el, \\\"placeholder\\\") || this.config.placeholder || \\\"Select an option\\\"\\r\\n            set this.dropdown = null\\r\\n            set this.multiple = attr(this.el, \\\"multiple\\\")\\r\\n            set this.disabled = attr(this.el, \\\"disabled\\\")\\r\\n            _ this.create()\\r\\n        set ${myName}.prototype.create =\\r\\n            function \\r\\n                set this.el.style.display = \\\"none\\\"\\r\\n                if this.data\\r\\n                    _ this.processData(this.data)\\r\\n                else\\r\\n                    _ this.extractData()\\r\\n                _ this.renderDropdown()\\r\\n                _ this.bindEvent()\\r\\n        set ${myName}.prototype.processData =\\r\\n            function \\r\\n                param data\\r\\n                var options = []\\r\\n                _ data.forEach\\r\\n                    => \\r\\n                        param item\\r\\n                        _ options.push\\r\\n                            { \\r\\n                                @ data item\\r\\n                                { attributes\\r\\n                                    @ selected false\\r\\n                                    @ disabled false\\r\\n                                    @ optgroup item.value == 'optgroup'\\r\\n                set this.options = options\\r\\n        set ${myName}.prototype.extractData =\\r\\n            function \\r\\n                var options = this.el.querySelectorAll(\\\"option,optgroup\\\")\\r\\n                var data = []\\r\\n                var allOptions = []\\r\\n                var selectedOptions = []\\r\\n                _ options.forEach\\r\\n                    => \\r\\n                        param item\\r\\n                        if item.tagName == 'OPTGROUP'\\r\\n                            var itemData\\r\\n                                { \\r\\n                                    @ text item.label\\r\\n                                    @ value 'optgroup'\\r\\n                        else\\r\\n                            var itemData\\r\\n                                { \\r\\n                                    @ text item.innerText\\r\\n                                    @ value item.value\\r\\n                        var attributes\\r\\n                            { \\r\\n                                @ selected item.getAttribute(\\\"selected\\\") != null\\r\\n                                @ disabled item.getAttribute(\\\"disabled\\\") != null\\r\\n                                @ optgroup item.tagName == 'OPTGROUP'\\r\\n                        _ data.push(itemData)\\r\\n                        _ allOptions.push\\r\\n                            { \\r\\n                                @ data itemData\\r\\n                                @ attributes\\r\\n                set this.data = data\\r\\n                set this.options = allOptions\\r\\n                _ this.options.forEach\\r\\n                    function \\r\\n                        param item\\r\\n                        if item.attributes.selected\\r\\n                            _ selectedOptions.push(item)\\r\\n                set this.selectedOptions = selectedOptions\\r\\n        set ${myName}.prototype.renderDropdown =\\r\\n            function \\r\\n                var classes\\r\\n                    [ \\r\\n                        @ \\\"nice-select\\\"\\r\\n                        @ attr(this.el, \\\"class\\\") || \\\"\\\"\\r\\n                        iif this.disabled\\r\\n                            then \\\"disabled\\\"\\r\\n                            else \\\"\\\"\\r\\n                        iif this.multiple\\r\\n                            then \\\"has-multiple\\\"\\r\\n                            else \\\"\\\"\\r\\n                let searchHtml\\r\\n                    `lit \\r\\n                        + <div class=\\\"nice-select-search-box\\\">&lf;\\r\\n                        + <input type=\\\"text\\\" class=\\\"nice-select-search\\\" placeholder=\\\"Search...\\\"/>&lf;\\r\\n                        + </div>\\r\\n                var html\\r\\n                    `lit \\r\\n                        + <div class=\\\"\\r\\n                        _ classes.join(\\\" \\\")\\r\\n                        + \\\" tabindex=\\\"\\r\\n                        iif this.disabled\\r\\n                            then null\\r\\n                            else 0\\r\\n                        + \\\">&lf;\\r\\n                        + &nbsp; <span class=\\\"\\r\\n                        iif this.multiple\\r\\n                            then \\\"multiple-options\\\"\\r\\n                            else \\\"current\\\"\\r\\n                        + \\\"></span>&lf;\\r\\n                        + &nbsp; <div class=\\\"nice-select-dropdown\\\">&lf;\\r\\n                        + &nbsp;&nbsp;\\r\\n                        iif this.config.searchable\\r\\n                            then searchHtml\\r\\n                            else \\\"\\\"\\r\\n                        + &lf;\\r\\n                        + &nbsp; <ul class=\\\"list\\\"></ul>&lf;\\r\\n                        + &nbsp; </div></div>&lf;\\r\\n                        + \\r\\n                _ this.el.insertAdjacentHTML(\\\"afterend\\\", html)\\r\\n                set this.dropdown = this.el.nextElementSibling\\r\\n                _ this._renderSelectedItems()\\r\\n                _ this._renderItems()\\r\\n        set ${myName}.prototype._renderSelectedItems =\\r\\n            function \\r\\n                if this.multiple\\r\\n                    var selectedHtml = \\\"\\\"\\r\\n                    if window.getComputedStyle(this.dropdown).width == 'auto' || this.selectedOptions.length < 2\\r\\n                        _ this.selectedOptions.forEach\\r\\n                            function \\r\\n                                param item\\r\\n                                set selectedHtml +=\\r\\n                                    `lit \\r\\n                                        + <span class=\\\"current\\\">\\r\\n                                        @ item.data.text\\r\\n                                        + </span>\\r\\n                        set selectedHtml =\\r\\n                            iif selectedHtml == \\\"\\\"\\r\\n                                then this.placeholder\\r\\n                                else selectedHtml\\r\\n                    else\\r\\n                        set selectedHtml = this.selectedOptions.length + ' selected'\\r\\n                    set this.dropdown.querySelector(\\\".multiple-options\\\").innerHTML = selectedHtml\\r\\n                else\\r\\n                    var html\\r\\n                        iif this.selectedOptions.length > 0\\r\\n                            then this.selectedOptions[0].data.text\\r\\n                            else this.placeholder\\r\\n                    set this.dropdown.querySelector(\\\".current\\\").innerHTML = html\\r\\n        set ${myName}.prototype._renderItems =\\r\\n            function \\r\\n                var ul = this.dropdown.querySelector(\\\"ul\\\")\\r\\n                _ this.options.forEach\\r\\n                    => \\r\\n                        param item\\r\\n                        _ ul.appendChild(this._renderItem(item))\\r\\n        set ${myName}.prototype._renderItem =\\r\\n            function \\r\\n                param option\\r\\n                var el = document.createElement(\\\"li\\\")\\r\\n                set el.innerHTML = option.data.text\\r\\n                if option.attributes.optgroup\\r\\n                    _ el.classList.add('optgroup')\\r\\n                else\\r\\n                    _ el.setAttribute(\\\"data-value\\\", option.data.value)\\r\\n                    var classList\\r\\n                        [ \\r\\n                            @ \\\"option\\\"\\r\\n                            iif option.attributes.selected\\r\\n                                then \\\"selected\\\"\\r\\n                                else null\\r\\n                            iif option.attributes.disabled\\r\\n                                then \\\"disabled\\\"\\r\\n                                else null\\r\\n                    _ el.addEventListener(\\\"click\\\", this._onItemClicked.bind(this, option))\\r\\n                    _ el.classList.add(...classList)\\r\\n                set option.element = el\\r\\n                return el\\r\\n        set ${myName}.prototype.update =\\r\\n            function \\r\\n                _ this.extractData()\\r\\n                if this.dropdown\\r\\n                    var open = hasClass(this.dropdown, \\\"open\\\")\\r\\n                    _ this.dropdown.parentNode.removeChild(this.dropdown)\\r\\n                    _ this.create()\\r\\n                    if open\\r\\n                        _ triggerClick(this.dropdown)\\r\\n        set ${myName}.prototype.disable =\\r\\n            function \\r\\n                if !this.disabled\\r\\n                    set this.disabled = true\\r\\n                    _ addClass(this.dropdown, \\\"disabled\\\")\\r\\n        set ${myName}.prototype.enable =\\r\\n            function \\r\\n                if this.disabled\\r\\n                    set this.disabled = false\\r\\n                    _ removeClass(this.dropdown, \\\"disabled\\\")\\r\\n        set ${myName}.prototype.clear =\\r\\n            function \\r\\n                set this.selectedOptions = []\\r\\n                _ this._renderSelectedItems()\\r\\n                _ this.updateSelectValue()\\r\\n                _ triggerChange(this.el)\\r\\n        set ${myName}.prototype.destroy =\\r\\n            function \\r\\n                if this.dropdown\\r\\n                    _ this.dropdown.parentNode.removeChild(this.dropdown)\\r\\n                    set this.el.style.display = \\\"\\\"\\r\\n        set ${myName}.prototype.bindEvent =\\r\\n            function \\r\\n                var $this = this\\r\\n                _ this.dropdown.addEventListener(\\\"click\\\", this._onClicked.bind(this))\\r\\n                _ this.dropdown.addEventListener(\\\"keydown\\\", this._onKeyPressed.bind(this))\\r\\n                _ this.dropdown.addEventListener(\\\"focusin\\\", triggerFocusIn.bind(this, this.el))\\r\\n                _ this.dropdown.addEventListener(\\\"focusout\\\", triggerFocusOut.bind(this, this.el))\\r\\n                _ window.addEventListener(\\\"click\\\", this._onClickedOutside.bind(this))\\r\\n                if this.config.searchable\\r\\n                    _ this._bindSearchEvent()\\r\\n        set ${myName}.prototype._bindSearchEvent =\\r\\n            function \\r\\n                var searchBox = this.dropdown.querySelector(\\\".nice-select-search\\\")\\r\\n                if searchBox\\r\\n                    _ searchBox.addEventListener\\r\\n                        @ \\\"click\\\"\\r\\n                        function \\r\\n                            param e\\r\\n                            _ e.stopPropagation()\\r\\n                            return false\\r\\n                _ searchBox.addEventListener(\\\"input\\\", this._onSearchChanged.bind(this))\\r\\n        set ${myName}.prototype._onClicked =\\r\\n            function \\r\\n                param e\\r\\n                if this.multiple\\r\\n                    _ this.dropdown.classList.add(\\\"open\\\")\\r\\n                else\\r\\n                    _ this.dropdown.classList.toggle(\\\"open\\\")\\r\\n                if this.dropdown.classList.contains(\\\"open\\\")\\r\\n                    var search = this.dropdown.querySelector(\\\".nice-select-search\\\")\\r\\n                    if search\\r\\n                        set search.value = \\\"\\\"\\r\\n                        _ search.focus()\\r\\n                    var t = this.dropdown.querySelector(\\\".focus\\\")\\r\\n                    _ removeClass(t, \\\"focus\\\")\\r\\n                    set t = this.dropdown.querySelector(\\\".selected\\\")\\r\\n                    _ addClass(t, \\\"focus\\\")\\r\\n                    _ this.dropdown.querySelectorAll(\\\"ul li\\\").forEach\\r\\n                        function \\r\\n                            param item\\r\\n                            set item.style.display = \\\"\\\"\\r\\n                else\\r\\n                    _ this.dropdown.focus()\\r\\n        set ${myName}.prototype._onItemClicked =\\r\\n            function \\r\\n                param option\\r\\n                param e\\r\\n                var optionEl = e.target\\r\\n                if !hasClass(optionEl, \\\"disabled\\\")\\r\\n                    if this.multiple\\r\\n                        if hasClass(optionEl, \\\"selected\\\")\\r\\n                            _ removeClass(optionEl, \\\"selected\\\")\\r\\n                            _ this.selectedOptions.splice(this.selectedOptions.indexOf(option), 1)\\r\\n                            set this.el.querySelector('option[value=\\\"' + optionEl.dataset.value + '\\\"]').selected = false\\r\\n                        else\\r\\n                            _ addClass(optionEl, \\\"selected\\\")\\r\\n                            _ this.selectedOptions.push(option)\\r\\n                    else\\r\\n                        _ this.selectedOptions.forEach\\r\\n                            function \\r\\n                                param item\\r\\n                                _ removeClass(item.element, \\\"selected\\\")\\r\\n                        _ addClass(optionEl, \\\"selected\\\")\\r\\n                        set this.selectedOptions =\\r\\n                            [ \\r\\n                                @ option\\r\\n                    _ this._renderSelectedItems()\\r\\n                    _ this.updateSelectValue()\\r\\n        set ${myName}.prototype.updateSelectValue =\\r\\n            function \\r\\n                if this.multiple\\r\\n                    var select = this.el\\r\\n                    _ this.selectedOptions.forEach\\r\\n                        function \\r\\n                            param item\\r\\n                            var el = select.querySelector('option[value=\\\"' + item.data.value + '\\\"]')\\r\\n                            if el\\r\\n                                _ el.setAttribute(\\\"selected\\\", true)\\r\\n                else\\r\\n                    if this.selectedOptions.length > 0\\r\\n                        set this.el.value = this.selectedOptions[0].data.value\\r\\n                _ triggerChange(this.el)\\r\\n        set ${myName}.prototype._onClickedOutside =\\r\\n            function \\r\\n                param e\\r\\n                if !this.dropdown.contains(e.target)\\r\\n                    _ this.dropdown.classList.remove(\\\"open\\\")\\r\\n        set ${myName}.prototype._onKeyPressed =\\r\\n            function \\r\\n                param e\\r\\n                var focusedOption = this.dropdown.querySelector(\\\".focus\\\")\\r\\n                    # Keyboard events\\r\\n                var open = this.dropdown.classList.contains(\\\"open\\\")\\r\\n                    # Space or Enter\\r\\n                if e.keyCode == 32 || e.keyCode == 13\\r\\n                    if open\\r\\n                        _ triggerClick(focusedOption)\\r\\n                    else\\r\\n                        _ triggerClick(this.dropdown)\\r\\n                else\\r\\n                    if e.keyCode == 40\\r\\n                        if !open\\r\\n                            _ triggerClick(this.dropdown)\\r\\n                        else\\r\\n                            var next = this._findNext(focusedOption)\\r\\n                            if next\\r\\n                                var t = this.dropdown.querySelector(\\\".focus\\\")\\r\\n                                _ removeClass(t, \\\"focus\\\")\\r\\n                                _ addClass(next, \\\"focus\\\")\\r\\n                        _ e.preventDefault()\\r\\n                    else\\r\\n                        if e.keyCode == 38\\r\\n                            if !open\\r\\n                                _ triggerClick(this.dropdown)\\r\\n                            else\\r\\n                                var prev = this._findPrev(focusedOption)\\r\\n                                if prev\\r\\n                                    var t = this.dropdown.querySelector(\\\".focus\\\")\\r\\n                                    _ removeClass(t, \\\"focus\\\")\\r\\n                                    _ addClass(prev, \\\"focus\\\")\\r\\n                            _ e.preventDefault()\\r\\n                        else\\r\\n                            if e.keyCode == 27 && open\\r\\n                                _ triggerClick(this.dropdown)\\r\\n                return false\\r\\n        set ${myName}.prototype._findNext =\\r\\n            function \\r\\n                param el\\r\\n                if el\\r\\n                    set el = el.nextElementSibling\\r\\n                else\\r\\n                    set el = this.dropdown.querySelector(\\\".list .option\\\")\\r\\n                while el\\r\\n                    if !hasClass(el, \\\"disabled\\\") && el.style.display != \\\"none\\\"\\r\\n                        return el\\r\\n                    set el = el.nextElementSibling\\r\\n                return null\\r\\n        set ${myName}.prototype._findPrev =\\r\\n            function \\r\\n                param el\\r\\n                if el\\r\\n                    set el = el.previousElementSibling\\r\\n                else\\r\\n                    set el = this.dropdown.querySelector(\\\".list .option:last-child\\\")\\r\\n                while el\\r\\n                    if !hasClass(el, \\\"disabled\\\") && el.style.display != \\\"none\\\"\\r\\n                        return el\\r\\n                    set el = el.previousElementSibling\\r\\n                return null\\r\\n        set ${myName}.prototype._onSearchChanged =\\r\\n            function \\r\\n                param e\\r\\n                var open = this.dropdown.classList.contains(\\\"open\\\")\\r\\n                var text = e.target.value\\r\\n                set text = text.toLowerCase()\\r\\n                if text == \\\"\\\"\\r\\n                    _ this.options.forEach\\r\\n                        function \\r\\n                            param item\\r\\n                            set item.element.style.display = \\\"\\\"\\r\\n                else\\r\\n                    if open\\r\\n                        var matchReg = new RegExp(text)\\r\\n                        _ this.options.forEach\\r\\n                            function \\r\\n                                param item\\r\\n                                var optionText = item.data.text.toLowerCase()\\r\\n                                var matched = matchReg.test(optionText)\\r\\n                                set item.element.style.display =\\r\\n                                    iif matched\\r\\n                                        then \\\"\\\"\\r\\n                                        else \\\"none\\\"\\r\\n                _ this.dropdown.querySelectorAll(\\\".focus\\\").forEach\\r\\n                    function \\r\\n                        param item\\r\\n                        _ removeClass(item, \\\"focus\\\")\\r\\n                var firstEl = this._findNext(null)\\r\\n                _ addClass(firstEl, \\\"focus\\\")\\r\\n        set ${myName}.bind\\r\\n            function\\r\\n                param el\\r\\n                param options\\r\\n                return new ${myName}(el, options)\"},\"t/js/slider/zb-range-slider.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'RangeSlider'; \\r\\n      //\\r\\n\\r\\n    # from https://codepen.io/zebresel/pen/xGLYOM\\r\\n    \\r\\n    iife_window( controls, ${myName} )\\r\\n\\r\\n        const ${myName}\\r\\n            function \\r\\n                param id\\r\\n                var self = this\\r\\n                var \\r\\n                    decl startX = 0\\r\\n                    decl x = 0\\r\\n                    # retrieve touch button\\r\\n                var slider = document.getElementById(id)\\r\\n                    # retrieve touch button\\r\\n                var touchLeft = slider.querySelector('.slider-touch-left')\\r\\n                var touchRight = slider.querySelector('.slider-touch-right')\\r\\n                var lineSpan = slider.querySelector('.slider-line span')\\r\\n                    # get some properties\\r\\n                var min = parseFloat(slider.getAttribute('se-min'))\\r\\n                    # get some properties\\r\\n                var max = parseFloat(slider.getAttribute('se-max'))\\r\\n                    # retrieve default values\\r\\n                var defaultMinValue = min\\r\\n                    # retrieve default values\\r\\n                if slider.hasAttribute('se-min-value')\\r\\n                    set defaultMinValue = parseFloat(slider.getAttribute('se-min-value'))\\r\\n                var defaultMaxValue = max\\r\\n                if slider.hasAttribute('se-max-value')\\r\\n                    set defaultMaxValue = parseFloat(slider.getAttribute('se-max-value'))\\r\\n                if defaultMinValue < min\\r\\n                    set defaultMinValue = min\\r\\n                if defaultMaxValue > max\\r\\n                    set defaultMaxValue = max\\r\\n                if defaultMinValue > defaultMaxValue\\r\\n                    set defaultMinValue = defaultMaxValue\\r\\n                var step = 0\\r\\n                if slider.getAttribute('se-step')\\r\\n                    set step = Math.abs(parseFloat(slider.getAttribute('se-step')))\\r\\n                var normalizeFact = 26\\r\\n                    # normalize flag\\r\\n                set self.slider = slider\\r\\n                set self.reset =\\r\\n                    function \\r\\n                        set touchLeft.style.left = '0px'\\r\\n                        set touchRight.style.left = (slider.offsetWidth - touchLeft.offsetWidth) + 'px'\\r\\n                        set lineSpan.style.marginLeft = '0px'\\r\\n                        set lineSpan.style.width = (slider.offsetWidth - touchLeft.offsetWidth) + 'px'\\r\\n                        set startX = 0\\r\\n                        set x = 0\\r\\n                set self.setMinValue =\\r\\n                    function \\r\\n                        param minValue\\r\\n                        var ratio = ((minValue - min) / (max - min))\\r\\n                        set touchLeft.style.left = Math.ceil(ratio * (slider.offsetWidth - (touchLeft.offsetWidth + normalizeFact))) + 'px'\\r\\n                        set lineSpan.style.marginLeft = touchLeft.offsetLeft + 'px'\\r\\n                        set lineSpan.style.width = (touchRight.offsetLeft - touchLeft.offsetLeft) + 'px'\\r\\n                        _ slider.setAttribute('se-min-value', minValue)\\r\\n                set self.setMaxValue =\\r\\n                    function \\r\\n                        param maxValue\\r\\n                        var ratio = ((maxValue - min) / (max - min))\\r\\n                        set touchRight.style.left = Math.ceil(ratio * (slider.offsetWidth - (touchLeft.offsetWidth + normalizeFact)) + normalizeFact) + 'px'\\r\\n                        set lineSpan.style.marginLeft = touchLeft.offsetLeft + 'px'\\r\\n                        set lineSpan.style.width = (touchRight.offsetLeft - touchLeft.offsetLeft) + 'px'\\r\\n                        _ slider.setAttribute('se-max-value', maxValue)\\r\\n                    # initial reset\\r\\n                _ self.reset()\\r\\n                    # initial reset\\r\\n                    # usefull values, min, max, normalize fact is the width of both touch buttons\\r\\n                var maxX = slider.offsetWidth - touchRight.offsetWidth\\r\\n                    # usefull values, min, max, normalize fact is the width of both touch buttons\\r\\n                var selectedTouch = null\\r\\n                var initialValue = (lineSpan.offsetWidth - normalizeFact)\\r\\n                    # set defualt values\\r\\n                _ self.setMinValue(defaultMinValue)\\r\\n                    # set defualt values\\r\\n                _ self.setMaxValue(defaultMaxValue)\\r\\n                    # setup touch/click events\\r\\n                function onStart\\r\\n                    param event\\r\\n                    _ event.preventDefault()\\r\\n                        # Prevent default dragging of selected content\\r\\n                    var eventTouch = event\\r\\n                    if event.touches\\r\\n                        set eventTouch = event.touches[0]\\r\\n                    if this === touchLeft\\r\\n                        set x = touchLeft.offsetLeft\\r\\n                    else\\r\\n                        set x = touchRight.offsetLeft\\r\\n                    set startX = eventTouch.pageX - x\\r\\n                    set selectedTouch = this\\r\\n                    _ document.addEventListener('mousemove', onMove)\\r\\n                    _ document.addEventListener('mouseup', onStop)\\r\\n                    _ document.addEventListener('touchmove', onMove)\\r\\n                    _ document.addEventListener('touchend', onStop)\\r\\n                    # setup touch/click events\\r\\n                function onMove\\r\\n                    param event\\r\\n                    var eventTouch = event\\r\\n                    if event.touches\\r\\n                        set eventTouch = event.touches[0]\\r\\n                    set x = eventTouch.pageX - startX\\r\\n                    if selectedTouch === touchLeft\\r\\n                        if x > (touchRight.offsetLeft - selectedTouch.offsetWidth + 10)\\r\\n                            set x = (touchRight.offsetLeft - selectedTouch.offsetWidth + 10)\\r\\n                        else\\r\\n                            if x < 0\\r\\n                                set x = 0\\r\\n                        set selectedTouch.style.left = x + 'px'\\r\\n                    else\\r\\n                        if selectedTouch === touchRight\\r\\n                            if x < (touchLeft.offsetLeft + touchLeft.offsetWidth - 10)\\r\\n                                set x = (touchLeft.offsetLeft + touchLeft.offsetWidth - 10)\\r\\n                            else\\r\\n                                if x > maxX\\r\\n                                    set x = maxX\\r\\n                            set selectedTouch.style.left = x + 'px'\\r\\n                    set lineSpan.style.marginLeft = touchLeft.offsetLeft + 'px'\\r\\n                        # update line span\\r\\n                    set lineSpan.style.width = (touchRight.offsetLeft - touchLeft.offsetLeft) + 'px'\\r\\n                        # write new value\\r\\n                    _ calculateValue()\\r\\n                        # write new value\\r\\n                        # call on change\\r\\n                    if slider.getAttribute('on-change')\\r\\n                        var fn = new Function('min, max', slider.getAttribute('on-change'))\\r\\n                        _ fn(slider.getAttribute('se-min-value'), slider.getAttribute('se-max-value'))\\r\\n                    if self.onChange\\r\\n                        _ self.onChange(slider.getAttribute('se-min-value'), slider.getAttribute('se-max-value'))\\r\\n                function onStop\\r\\n                    param event\\r\\n                    _ document.removeEventListener('mousemove', onMove)\\r\\n                    _ document.removeEventListener('mouseup', onStop)\\r\\n                    _ document.removeEventListener('touchmove', onMove)\\r\\n                    _ document.removeEventListener('touchend', onStop)\\r\\n                    set selectedTouch = null\\r\\n                        # write new value\\r\\n                    _ calculateValue()\\r\\n                        # write new value\\r\\n                        # call did changed\\r\\n                    if slider.getAttribute('did-changed')\\r\\n                        var fn = new Function('min, max', slider.getAttribute('did-changed'))\\r\\n                        _ fn(slider.getAttribute('se-min-value'), slider.getAttribute('se-max-value'))\\r\\n                    if self.didChanged\\r\\n                        _ self.didChanged(slider.getAttribute('se-min-value'), slider.getAttribute('se-max-value'))\\r\\n                function calculateValue\\r\\n                    var newValue = (lineSpan.offsetWidth - normalizeFact) / initialValue\\r\\n                    var minValue = lineSpan.offsetLeft / initialValue\\r\\n                    var maxValue = minValue + newValue\\r\\n                    var minValue = minValue * (max - min) + min\\r\\n                    var maxValue = maxValue * (max - min) + min\\r\\n                    _ console.log(step)\\r\\n                    if step !== 0\\r\\n                        var multi = Math.floor((minValue / step))\\r\\n                        set minValue = step * multi\\r\\n                        set multi = Math.floor((maxValue / step))\\r\\n                        set maxValue = step * multi\\r\\n                    _ slider.setAttribute('se-min-value', minValue)\\r\\n                    _ slider.setAttribute('se-max-value', maxValue)\\r\\n                    # link events\\r\\n                _ touchLeft.addEventListener('mousedown', onStart)\\r\\n                    # link events\\r\\n                _ touchRight.addEventListener('mousedown', onStart)\\r\\n                _ touchLeft.addEventListener('touchstart', onStart)\\r\\n                _ touchRight.addEventListener('touchstart', onStart)\\r\\n\"},\"toIttf/file.css\":{\"type\":\"CODE\",\"contents\":\".alpha {\\r\\n    padding: 10px;\\r\\n}\"},\"toIttf/file.html\":{\"type\":\"CODE\",\"contents\":\"<div class=\\\"form-container\\\">\\r\\n   <form>\\r\\n      <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Pick a date\\\" class=\\\"date-input\\\">\\r\\n   </form>\\r\\n</div>\"},\"toIttf/file.js\":{\"type\":\"CODE\",\"contents\":\"export default function restArguments(func, startIndex) {\\r\\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\\r\\n  return function() {\\r\\n    var length = Math.max(arguments.length - startIndex, 0),\\r\\n        rest = Array(length),\\r\\n        index = 0;\\r\\n    for (; index < length; index++) {\\r\\n      rest[index] = arguments[index + startIndex];\\r\\n    }\\r\\n    switch (startIndex) {\\r\\n      case 0: return func.call(this, rest);\\r\\n      case 1: return func.call(this, arguments[0], rest);\\r\\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\\r\\n    }\\r\\n    var args = Array(startIndex + 1);\\r\\n    for (index = 0; index < startIndex; index++) {\\r\\n      args[index] = arguments[index];\\r\\n    }\\r\\n    args[startIndex] = rest;\\r\\n    return func.apply(this, args);\\r\\n  };\\r\\n}\"},\"t/catch_reject.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params method\\r\\n    ._ catch\\r\\n        =>\\r\\n            param err\\r\\n            if typeof err === 'object' && err !== null\\r\\n                $hook\\r\\n            error '${method}.error', err\\r\\n            return reject(err)\\r\\n\"},\"t/r_promise.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    return\\r\\n        new Promise\\r\\n            =>\\r\\n                param resolve\\r\\n                param reject\\r\\n                $hook\\r\\n\"},\"t/param_object.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, kind|@@null, message|@@null\\r\\n  $if kind == 'required'\\r\\n    if !${name} || !_.isObject(${name})\\r\\n      throw new Error('The \\\"${name}\\\" parameter is required and must be an object. ${message}.')\\r\\n  $else\\r\\n    set ${name} =\\r\\n        || \\r\\n            + ${name}\\r\\n            {\"},\"t/param_callback.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params kind|@@null, message|@@null\\r\\n  param callback\\r\\n  $if kind == 'required'\\r\\n    if !callback\\r\\n      throw new Error('The callback parameter is required. ${message}.')\\r\\n  $else\\r\\n    set callback =\\r\\n        || \\r\\n            + callback\\r\\n            function \"},\"t/param_array.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, kind|@@null, message|@@null\\r\\n  $if kind == 'required'\\r\\n    if !${name} || !_.isArray(${name})\\r\\n      throw new Error('The \\\"${name}\\\" parameter is required and must be an array. ${message}.')\\r\\n  $else\\r\\n    set ${name} =\\r\\n        || \\r\\n            + ${name}\\r\\n            []\"},\"t/iife_window.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params ns|@@null, apiName|@@null, kind|@@null, requires|@@null\\r\\n  \\r\\n  $if requires != null && requires.indexOf('Underscore') > -1\\r\\n    if !window.utils || !window.utils.Underscore \\r\\n      throw new Error('The api \\\"${apiName}\\\" requires the object \\\"utils.Underscore\\\". You must include it.')\\r\\n  iife \\r\\n    param window\\r\\n    $if requires != null && requires.indexOf('Underscore') > -1\\r\\n      param _\\r\\n    $if ns != null\\r\\n      set window.${ns} = window.${ns} || {}\\r\\n    $if apiName != null && kind == 'increment'\\r\\n      const ${apiName}\\r\\n        ||\\r\\n          @expr ${ns}.${apiName}\\r\\n          {\\r\\n    \\r\\n    $hook\\r\\n    \\r\\n    $if apiName != null\\r\\n      set window.${ns}.${apiName} = ${apiName}\\r\\n    (\\r\\n      @ window\\r\\n      $if requires != null && requires.indexOf('Underscore') > -1\\r\\n        @ utils.Underscore\\r\\n\"}}"
    },
    {
      "_id": "6380fa698875e6fb8ca6e6a4",
      "id": "6380fa698875e6fb8ca6e6a4",
      "owner": "stfnbssl",
      "name": "vanillajs-core",
      "description": null,
      "packiFiles": "{\"test.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\r\\n  kind es6\\r\\n  $include vanillajs-core\\r\\n  $include vanillajs-utils\"},\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        [ contexts\\n            {\\n                $$ propertyName \\\"..name..\\\"\\n                $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\"t/catch_reject.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params method\\r\\n    ._ catch\\r\\n        =>\\r\\n            param err\\r\\n            if typeof err === 'object' && err !== null\\r\\n                $hook\\r\\n            error '${method}.error', err\\r\\n            return reject(err)\\r\\n\"},\"t/iife_window.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params ns|@@null, apiName|@@null, kind|@@null, requires|@@null\\r\\n  \\r\\n  $if requires != null && requires.indexOf('Underscore') > -1\\r\\n    if !window.utils || !window.utils.Underscore \\r\\n      throw new Error('The api \\\"${apiName}\\\" requires the object \\\"utils.Underscore\\\". You must include it.')\\r\\n  iife \\r\\n    param window\\r\\n    $if requires != null && requires.indexOf('Underscore') > -1\\r\\n      param _\\r\\n    $if ns != null\\r\\n      set window.${ns} = window.${ns} || {}\\r\\n    $if apiName != null && kind == 'increment'\\r\\n      const ${apiName}\\r\\n        ||\\r\\n          @expr ${ns}.${apiName}\\r\\n          {\\r\\n    \\r\\n    $hook\\r\\n    \\r\\n    $if apiName != null\\r\\n      set window.${ns}.${apiName} = ${apiName}\\r\\n    (\\r\\n      @ window\\r\\n      $if requires != null && requires.indexOf('Underscore') > -1\\r\\n        @ utils.Underscore\\r\\n\"},\"t/param_array.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, kind|@@null, message|@@null\\r\\n  $if kind == 'required'\\r\\n    if !${name} || !_.isArray(${name})\\r\\n      throw new Error('The \\\"${name}\\\" parameter is required and must be an array. ${message}.')\\r\\n  $else\\r\\n    set ${name} =\\r\\n        || \\r\\n            + ${name}\\r\\n            []\"},\"t/param_callback.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params kind|@@null, message|@@null\\r\\n  param callback\\r\\n  $if kind == 'required'\\r\\n    if !callback\\r\\n      throw new Error('The callback parameter is required. ${message}.')\\r\\n  $else\\r\\n    set callback =\\r\\n        || \\r\\n            + callback\\r\\n            function \"},\"t/param_object.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $params name, kind|@@null, message|@@null\\r\\n  $if kind == 'required'\\r\\n    if !${name} || !_.isObject(${name})\\r\\n      throw new Error('The \\\"${name}\\\" parameter is required and must be an object. ${message}.')\\r\\n  $else\\r\\n    set ${name} =\\r\\n        || \\r\\n            + ${name}\\r\\n            {\"},\"t/vanillajs-core.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include js/core/helpers\\r\\n\"},\"t/r_promise.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    return\\r\\n        new Promise\\r\\n            =>\\r\\n                param resolve\\r\\n                param reject\\r\\n                $hook\\r\\n\"},\"t/vanillajs-utils.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n  $include js/utils/underscore\\r\\n  $include js/utils/cache\\r\\n\"},\"t/js/core/helpers.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    iife_window() \\r\\n        set window.qs =\\r\\n            function \\r\\n                param selector\\r\\n                param scope\\r\\n                return (scope || document).querySelector(selector)\\r\\n            # Get element(s) by CSS selector:\\r\\n        set window.qsa =\\r\\n            function \\r\\n                param selector\\r\\n                param scope\\r\\n                return (scope || document).querySelectorAll(selector)\\r\\n            # addEventListener wrapper:\\r\\n        set window.$on =\\r\\n            function \\r\\n                param target\\r\\n                param type\\r\\n                param callback\\r\\n                param useCapture\\r\\n                _ target.addEventListener(type, callback, !!useCapture)\\r\\n            # addEventListener wrapper:\\r\\n            # Attach a handler to event for all elements that match the selector,\\r\\n            # now or in the future, based on a root element\\r\\n        set window.$delegate =\\r\\n            function \\r\\n                param target\\r\\n                param selector\\r\\n                param type\\r\\n                param handler\\r\\n                function dispatchEvent\\r\\n                    param event\\r\\n                    var targetElement = event.target\\r\\n                    var potentialElements = window.qsa(selector, target)\\r\\n                    var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0\\r\\n                    if hasMatch\\r\\n                        _ handler.call(targetElement, event)\\r\\n                    # https://developer.mozilla.org/en-US/docs/Web/Events/blur\\r\\n                var useCapture = type === 'blur' || type === 'focus'\\r\\n                    # https://developer.mozilla.org/en-US/docs/Web/Events/blur\\r\\n                _ window.$on(target, type, dispatchEvent, useCapture)\\r\\n            # Attach a handler to event for all elements that match the selector,\\r\\n            # now or in the future, based on a root element\\r\\n            # Find the element's parent with the given tag name:\\r\\n            # $parent(qs('a'), 'div');\\r\\n        set window.$parent =\\r\\n            function \\r\\n                param element\\r\\n                param tagName\\r\\n                if !element.parentNode\\r\\n                    return \\r\\n                if element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()\\r\\n                    return element.parentNode\\r\\n                return window.$parent(element.parentNode, tagName)\\r\\n            # Find the element's parent with the given tag name:\\r\\n            # $parent(qs('a'), 'div');\\r\\n            # Allow for looping on nodes by chaining:\\r\\n            # qsa('.foo').forEach(function () {})\\r\\n        set NodeList.prototype.forEach = Array.prototype.forEach\\r\\n            # Allow for looping on nodes by chaining:\\r\\n            # qsa('.foo').forEach(function () {})\\r\\n        #\\r\\n            # global NodeList\\r\\n\"},\"t/js/utils/cache.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'Cache';\\r\\n      //\\r\\n    \\r\\n    iife_window( utils, ${myName})\\r\\n        function ${myName}\\r\\n          param name\\r\\n          set this.name = name\\r\\n          set this.cache = {}\\r\\n        set ${myName}.prototype.set\\r\\n            function \\r\\n                param key\\r\\n                param value\\r\\n                set this.cache[key] = value\\r\\n        set ${myName}.prototype.get\\r\\n            function \\r\\n                param key\\r\\n                param value\\r\\n                return this.cache[key]\\r\\n        set ${myName}.prototype.memoize\\r\\n            function \\r\\n                param fn\\r\\n                var self = this\\r\\n                return \\r\\n                    function \\r\\n                        var keyparts = []\\r\\n                        foreach arg in arguments\\r\\n                            _ keyparts.push\\r\\n                                @ arg ? arg.toString() : ''\\r\\n                        var key = keyparts.join('_')\\r\\n                        if !(key in self.cache)\\r\\n                            _ self.set\\r\\n                              @ key\\r\\n                              _ fn.apply(this, arguments)\\r\\n                            log 'key ', key, 'retrieved by function and set in cache', self.name\\r\\n                        else\\r\\n                            log 'key ', key, 'returned from cache', self.name\\r\\n                        return\\r\\n                            _ self.get(key)\\r\\n        set ${myName}.prototype.memoizePromise\\r\\n            function \\r\\n                param fnName\\r\\n                param fn\\r\\n                var self = this\\r\\n                return \\r\\n                    function \\r\\n                        r_promise()\\r\\n                          var keyparts = [fnName]\\r\\n                          foreach arg in arguments\\r\\n                              _ keyparts.push\\r\\n                                  @ arg ? arg.toString() : ''\\r\\n                          var key = keyparts.join('_')\\r\\n                          if !(key in self.cache)\\r\\n                              _ fn.apply\\r\\n                                  @ this\\r\\n                                  @ arguments\\r\\n                                  ._ then\\r\\n                                      =>\\r\\n                                          param result\\r\\n                                          _ self.set\\r\\n                                              @ key\\r\\n                                              @ result\\r\\n                                          log 'key ', key, 'retrieved by function and set in cache', self.name\\r\\n                                          return\\r\\n                                              _ resolve\\r\\n                                                  @ result\\r\\n                                  ._ catch\\r\\n                                      =>\\r\\n                                          param err\\r\\n                                          return\\r\\n                                              _ reject\\r\\n                                                  @ err\\r\\n                          else\\r\\n                              log 'key ', key, 'returned from cache', self.name\\r\\n                              return\\r\\n                                  _ resolve\\r\\n                                      _ self.get(key)\"},\"t/js/utils/underscore.js.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $\\r\\n      var myName = 'Underscore';\\r\\n      //\\r\\n    \\r\\n    iife_window( utils, ${myName})\\r\\n        \\r\\n        const ${myName}\\r\\n          {\\r\\n            @ isArray\\r\\n                function\\r\\n                    param val\\r\\n                    return Array.isArray ? Array.isArray(val) : toString.call(val) === '[object Array]'\\r\\n            @ isObject\\r\\n                function\\r\\n                    param val\\r\\n                    return val != null && typeof val === 'object' && Array.isArray(val) === false;\\r\\n            @ makeString\\r\\n                function\\r\\n                    param object\\r\\n                    if object == null \\r\\n                      return ''\\r\\n                    return '' + object;    \\r\\n                # https://github.com/esamattis/underscore.string/blob/master/helper/makeString.js        \\r\\n            \\r\\n            @ capitalize\\r\\n                function\\r\\n                    param str\\r\\n                    param lowercaseRest\\r\\n                    set str = ${myName}.makeString(str)\\r\\n                    var remainingChars = !lowercaseRest ? str.slice(1) : str.slice(1).toLowerCase()\\r\\n                    return str.charAt(0).toUpperCase() + remainingChars  \\r\\n                # https://github.com/esamattis/underscore.string/blob/master/helper/capitalize.js        \\r\\n            @ debounce\\r\\n                function\\r\\n                    param func\\r\\n                    param wait\\r\\n                    param immediate\\r\\n                    var \\r\\n                        decl timeout\\r\\n                        decl previous\\r\\n                        decl args\\r\\n                        decl result\\r\\n                        decl context\\r\\n                    var later\\r\\n                        function \\r\\n                            var passed = ${myName}.now() - previous\\r\\n                            if wait > passed\\r\\n                                set timeout = setTimeout(later, wait - passed)\\r\\n                            else\\r\\n                                set timeout = null\\r\\n                                if !immediate\\r\\n                                    set result = func.apply(context, args)\\r\\n                                if !timeout\\r\\n                                    set context = null\\r\\n                    var debounced\\r\\n                        _ ${myName}.restArguments\\r\\n                            function \\r\\n                                param _args\\r\\n                                set context = this\\r\\n                                set args = _args\\r\\n                                set previous = ${myName}.now()\\r\\n                                if !timeout\\r\\n                                    set timeout = setTimeout(later, wait)\\r\\n                                    if immediate\\r\\n                                        set result = func.apply(context, args)\\r\\n                                return result\\r\\n                    set debounced.cancel =\\r\\n                        function \\r\\n                            _ clearTimeout(timeout)\\r\\n                            set context = null\\r\\n                    return debounced\\r\\n                # https://underscorejs.org/docs/modules/debounce.html\\r\\n            @ now \\r\\n                || \\r\\n                    + Date.now\\r\\n                    function \\r\\n                        return new Date().getTime()\\r\\n            @ restArguments\\r\\n                function\\r\\n                    param func\\r\\n                    param startIndex\\r\\n                    set startIndex \\r\\n                        iif startIndex == null\\r\\n                            then func.length - 1\\r\\n                            else +startIndex\\r\\n                    return \\r\\n                        function \\r\\n                            var \\r\\n                                decl length = Math.max(arguments.length - startIndex, 0)\\r\\n                                decl rest = Array(length)\\r\\n                                decl index = 0\\r\\n                            for ; index < length; index++\\r\\n                                set rest[index] = arguments[index + startIndex]\\r\\n                            switch startIndex\\r\\n                                case 0\\r\\n                                    return func.call(this, rest)\\r\\n                                case 1\\r\\n                                    return func.call(this, arguments[0], rest)\\r\\n                                case 2\\r\\n                                    return func.call(this, arguments[0], arguments[1], rest)\\r\\n                            var args = Array(startIndex + 1)\\r\\n                            for ; index < startIndex; index++\\r\\n                                set args[index] = arguments[index]\\r\\n                            set args[startIndex] = rest\\r\\n                            return func.apply(this, args)\"},\"toIttf/file.css\":{\"type\":\"CODE\",\"contents\":\".alpha {\\r\\n    padding: 10px;\\r\\n}\"},\"toIttf/file.html\":{\"type\":\"CODE\",\"contents\":\"<div class=\\\"form-container\\\">\\r\\n   <form>\\r\\n      <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Pick a date\\\" class=\\\"date-input\\\">\\r\\n   </form>\\r\\n</div>\"},\"toIttf/file.js\":{\"type\":\"CODE\",\"contents\":\"export default function restArguments(func, startIndex) {\\r\\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\\r\\n  return function() {\\r\\n    var length = Math.max(arguments.length - startIndex, 0),\\r\\n        rest = Array(length),\\r\\n        index = 0;\\r\\n    for (; index < length; index++) {\\r\\n      rest[index] = arguments[index + startIndex];\\r\\n    }\\r\\n    switch (startIndex) {\\r\\n      case 0: return func.call(this, rest);\\r\\n      case 1: return func.call(this, arguments[0], rest);\\r\\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\\r\\n    }\\r\\n    var args = Array(startIndex + 1);\\r\\n    for (index = 0; index < startIndex; index++) {\\r\\n      args[index] = arguments[index];\\r\\n    }\\r\\n    args[startIndex] = rest;\\r\\n    return func.apply(this, args);\\r\\n  };\\r\\n}\"}}"
    },
    {
      "_id": "638609835ef0151b542aad14",
      "id": "638609835ef0151b542aad14",
      "owner": "stfnbssl",
      "name": "meta-vanillas",
      "packiFiles": "{}"
    },
    {
      "_id": "638609a443c8d8bd4db7b7de",
      "id": "638609a443c8d8bd4db7b7de",
      "owner": "stfnbssl",
      "name": "meta-vanillajs",
      "packiFiles": "{\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        [ contexts\\n            {\\n                $$ propertyName \\\"..name..\\\"\\n                $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\"t/assert_not_null.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n  ${$2}params name, message, parameter|@@null\\r\\n  if !${$2}{name}\\r\\n    throw new Error('The value of \\\"${$2}{name}\\\" cannot be null. \\r\\n      \\\\b ${$2}{parameter != null ? 'Check parameter \\\"' + parameter + '\\\": \\\\' + ' + parameter + \\\" + '.\\\" : ''} ${$2}{message}.')\\r\\n\\r\\n\"},\"t/catch_throw.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n    ${$2}params method, extend|@@null\\r\\n    ._ catch\\r\\n        =>\\r\\n            param err\\r\\n            ${$2}if extend != null\\r\\n              if typeof err === 'object' && err !== null\\r\\n                  ${$2}hook\\r\\n            _ alert('${$2}{method}.error\\\\n' + err)\\r\\n            throw new Error(err)\"},\"t/iife_window.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n  ${$2}params ns|@@null, obj|@@null\\r\\n  \\r\\n  iife \\r\\n    param window\\r\\n    param _\\r\\n    ${$2}if ns != null\\r\\n      set window.${$2}{ns} = window.${$2}{ns} || {}\\r\\n    ${$2}hook\\r\\n    ${$2}if obj != null\\r\\n      set window.${$2}{ns}.${$2}{obj} = ${$2}{obj}\\r\\n    (\\r\\n      @ window\\r\\n      @ utils.Underscore\\r\\n\"},\"t/a_then_catch_throw.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n    ${$2}params result|notUsed, message|@@null\\r\\n    ._ then\\r\\n        =>\\r\\n            param ${$2}{result}\\r\\n            ${$2}hook\\r\\n    catch_throw${$p2} ${$2}{message} )\\r\\n\"},\"t/param_callback.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n  ${$2}params kind|@@null, message|@@null\\r\\n  param callback\\r\\n  ${$2}if kind == 'required'\\r\\n    if !callback\\r\\n      throw new Error('The callback parameter is required. ${$2}{message}.')\\r\\n  ${$2}else\\r\\n    set callback =\\r\\n        || \\r\\n            + callback\\r\\n            function \"},\"t/param_options_callback.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n  ${$2}params message\\r\\n  param options\\r\\n  param callback\\r\\n  if !callback\\r\\n    set callback = options\\r\\n    set options = {}\\r\\n  if !callback\\r\\n    throw new Error('The callback parameter is required. ${$2}{message}.')\"},\"t/vanillajs/css/base.css.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    < ul\\r\\n        padding 0\\r\\n    < li\\r\\n      list-style-type none\\r\\n    < a\\r\\n        outline none\\r\\n        text-decoration none\\r\\n        padding 2px 1px 0\\r\\n        cursor pointer\\r\\n    < a:link\\r\\n        color #265301\\r\\n    < a:visited\\r\\n        color #437a16\\r\\n    < a:focus\\r\\n        border-bottom 1px solid\\r\\n        background #bae498\\r\\n    < a:hover\\r\\n        border-bottom 1px solid\\r\\n        background #eefeee\\r\\n    < a:active\\r\\n        background #265301\\r\\n        color #cdfeaa     \\r\\n    < hr\\r\\n        margin 20px 0\\r\\n        border 0\\r\\n        border-top 1px dashed #c5c5c5\\r\\n        border-bottom 1px dashed #f7f7f7\\r\\n    . learn a\\r\\n        font-weight normal\\r\\n        text-decoration none\\r\\n        color #b83f45\\r\\n    . learn a:hover\\r\\n        text-decoration underline\\r\\n        color #787e7e\\r\\n    . learn h3\\r\\n        + .learn h4\\r\\n        + .learn h5\\r\\n        margin 10px 0\\r\\n        font-weight 500\\r\\n        line-height 1.2\\r\\n        color #000\\r\\n    . learn h3\\r\\n        font-size 24px\\r\\n    . learn h4\\r\\n        font-size 18px\\r\\n    . learn h5\\r\\n        margin-bottom 0\\r\\n        font-size 14px\\r\\n    . learn ul\\r\\n        padding 0\\r\\n        margin 0 0 30px 25px\\r\\n    . learn li\\r\\n        line-height 20px\\r\\n    . learn p\\r\\n        font-size 15px\\r\\n        font-weight 300\\r\\n        line-height 1.3\\r\\n        margin-top 0\\r\\n        margin-bottom 0\\r\\n    # issue-count\\r\\n        display none\\r\\n    . quote\\r\\n        border none\\r\\n        margin 20px 0 60px 0\\r\\n    . quote p\\r\\n        font-style italic\\r\\n    . quote p:before\\r\\n        content '“'\\r\\n        font-size 50px\\r\\n        opacity .15\\r\\n        position absolute\\r\\n        top -20px\\r\\n        left 3px\\r\\n    . quote p:after\\r\\n        content '”'\\r\\n        font-size 50px\\r\\n        opacity .15\\r\\n        position absolute\\r\\n        bottom -42px\\r\\n        right 3px\\r\\n    . quote footer\\r\\n        position absolute\\r\\n        bottom -40px\\r\\n        right 0\\r\\n    . quote footer img\\r\\n        border-radius 3px\\r\\n    . quote footer a\\r\\n        margin-left 5px\\r\\n        vertical-align middle\\r\\n    . speech-bubble\\r\\n        position relative\\r\\n        padding 10px\\r\\n        background rgba(0, 0, 0, .04)\\r\\n        border-radius 5px\\r\\n    . speech-bubble:after\\r\\n        content ''\\r\\n        position absolute\\r\\n        top 100%\\r\\n        right 30px\\r\\n        border 13px solid transparent\\r\\n        border-top-color rgba(0, 0, 0, .04)\\r\\n    . learn-bar > .learn\\r\\n        position absolute\\r\\n        width 272px\\r\\n        top 8px\\r\\n        left -300px\\r\\n        padding 10px\\r\\n        border-radius 5px\\r\\n        background-color rgba(255, 255, 255, .6)\\r\\n        transition-property left\\r\\n        transition-duration 500ms\\r\\n    media (min-width: 899px)\\r\\n        . learn-bar\\r\\n            width auto\\r\\n            padding-left 300px\\r\\n        . learn-bar > .learn\\r\\n            left 8px\\r\\n\"},\"t/vanillajs/css/index.css.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    < html\\r\\n        + body\\r\\n        margin 0\\r\\n        padding 0\\r\\n    < button\\r\\n        margin 0\\r\\n        padding 0\\r\\n        border 0\\r\\n        background none\\r\\n        font-size 100%\\r\\n        vertical-align baseline\\r\\n        font-family inherit\\r\\n        font-weight inherit\\r\\n        color inherit\\r\\n        -webkit-appearance none\\r\\n        appearance none\\r\\n        -webkit-font-smoothing antialiased\\r\\n        -moz-osx-font-smoothing grayscale\\r\\n    < body\\r\\n        font 14px 'Helvetica Neue', Helvetica, Arial, sans-serif\\r\\n        line-height 1.4em\\r\\n        background #f5f5f5\\r\\n        color #4d4d4d\\r\\n        min-width 230px\\r\\n        max-width 80%\\r\\n        margin 0 auto\\r\\n        -webkit-font-smoothing antialiased\\r\\n        -moz-osx-font-smoothing grayscale\\r\\n        font-weight 300\\r\\n    < :focus\\r\\n        outline 0\\r\\n    . hidden\\r\\n        display none\\r\\n    . main\\r\\n        position relative\\r\\n        z-index 2\\r\\n        border-top 1px solid #e6e6e6\\r\\n    . toggle-all\\r\\n        width 1px\\r\\n        height 1px\\r\\n        border none\\r\\n        # Mobile Safari\\r\\n        opacity 0\\r\\n        position absolute\\r\\n        right 100%\\r\\n        bottom 100%\\r\\n    . toggle-all + label\\r\\n        width 60px\\r\\n        height 34px\\r\\n        font-size 0\\r\\n        position absolute\\r\\n        top -52px\\r\\n        left -13px\\r\\n        -webkit-transform rotate(90deg)\\r\\n        transform rotate(90deg)\\r\\n    . toggle-all + label:before\\r\\n        content '❯'\\r\\n        font-size 22px\\r\\n        color #e6e6e6\\r\\n        padding 10px 27px 10px 27px\\r\\n    . toggle-all:checked + label:before\\r\\n        color #737373\\r\\n    . info\\r\\n        margin 65px auto 0\\r\\n        color #bfbfbf\\r\\n        font-size 10px\\r\\n        text-shadow 0 1px 0 rgba(255, 255, 255, 0.5)\\r\\n        text-align center\\r\\n    . info p\\r\\n        line-height 1\\r\\n    . info a\\r\\n        color inherit\\r\\n        text-decoration none\\r\\n        font-weight 400\\r\\n    . info a:hover\\r\\n        text-decoration underline\\r\\n    #\\r\\n        # \\r\\n        # Hack to remove background from Mobile Safari.\\r\\n        # Can't use it globally since it destroys checkboxes in Firefox\\r\\n    media screen and (-webkit-min-device-pixel-ratio:0)\\r\\n        . toggle-all\\r\\n            + .production-list li .toggle\\r\\n            background none\\r\\n        . production-list li .toggle\\r\\n            $$ height 40px\\r\\n    media (max-width: 430px)\\r\\n        . production-kinds\\r\\n            height 50px\\r\\n        . filters\\r\\n            bottom 10px\\r\\n\"},\"t/vanillajs/css/media.css.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    . wzapp\\r\\n        background #fff\\r\\n        margin 130px 0 40px 0\\r\\n        position relative\\r\\n        box-shadow 0 2px 4px 0 rgba(0, 0, 0, 0.2),\\r\\n\\t            \\\\b 0 25px 50px 0 rgba(0, 0, 0, 0.1)\\r\\n    . wzapp input::-webkit-input-placeholder\\r\\n        font-style italic\\r\\n        font-weight 300\\r\\n        color #e6e6e6\\r\\n    . wzapp input::-moz-placeholder\\r\\n        font-style italic\\r\\n        font-weight 300\\r\\n        color #e6e6e6\\r\\n    . wzapp input::input-placeholder\\r\\n        font-style italic\\r\\n        font-weight 300\\r\\n        color #e6e6e6\\r\\n    . wzapp h1\\r\\n        position absolute\\r\\n        top -155px\\r\\n        width 100%\\r\\n        font-size 100px\\r\\n        font-weight 100\\r\\n        text-align center\\r\\n        color rgba(175, 47, 47, 0.15)\\r\\n        -webkit-text-rendering optimizeLegibility\\r\\n        -moz-text-rendering optimizeLegibility\\r\\n        text-rendering optimizeLegibility\\r\\n    . what-todo\\r\\n        + .edit\\r\\n        position relative\\r\\n        margin 0\\r\\n        width 100%\\r\\n        font-size 24px\\r\\n        font-family inherit\\r\\n        font-weight inherit\\r\\n        line-height 1.4em\\r\\n        border 0\\r\\n        color inherit\\r\\n        padding 6px\\r\\n        border 1px solid #999\\r\\n        box-shadow inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2)\\r\\n        box-sizing border-box\\r\\n        -webkit-font-smoothing antialiased\\r\\n        -moz-osx-font-smoothing grayscale\\r\\n    . what-todo\\r\\n        padding 16px 16px 16px 60px\\r\\n        border none\\r\\n        background rgba(0, 0, 0, 0.003)\\r\\n        box-shadow inset 0 -2px 1px rgba(0,0,0,0.03)\\r\\n    $include prod-view-filter.css\\r\\n    . filters\\r\\n        margin 0\\r\\n        padding 0\\r\\n        list-style none\\r\\n        font-weight 300\\r\\n        . selected\\r\\n          $$ font-size 1.6em\\r\\n          font-weight 700\\r\\n    . filters li\\r\\n        display inline\\r\\n    . filters li a\\r\\n        color inherit\\r\\n        margin 3px\\r\\n        padding 3px 7px\\r\\n        text-decoration none\\r\\n        border 1px solid transparent\\r\\n        border-radius 3px\\r\\n    . filters li a:hover\\r\\n        border-color rgba(175, 47, 47, 0.1)\\r\\n    . filters li a.selected\\r\\n        border-color rgba(175, 47, 47, 0.2)\\r\\n    . media-container\\r\\n      display flex\\r\\n      border 1px solid rgba(47, 175, 47, 0.15);\\r\\n    . media-explorer\\r\\n      width 40%\\r\\n      margin 10px\\r\\n      padding 3px\\r\\n      height 700px\\r\\n      overflow auto\\r\\n      border 1px solid rgba(47, 47, 175, 0.15);\\r\\n    . media-item\\r\\n        display flex\\r\\n    . media-item-name\\r\\n        width 90%\\r\\n    . media-item-btn\\r\\n        width 10%\\r\\n    . media-details-box\\r\\n        background-color #23cc42\\r\\n        padding 50px\\r\\n        height 700px\\r\\n        width 400px\\r\\n    . media-details\\r\\n        height 100px\\r\\n        width 300px\\r\\n        overflow auto\\r\\n        padding 50px\\r\\n        background-color #fff\\r\\n        border 1px solid rgba(47, 47, 175, 0.25);\\r\\n    . media-view\\r\\n      display none\\r\\n\"},\"t/vanillajs/css/t/prod-view-filter.css.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n\\r\\n  . production-view-filter\\r\\n\\r\\n  . production-view-kind\\r\\n    display flex\\r\\n    justify-content center\\r\\n    font-size 0.9em\"},\"t/vanillajs/html/main.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    section \\r\\n        div\\r\\n          style display:flex;\\r\\n          div\\r\\n            h1 Media works\\r\\n          div\\r\\n            style display:flex;\\r\\n            class filters\\r\\n            div\\r\\n              style margin:18px 130px; font-size: 1.4em;\\r\\n              a Media\\r\\n                href #/media\\r\\n                class selected\\r\\n            div\\r\\n              style margin:18px 30px; font-size: 1.4em;\\r\\n              a Other\\r\\n                href #/other\\r\\n                class \\r\\n    section \\r\\n        div\\r\\n          class media-view\\r\\n          div\\r\\n            class media-container\\r\\n            div\\r\\n              class media-explorer\\r\\n              section \\r\\n                class media-view-filter flex justify-content-space-between\\r\\n                div\\r\\n                  class media-view-search\\r\\n                  input \\r\\n                    type search\\r\\n                    class media-view-search-field m-s p-s\\r\\n                    placeholder Find a guida …\\r\\n                    autocomplete off\\r\\n                    @ aria-label Find a guida …\\r\\n                div\\r\\n                  class media-view-select-categoria\\r\\n                  style padding-top:20px;\\r\\n                div\\r\\n                  class media-view-select-titolo\\r\\n                  style padding-top:20px;\\r\\n              section \\r\\n                class main\\r\\n                ul \\r\\n                    class media-list\\r\\n            div\\r\\n              class media-item-box\\r\\n              div\\r\\n                class media-details\\r\\n              $include youtube\\r\\n        div\\r\\n          class other-view\\r\\n        footer \\r\\n            class info\\r\\n            p Powered by Wizzi. Wizzi is created by\\r\\n                a Stefano Bassoli\\r\\n                    href https://github.com/stfnbssl\"},\"t/vanillajs/html/t/youtube.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    section \\r\\n        . center\\r\\n            h2 YouTube\\r\\n                code iframe\\r\\n                + embed\\r\\n            $*\\r\\n            div \\r\\n                id YouTube-player\\r\\n            *$\\r\\n            iframe \\r\\n                id YouTube-player\\r\\n                frameborder 0\\r\\n                allowfullscreen 1\\r\\n                @ allow accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\\r\\n                title YouTube video player\\r\\n                width 400\\r\\n                height 300\\r\\n                src https://www.youtube.com/embed/frYIj2FGmMA?autohide=0&amp;cc_load_policy=0&amp;controls=2&amp;disablekb=1&amp;iv_load_policy=3&amp;modestbranding=1&amp;rel=0&amp;showinfo=0&amp;start=3&amp;origin=http%3A%2F%2Flocalhost%3A5000&amp;enablejsapi=1&amp;widgetid=1\\r\\n                sandbox allow-same-origin allow-scripts allow-forms allow-popups allow-popups-to-escape-sandbox allow-presentation\\r\\n\\r\\n        . framed\\r\\n            div \\r\\n                id YouTube-player-infos\\r\\n            div \\r\\n                id YouTube-player-errors\\r\\n            div \\r\\n                id YouTube-player-fixed-infos\\r\\n    section \\r\\n        h2 References\\r\\n        ul \\r\\n            li \\r\\n                ul \\r\\n                    li \\r\\n                        a \\r\\n                            href https://developers.google.com/youtube/iframe_api_reference\\r\\n                            em YouTube Player\\r\\n                                abbr API\\r\\n                                + Reference for code iframe Embeds\\r\\n                    li \\r\\n                        a \\r\\n                            href https://developers.google.com/youtube/player_parameters\\r\\n                            em YouTube Embedded Players and Player Parameters\\r\\n\"},\"t/vanillajs/js/app.js.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n    ${$2}\\r\\n      var myName = 'Media';\\r\\n      //\\r\\n    \\r\\n    iife_window${$p2} app, ${$2}{myName}) \\r\\n        function ${$2}{myName}\\r\\n            param name\\r\\n            set this.storage = new app.Store(name)\\r\\n            set this.model = new app.Model(this.storage, app.Defaults)\\r\\n            set this.template = new app.Template()\\r\\n            set this.view = new app.View(this.template, app.Styles)\\r\\n            set this.controller = new app.Controller(this.model, this.view)\\r\\n        var media = new ${$2}{myName}('media')\\r\\n        ${$2}${$2} temp\\r\\n        set app.media = media\\r\\n        function setView\\r\\n            log 'App ${$2}{myName}.setView'\\r\\n            _ media.controller.initialize\\r\\n              @ document.location.hash\\r\\n        _ $on(window, 'load', setView)\\r\\n        _ $on(window, 'hashchange', setView)\"},\"t/vanillajs/js/model.js.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n    ${$2}\\r\\n      var myName = 'Model';\\r\\n      //\\r\\n\\r\\n    iife_window${$p2} app, ${$2}{myName})\\r\\n        \\r\\n        function ${$2}{myName}\\r\\n            param storage\\r\\n            param defaults\\r\\n            set this.storage = storage\\r\\n            set this.defaults = defaults\\r\\n            set this.wzApi = api.Wizzi\\r\\n\\r\\n        set ${$2}{myName}.prototype.getTabelle\\r\\n            function \\r\\n                param_callback${$p2} required, Method: ${$2}{myName}.getTabelle )\\r\\n                _ this.storage.findTabelle\\r\\n                  =>\\r\\n                    param item\\r\\n                    _ callback\\r\\n                      @ item\\r\\n\\r\\n\\r\\n        set ${$2}{myName}.prototype.getMedia\\r\\n            function \\r\\n                param activeSearchTerm\\r\\n                param activeCategoria\\r\\n                param_callback${$p2} required, Method: ${$2}{myName}.getMedia )\\r\\n                _ this.storage.findAllMedia\\r\\n                  =>\\r\\n                    param items\\r\\n                    _ callback\\r\\n                        _ items.filter\\r\\n                            =>\\r\\n                                param item\\r\\n                                ${$2}${$2} log '${$2}{myName}.getProduction.item', item.__selected, viewKind\\r\\n                                var okCatTit = true\\r\\n                                if activeCategoria != '0'\\r\\n                                    set okCatTit = okCatTit && item.categoria == activeCategoria\\r\\n                                var ok = okCatTit\\r\\n                                if ok && activeSearchTerm && activeSearchTerm.length > 0\\r\\n                                    set ok = containsTerm(item.name, activeSearchTerm)\\r\\n                                        \\\\b || containsTerm(item.categoria, activeSearchTerm)\\r\\n                                return ok\\r\\n\\r\\n        set ${$2}{myName}.prototype.getMediaItem\\r\\n            function \\r\\n                param id\\r\\n                param_callback${$p2} required, Method: ${$2}{myName}.getMediaItem )\\r\\n                _ this.storage.findMediaItem\\r\\n                  @ id\\r\\n                  =>\\r\\n                    param item\\r\\n                    _ callback\\r\\n                      @ item\\r\\n\\r\\n\\r\\n        set ${$2}{myName}.prototype.getMediaValue\\r\\n            function \\r\\n                param name\\r\\n                param defaultValue\\r\\n                return\\r\\n                  _ this.storage.getLocalValue\\r\\n                    @ name\\r\\n                    @ defaultValue\\r\\n\\r\\n        set ${$2}{myName}.prototype.setMediaValue\\r\\n            function \\r\\n                param name\\r\\n                param value\\r\\n                _ this.storage.setLocalValue\\r\\n                  @ name\\r\\n                  @ value\\r\\n\\r\\n        function containsTerm\\r\\n          param str\\r\\n          param term\\r\\n          set str = str || \\\"\\\"\\r\\n          set term = term || \\\"\\\"\\r\\n          return str.toLowerCase().indexOf(term.toLowerCase()) > -1\"},\"t/vanillajs/js/store.js.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n    ${$2}\\r\\n      var myName = 'Store';\\r\\n      //\\r\\n    \\r\\n    iife_window${$p2} app, ${$2}{myName})\\r\\n        # globals api.Wizzi, mvc.LocalObjectStore\\r\\n        function ${$2}{myName}\\r\\n            param name\\r\\n            set this.name = name\\r\\n            set this.wzApi = api.Wizzi\\r\\n            set this.lsMedia = new mvc.LocalObjectStore('worksMedia')\\r\\n            set this.mediaItems = null\\r\\n            set this.tabelle = null\\r\\n\\r\\n        set ${$2}{myName}.prototype.findTabelle\\r\\n            function \\r\\n                param_callback${$p2} required, Method: ${$2}{myName}.findTabelle )\\r\\n                if this.tabelle\\r\\n                  return\\r\\n                    _ callback\\r\\n                      @ this.tabelle\\r\\n                _ this.findAllMedia\\r\\n                    =>\\r\\n                        param mediaItems\\r\\n                        const categories = {}\\r\\n                        foreach item in mediaItems\\r\\n                            set categories[item.categoria] = item.categoria\\r\\n                        _ callback\\r\\n                            {\\r\\n                                @ categories categories\\r\\n\\r\\n        set ${$2}{myName}.prototype.findAllMedia\\r\\n            function \\r\\n                param_callback${$p2} required, Method: ${$2}{myName}.findAllMedia )\\r\\n                if this.mediaItems\\r\\n                  return\\r\\n                    _ callback\\r\\n                      @ this.mediaItems\\r\\n                _ fetch('/~/stfnbssl/works-biga.json').then\\r\\n                    => \\r\\n                        param response\\r\\n                        if !response.ok\\r\\n                            throw new Error(\\\"HTTP error \\\" + response.status)\\r\\n                        return response.json()\\r\\n                    ._ then\\r\\n                        => \\r\\n                            param json\\r\\n                            const items = []\\r\\n                            foreach video in json.videos\\r\\n                                foreach item in video.items\\r\\n                                    _ items.push\\r\\n                                        {\\r\\n                                            @ id video.id + '/' + item.name\\r\\n                                            @ categoria video.categoria\\r\\n                                            @ kind  \\\"video\\\"\\r\\n                                            @ videoKind video.kind\\r\\n                                            @ videoId video.id\\r\\n                                            @ author video.author\\r\\n                                            @ videoAuthorId video.authorId\\r\\n                                            @ title video.title || video.name\\r\\n                                            @ name item.name\\r\\n                                            @ time item.time\\r\\n                            info \\\"mediaItems\\\", items\\r\\n                            set this.mediaItems = items\\r\\n                            _ callback\\r\\n                              @ items\\r\\n                    ._ catch\\r\\n                        function \\r\\n                            set this.dataError = true\\r\\n\\r\\n\\r\\n        set ${$2}{myName}.prototype.findMediaItem\\r\\n            function \\r\\n                param id\\r\\n                param_callback${$p2} required, Method: ${$2}{myName}.findMediaItem )\\r\\n                _ this.findAllMedia\\r\\n                  =>\\r\\n                    param items\\r\\n                    foreach item in items\\r\\n                      if item.id == id\\r\\n                        return\\r\\n                          _ callback\\r\\n                            @ item\\r\\n                    throw new Error('${$2}{myName}.findMediaItem.err not found: ' + id)\\r\\n        \\r\\n\\r\\n        set ${$2}{myName}.prototype.getLocalValue\\r\\n            function \\r\\n                param name\\r\\n                param defaultValue\\r\\n                var lsStore = this.lsMedia\\r\\n                return\\r\\n                  _ lsStore.getValue\\r\\n                    @ name\\r\\n                    @ defaultValue\\r\\n\\r\\n        set ${$2}{myName}.prototype.setLocalValue\\r\\n            function \\r\\n                param name\\r\\n                param value\\r\\n                var lsStore = this.lsMedia\\r\\n                return\\r\\n                  _ lsStore.setValue\\r\\n                    @ name\\r\\n                    @ value\\r\\n\\r\\n        function compareTitolo\\r\\n            param a\\r\\n            param b\\r\\n            const at = parseInt(a.titolo)\\r\\n            const bt = parseInt(b.titolo)\\r\\n            if at < bt\\r\\n                return 1\\r\\n            if at > bt\\r\\n                return -1\\r\\n            return 0\\r\\n\"},\"t/vanillajs/js/controller.js.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n    ${$2}\\r\\n      var myName = 'Controller';\\r\\n      //\\r\\n\\r\\n    iife_window${$p2} app, ${$2}{myName})\\r\\n        function ${$2}{myName}\\r\\n            param model\\r\\n            param view\\r\\n            var self = this\\r\\n            set self.model = model\\r\\n            set self.view = view\\r\\n            set self.activeMediaItem = null\\r\\n            set self.mediaSearchTerm = ''\\r\\n            ${$2}*\\r\\n                GUIDAS\\r\\n            *${$2}\\r\\n            _ self.view.bind\\r\\n                @ 'mediaViewSearchChange'\\r\\n                function \\r\\n                    param data\\r\\n                    ${$2}${$2} _ alert('mediaViewSearchChange:' + data.value)\\r\\n                    _ self.changeMediaSearchTerm\\r\\n                      @ data.value\\r\\n\\r\\n            _ self.view.bind\\r\\n                @ 'onViewMediaItem'\\r\\n                function \\r\\n                    param data\\r\\n                    ${$2}${$2} _ alert('onViewMediaItem: ' + data)\\r\\n                    _ self.showMediaItem\\r\\n                      @ data\\r\\n\\r\\n\\r\\n        set ${$2}{myName}.prototype.initialize\\r\\n            function \\r\\n                param locationHash\\r\\n                set this.mediaSearchTerm\\r\\n                  _ this.model.getMediaValue\\r\\n                    @ 'searchTerm'\\r\\n                    @ ''\\r\\n                set this.mediaCategoria\\r\\n                  _ this.model.getMediaValue\\r\\n                    @ 'categoria'\\r\\n                    @ ''\\r\\n                _ this.view.render\\r\\n                  @ 'setMediaSearchTerm'\\r\\n                  @ this.mediaSearchTerm\\r\\n                _ this.model.getTabelle\\r\\n                  =>\\r\\n                    param tabelle\\r\\n                    log \\\"${$2}{myName}.prototype.initialize\\\", tabelle\\r\\n                    _ this.view.render\\r\\n                      @ 'setMediaSelects'\\r\\n                      @ tabelle\\r\\n                    _ this.view.bind\\r\\n                        @ 'mediaSelectCategoriaChange'\\r\\n                        =>\\r\\n                            param data\\r\\n                            _ this.changeMediaCategoria\\r\\n                              @ data.value\\r\\n                    _ this.view.render\\r\\n                      @ 'setMediaSelectCategoria'\\r\\n                      @ this.mediaCategoria\\r\\n                _ this.setView\\r\\n                  @ locationHash\\r\\n        \\r\\n        ${$2}*\\r\\n            ROUTE\\r\\n        *${$2}\\r\\n        set ${$2}{myName}.prototype.setView =\\r\\n            function \\r\\n                param locationHash\\r\\n                var route = locationHash.split('/')[1]\\r\\n                var page = route || ''\\r\\n                log '${$2}{myName}.setView', 'route', route, 'page', page\\r\\n                _ this._updateRouteFilterState(page)\\r\\n\\r\\n        set ${$2}{myName}.prototype._updateRouteFilterState =\\r\\n            function \\r\\n                param currentPage\\r\\n                set this._activeRoute = currentPage\\r\\n                if currentPage === ''\\r\\n                    set this._activeRoute = currentPage = 'media'\\r\\n                \\r\\n                if this._activeRoute == 'media'\\r\\n                  _ this.view.render\\r\\n                    @ 'showMediaView'\\r\\n                  _ this._filterMedia\\r\\n                \\r\\n                if this._activeRoute == 'other'\\r\\n                  _ this.view.render\\r\\n                    @ 'showOtherView'\\r\\n                \\r\\n                _ this.view.render('setFilter', currentPage)\\r\\n            #\\r\\n                # \\r\\n                # Simply updates the filter nav's selected states\\r\\n                # \\r\\n\\r\\n\\r\\n        set ${$2}{myName}.prototype.changeMediaSearchTerm\\r\\n            function \\r\\n                param value\\r\\n                log '${$2}{myName}.changeMediaSearchTerm', value\\r\\n                set this.mediaSearchTerm = value\\r\\n                _ this.model.setMediaValue\\r\\n                  @ 'searchTerm'\\r\\n                  @ value\\r\\n                _ this._filterMedia\\r\\n\\r\\n        set ${$2}{myName}.prototype.changeMediaCategoria\\r\\n            function \\r\\n                param value\\r\\n                log '${$2}{myName}.changeMediaCategoria', value\\r\\n                set this.mediaCategoria = value\\r\\n                _ this.model.setMediaValue\\r\\n                  @ 'categoria'\\r\\n                  @ value\\r\\n                _ this._filterMedia\\r\\n\\r\\n        set ${$2}{myName}.prototype._filterMedia =\\r\\n            function \\r\\n                log '${$2}{myName}._filterMedia'\\r\\n                _ this.showMediaList\\r\\n\\r\\n        set ${$2}{myName}.prototype.showMediaList\\r\\n            function \\r\\n                log '${$2}{myName}.showMediaList'\\r\\n                _ this.model.getMedia\\r\\n                    @ this.mediaSearchTerm\\r\\n                    @ this.mediaCategoria\\r\\n                    =>\\r\\n                        param items\\r\\n                        set this.activeMediaItems = items\\r\\n                        _ this.view.render('showMediaList', items)\\r\\n\\r\\n        set ${$2}{myName}.prototype.showMediaItem\\r\\n            function\\r\\n                param id \\r\\n                log '${$2}{myName}.showMediaItem'\\r\\n                _ this.model.getMediaItem\\r\\n                    @ id\\r\\n                    =>\\r\\n                        param item\\r\\n                        set this.activeMediaItem = item\\r\\n                        _ this.view.render('showMediaItem', item)\\r\\n                        if item.kind == 'video'\\r\\n                          if item.videoKind == 'youtube'\\r\\n                            _ youTubePlayerChangeVideoId\\r\\n                              @ item.videoId\\r\\n                              @ item.time\\r\\n\"},\"t/vanillajs/js/template.js.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n    ${$2}\\r\\n      var myName = 'Template';\\r\\n      //\\r\\n\\r\\n    iife_window${$p2} app, ${$2}{myName})\\r\\n\\r\\n        function select_option\\r\\n            param __html\\r\\n            param ctx\\r\\n            log 'select_option', ctx.value, ctx.label\\r\\n            _ __html.push('<option')\\r\\n            _ __html.push(' value=\\\"' + ctx.value + '\\\"')\\r\\n            if ctx.selected\\r\\n                _ __html.push(' selected=\\\"selected\\\"')\\r\\n            _ __html.push('>')\\r\\n            _ __html.push(ctx.label)\\r\\n            _ __html.push('</option>')   \\r\\n\\r\\n        html_f tmplSelect\\r\\n          div\\r\\n            class {{ ctx.class }}\\r\\n            select {{ ctx.options }}\\r\\n                name {{ ctx.id }}\\r\\n                id {{ ctx.id }}\\r\\n                class {{ ctx.id }}\\r\\n\\r\\n        html_f tmplMediaList\\r\\n          li \\r\\n            @ data-id {{ctx.id}}\\r\\n            @ class guida-item\\r\\n            div\\r\\n              @ class guida-item-name\\r\\n              a {{ ctx.name }} / {{ ctx.categoria }} \\r\\n                ${$2}${$2} @ href #\\r\\n\\r\\n        html_f tmplMediaDetails\\r\\n          div\\r\\n            h2 {{ ctx.categoria }}\\r\\n            div\\r\\n              + {{ ctx.title }}\\r\\n            div\\r\\n              + di {{ ctx.author }}\\r\\n            div\\r\\n              a url: www.youtube.com/watch?v={{ ctx.videoId }}\\r\\n                href https://www.youtube.com/watch?v={{ ctx.videoId }}\\r\\n                target _blank\\r\\n            div\\r\\n              + {{ ctx.name }}\\r\\n            div\\r\\n              + {{ ctx.time }}\\r\\n        \\r\\n\\r\\n        function ${$2}{myName}\\r\\n\\r\\n        set ${$2}{myName}.prototype.showMediaSelectCategoria\\r\\n            function \\r\\n                param data\\r\\n                log \\\"${$2}{myName}.prototype.showMediaSelectCategoria\\\", data\\r\\n                var options = []\\r\\n                var aOptions = []\\r\\n                _ select_option\\r\\n                    @ aOptions\\r\\n                    {\\r\\n                      @ label \\\"Annulla\\\"\\r\\n                      @ value '0'\\r\\n                _ options.push\\r\\n                    _ aOptions.join('')\\r\\n                for const k of Object.keys(data)\\r\\n                    var aOptions = []\\r\\n                    _ select_option\\r\\n                        @ aOptions\\r\\n                        {\\r\\n                          @ label data[k]\\r\\n                          @ value k\\r\\n                    _ options.push\\r\\n                        _ aOptions.join('')\\r\\n                var view = []\\r\\n                _ view.push\\r\\n                  _ tmplSelect\\r\\n                    {\\r\\n                      @ id 'media-select-categoria'\\r\\n                      @ class 'media-select'\\r\\n                      @ options options.join('\\\\n')\\r\\n                log \\\"${$2}{myName}.prototype.showMediaSelectCategoria\\\", view.join('\\\\n')\\r\\n                return view.join('\\\\n')\\r\\n        \\r\\n        set ${$2}{myName}.prototype.showMediaList =\\r\\n            function \\r\\n                param data\\r\\n                var view = []\\r\\n                _ data.map\\r\\n                  =>\\r\\n                    param item\\r\\n                    _ view.push\\r\\n                      _ tmplMediaList\\r\\n                        @ item\\r\\n                return view.join('\\\\n')\\r\\n\\r\\n        set ${$2}{myName}.prototype.showMediaDetails =\\r\\n            function \\r\\n                param data\\r\\n                var view = []\\r\\n                _ view.push\\r\\n                  _ tmplMediaDetails\\r\\n                    @ data\\r\\n                return view.join('\\\\n')\\r\\n\\r\\n\"},\"t/vanillajs/js/view.js.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n    ${$2}\\r\\n      var myName = 'View';\\r\\n      //\\r\\n\\r\\n    iife_window${$p2} app, ${$2}{myName})\\r\\n        function ${$2}{myName}\\r\\n            param template\\r\\n            param styles\\r\\n            set this.template = template\\r\\n            set this.styles = styles\\r\\n            set this.ENTER_KEY = 13\\r\\n            set this.ESCAPE_KEY = 27\\r\\n            #\\r\\n            set this.$mediaRoute = qs('.route-media')\\r\\n            set this.$otherRoute = qs('.route-other')\\r\\n            #\\r\\n            set this.$mediaView = qs('.media-view')\\r\\n            set this.$mediaViewSearch = qs('.media-view-search-field')\\r\\n            set this.$mediaViewSelectCategoria = qs('.media-view-select-categoria')\\r\\n            set this.$mediaSelectCategoria = null\\r\\n            set this.$mediaList = qs('.media-list')\\r\\n            set this.$mediaDetails = qs('.media-details')\\r\\n            #\\r\\n            set this.$otherView = qs('.other-view')\\r\\n\\r\\n        set ${$2}{myName}.prototype._setFilter =\\r\\n            function \\r\\n                param currentPage\\r\\n                set qs('.filters .selected').className = ''\\r\\n                set qs('.filters [href=\\\"#/' + currentPage + '\\\"]').className = 'selected'\\r\\n\\r\\n        set ${$2}{myName}.prototype.render =\\r\\n            function \\r\\n                param viewCmd\\r\\n                param parameter\\r\\n                log '${$2}{myName}.prototype.render', viewCmd, parameter\\r\\n                var self = this\\r\\n                var viewCommands\\r\\n                    { \\r\\n                        @ setMediaSearchTerm\\r\\n                            function \\r\\n                                set self.$mediaViewSearch.value = parameter\\r\\n                        @ setMediaSelectCategoria\\r\\n                            function \\r\\n                                set self.$mediaSelectCategoria.value = parameter\\r\\n                        @ setMediaSelects\\r\\n                            function \\r\\n                                set self.$mediaViewSelectCategoria.innerHTML = self.template.showMediaSelectCategoria(parameter.categories)\\r\\n                        @ showMediaView\\r\\n                            function \\r\\n                                log '${$2}{myName}.render.showMediaView'\\r\\n                                set self.$mediaView.style.display = 'block'\\r\\n                                ${$2}${$2} set self.$otherView.style.display = 'none'\\r\\n                        @ showOtherView\\r\\n                            function \\r\\n                                log '${$2}{myName}.render.showOtherView'\\r\\n                                set self.$mediaView.style.display = 'none'\\r\\n                                ${$2}${$2} set self.$otherView.style.display = 'block'\\r\\n                        @ showMediaList\\r\\n                            function \\r\\n                                set self.$mediaList.innerHTML = self.template.showMediaList(parameter)\\r\\n                        @ showMediaItem\\r\\n                            function \\r\\n                                set self.$mediaDetails.innerHTML = self.template.showMediaDetails(parameter)\\r\\n                        @ setFilter\\r\\n                            function \\r\\n                              log '${$2}{myName}.render.setFilter', parameter\\r\\n                              set qs('.filters .selected').className = ''\\r\\n                              if qs('.filters [href=\\\"#/' + parameter + '\\\"]')\\r\\n                                set qs('.filters [href=\\\"#/' + parameter + '\\\"]').className = 'selected'\\r\\n                                log '${$2}{myName}.render.setFilter 2', parameter\\r\\n                _ viewCommands[viewCmd]()\\r\\n\\r\\n        set ${$2}{myName}.prototype.bind =\\r\\n            function \\r\\n                param event\\r\\n                param handler\\r\\n                var self = this\\r\\n                if event === 'mediaViewSearchChange'\\r\\n\\r\\n                    log '${$2}{myName}.bind', self.$mediaViewSearch\\r\\n                    _ $on\\r\\n                        @ self.$mediaViewSearch\\r\\n                        @ 'input'\\r\\n                        function \\r\\n                            log '${$2}{myName}.bind', 'mediaViewSearchChange', this.value\\r\\n                            _ handler\\r\\n                                { \\r\\n                                    @ value this.value\\r\\n\\r\\n                elif event === 'mediaSelectCategoriaChange'\\r\\n                    set this.$mediaSelectCategoria = qs('.media-select-categoria')\\r\\n                    log '${$2}{myName}.bind', self.$mediaSelectCategoria\\r\\n                    _ $on\\r\\n                        @ self.$mediaSelectCategoria\\r\\n                        @ 'change'\\r\\n                        =>\\r\\n                            param event\\r\\n                            _ handler\\r\\n                              {\\r\\n                                @ value event.target.value\\r\\n\\r\\n                elif event === 'onViewMediaItem'\\r\\n                    info 'binding onViewMediaItem self.$mediaList'\\r\\n                    _ $on\\r\\n                        @ self.$mediaList\\r\\n                        @ 'click'\\r\\n                        function \\r\\n                            param event\\r\\n                            var target = event.target\\r\\n                            var result = null\\r\\n                            while target && result == null\\r\\n                              if target.tagName == 'LI'\\r\\n                                set result = target\\r\\n                                info 'on click self.$mediaList', result, result.dataset, result.dataset.id\\r\\n                              set target = target.parentNode\\r\\n                            _ handler(result && result.dataset.id)\\r\\n\\r\\n\"},\"t/vanillajs/js/youtube.js.html.ittf.ittf\":{\"type\":\"CODE\",\"contents\":\"${$2}group\\r\\n\\r\\n    var youTubePlayer\\r\\n        # YT.Player initialized by onYouTubeIframeAPIReady().\\r\\n    \\r\\n    function onYouTubeIframeAPIReady\\r\\n        var videoId = \\\"frYIj2FGmMA\\\"\\r\\n        var suggestedQuality = 'tiny'\\r\\n        var height = 300\\r\\n        var width = 400\\r\\n        \\r\\n        function onError\\r\\n            param event\\r\\n            _ youTubePlayer.personalPlayer.errors.push(event.data)\\r\\n        \\r\\n        function onReady\\r\\n            param event\\r\\n            info \\\"onReady\\\", videoId\\r\\n            var player = event.target\\r\\n            _ player.loadVideoById\\r\\n                { \\r\\n                    @ suggestedQuality\\r\\n                    @ videoId\\r\\n            _ player.pauseVideo()\\r\\n            _ youTubePlayerDisplayFixedInfos()\\r\\n        \\r\\n        function onStateChange\\r\\n            param event\\r\\n            var volume = Math.round(event.target.getVolume())\\r\\n        \\r\\n        # https://developers.google.com/youtube/player_parameters\\r\\n        set youTubePlayer =\\r\\n            new YT.Player\\r\\n                @ 'YouTube-player'\\r\\n                { \\r\\n                    @ videoId\\r\\n                    @ height\\r\\n                    @ width\\r\\n                    { playerVars\\r\\n                        @ 'autohide' 0\\r\\n                        @ 'cc_load_policy' 0\\r\\n                        @ 'controls' 2\\r\\n                        @ 'disablekb' 1\\r\\n                        @ 'iv_load_policy' 3\\r\\n                        @ 'modestbranding' 1\\r\\n                        @ 'rel' 0\\r\\n                        @ 'showinfo' 0\\r\\n                        @ 'start' 3\\r\\n                        @ 'origin' \\\"http://localhost:5000\\\"\\r\\n                    { events\\r\\n                        @ 'onError' onError\\r\\n                        @ 'onReady' onReady\\r\\n                        @ 'onStateChange' onStateChange\\r\\n        \\r\\n        set youTubePlayer.personalPlayer =\\r\\n            { \\r\\n                @ 'currentTimeSliding' false\\r\\n                @ 'errors' []\\r\\n\\r\\n        set document.getElementById('YouTube-player').sandbox += ' allow-presentation'\\r\\n\\r\\n        info \\\"set youTubePlayer. Done\\\"\\r\\n    \\r\\n    function youTubePlayerActive\\r\\n        return youTubePlayer && youTubePlayer.hasOwnProperty('getPlayerState')\\r\\n    \\r\\n    function youTubePlayerChangeVideoId\\r\\n        param videoId\\r\\n        param time\\r\\n        const seconds = timeToSeconds(time)\\r\\n        log 'youTubePlayerChangeVideoId', time, seconds\\r\\n        _ youTubePlayer.loadVideoById\\r\\n            { \\r\\n                @ suggestedQuality 'tiny'\\r\\n                @ videoId\\r\\n                @ startSeconds seconds\\r\\n        $*\\r\\n        _ youTubePlayer.cueVideoById\\r\\n            { \\r\\n                @ suggestedQuality 'tiny'\\r\\n                @ videoId\\r\\n        _ youTubePlayer.pauseVideo()\\r\\n        *$\\r\\n        _ youTubePlayerDisplayFixedInfos()\\r\\n    \\r\\n    function youTubePlayerCurrentTimeChange\\r\\n        param currentTime\\r\\n        # param currentTime: 0 <= number <= 100\\r\\n        set youTubePlayer.personalPlayer.currentTimeSliding = false\\r\\n        log 'youTubePlayerCurrentTimeChange', youTubePlayerActive(), currentTime, youTubePlayer.getDuration()\\r\\n        if youTubePlayerActive()\\r\\n            _ youTubePlayer.seekTo(currentTime * youTubePlayer.getDuration() / 100, true)\\r\\n        \\r\\n    function youTubePlayerCurrentTimeSlide\\r\\n        set youTubePlayer.personalPlayer.currentTimeSliding = true\\r\\n    \\r\\n    function youTubePlayerDisplayFixedInfos\\r\\n        if youTubePlayerActive()\\r\\n        \\r\\n    function youTubePlayerDisplayInfos\\r\\n        if (this.nbCalls === undefined) || (this.nbCalls >= 3)\\r\\n            set this.nbCalls = 0\\r\\n        else\\r\\n            set ++this.nbCalls\\r\\n        var indicatorDisplay\\r\\n            op+ \\r\\n                op+ \\r\\n                    + '<span id=\\\"indicator-display\\\" title=\\\"timing of informations refreshing\\\">'\\r\\n                    [ \\r\\n                        @ '|'\\r\\n                        @ '/'\\r\\n                        @ String.fromCharCode(8212)\\r\\n                        @ '\\\\\\\\'\\r\\n                        .[ this.nbCalls\\r\\n                + '</span>'\\r\\n        \\r\\n        if youTubePlayerActive()\\r\\n            var state = youTubePlayer.getPlayerState()\\r\\n            var current = youTubePlayer.getCurrentTime()\\r\\n            var duration = youTubePlayer.getDuration()\\r\\n            var currentPercent\\r\\n                ( \\r\\n                    iif current && duration\\r\\n                        then current * 100 / duration\\r\\n                        else 0\\r\\n            var fraction\\r\\n                ( \\r\\n                    iif youTubePlayer.hasOwnProperty('getVideoLoadedFraction')\\r\\n                        then youTubePlayer.getVideoLoadedFraction()\\r\\n                        else 0\\r\\n            var url = youTubePlayer.getVideoUrl()\\r\\n            if !current\\r\\n                set current = 0\\r\\n            if !duration\\r\\n                set duration = 0\\r\\n            var volume = youTubePlayer.getVolume()\\r\\n            if !youTubePlayer.personalPlayer.currentTimeSliding\\r\\n                $$ set document.getElementById('YouTube-player-progress').value = currentPercent\\r\\n            set document.getElementById('YouTube-player-infos').innerHTML = (indicatorDisplay + 'URL: <a class=\\\"url\\\" href=\\\"' + url + '\\\">' + url + '</a><br>' + 'Quality: <strong>' + youTubePlayer.getPlaybackQuality() + '</strong>' + ' &mdash; Available quality: <strong>' + youTubePlayer.getAvailableQualityLevels() + '</strong><br>' + 'State <strong>' + state + '</strong>: <strong>' + youTubePlayerStateValueToDescription(state) + '</strong><br>' + 'Loaded: <strong>' + (fraction * 100).toFixed(1) + '</strong>%<br>' + 'Duration: <strong>' + current.toFixed(2) + '</strong>/<strong>' + duration.toFixed(2) + '</strong>s = <strong>' + currentPercent.toFixed(2) + '</strong>%<br>' + 'Volume: <strong>' + volume + '</strong>%')\\r\\n            set document.getElementById('YouTube-player-errors').innerHTML = '<div>Errors: <strong>' + youTubePlayer.personalPlayer.errors + '</strong></div>'\\r\\n        else\\r\\n            set document.getElementById('YouTube-player-infos').innerHTML = indicatorDisplay\\r\\n    \\r\\n    function youTubePlayerPause\\r\\n        if youTubePlayerActive()\\r\\n            _ youTubePlayer.pauseVideo()\\r\\n    \\r\\n    function youTubePlayerPlay\\r\\n        log 'youTubePlayerPlay', youTubePlayerActive()\\r\\n        if youTubePlayerActive()\\r\\n            _ youTubePlayer.playVideo()\\r\\n    \\r\\n    function youTubePlayerStateValueToDescription\\r\\n        param state\\r\\n        param unknow\\r\\n        # See values:\\r\\n        # https://developers.google.com/youtube/iframe_api_reference#Playback_status\\r\\n        var STATES\\r\\n            { \\r\\n                @ '-1' 'unstarted'\\r\\n                @ '0' 'ended'\\r\\n                @ '1' 'playing'\\r\\n                @ '2' 'paused'\\r\\n                @ '3' 'buffering'\\r\\n                @ '5' 'video cued'\\r\\n        return \\r\\n            ( \\r\\n                iif state in STATES\\r\\n                    then STATES[state]\\r\\n                    else unknow\\r\\n    \\r\\n    function youTubePlayerStop\\r\\n        if youTubePlayerActive()\\r\\n            _ youTubePlayer.stopVideo()\\r\\n            _ youTubePlayer.clearVideo()\\r\\n    \\r\\n    function youTubePlayerVolumeChange\\r\\n        param volume\\r\\n        # param volume: 0 <= number <= 100\\r\\n        if youTubePlayerActive()\\r\\n            _ youTubePlayer.setVolume(volume)\\r\\n\\r\\n    function timeToSeconds\\r\\n        param time\\r\\n        if time && time.length > 0\\r\\n          const parts = time.split(':')\\r\\n          for var i=0; i<parts.length; i++\\r\\n            set parts[i] = parseInt(parts[i])\\r\\n          log 'timeToSeconds', parts\\r\\n          if parts.length == 1\\r\\n            return parts[0]\\r\\n          elif parts.length == 2\\r\\n            return parts[0] * 60 + parts[1]\\r\\n          elif parts.length == 3\\r\\n            return parts[0] * 3600 + parts[1] * 60 + parts[2]\\r\\n          else\\r\\n            return 0\\r\\n        else\\r\\n          return 0\\r\\n    \\r\\n    iife \\r\\n        function init\\r\\n            var tag = document.createElement('script')\\r\\n            set tag.src = 'https://www.youtube.com/iframe_api'\\r\\n            var first_script_tag = document.getElementsByTagName('script')[0]\\r\\n            _ first_script_tag.parentNode.insertBefore(tag, first_script_tag)\\r\\n            _ setInterval(youTubePlayerDisplayInfos, 1000)\\r\\n        if window.addEventListener\\r\\n            _ window.addEventListener('load', init)\\r\\n        else\\r\\n            if window.attachEvent\\r\\n                _ window.attachEvent('onload', init)\\r\\n\"},\"toIttf/file.css\":{\"type\":\"CODE\",\"contents\":\".alpha {\\r\\n    padding: 10px;\\r\\n}\"},\"toIttf/file.html\":{\"type\":\"CODE\",\"contents\":\"<div class=\\\"form-container\\\">\\r\\n   <form>\\r\\n      <i class=\\\"far fa-calendar-alt\\\"></i>\\r\\n      <input type=\\\"text\\\" placeholder=\\\"Pick a date\\\" class=\\\"date-input\\\">\\r\\n   </form>\\r\\n</div>\"},\"toIttf/file.js\":{\"type\":\"CODE\",\"contents\":\"export default function restArguments(func, startIndex) {\\r\\n  startIndex = startIndex == null ? func.length - 1 : +startIndex;\\r\\n  return function() {\\r\\n    var length = Math.max(arguments.length - startIndex, 0),\\r\\n        rest = Array(length),\\r\\n        index = 0;\\r\\n    for (; index < length; index++) {\\r\\n      rest[index] = arguments[index + startIndex];\\r\\n    }\\r\\n    switch (startIndex) {\\r\\n      case 0: return func.call(this, rest);\\r\\n      case 1: return func.call(this, arguments[0], rest);\\r\\n      case 2: return func.call(this, arguments[0], arguments[1], rest);\\r\\n    }\\r\\n    var args = Array(startIndex + 1);\\r\\n    for (index = 0; index < startIndex; index++) {\\r\\n      args[index] = arguments[index];\\r\\n    }\\r\\n    args[startIndex] = rest;\\r\\n    return func.apply(this, args);\\r\\n  };\\r\\n}\"}}"
    },
    {
      "_id": "63897fd64efe8f711a631f7b",
      "id": "63897fd64efe8f711a631f7b",
      "owner": "stfnbssl",
      "name": "svg",
      "description": "Svg fragments",
      "packiFiles": "{\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        { cliCtx\\\"\\n            kind \\\"artifact\\\" $$ file|artifact\\n            $$ filePath \\\".packi/cliCtx.json.ittf\\\" $$ when kind = \\\"file\\\"\\n            { artifact\\n                $$ name \\\"..name..\\\" $$ when kind = \\\"artifact\\\"\\n            [ contexts\\n                {\\n                    $$ propertyName \\\"..name..\\\"\\n                    $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\"toIttf/file.svg\":{\"type\":\"CODE\",\"contents\":\"\\r\\n<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg version=\\\"1.1\\\" id=\\\"Layer_1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 106.86 122.88\\\" style=\\\"enable-background:new 0 0 106.86 122.88\\\" xml:space=\\\"preserve\\\"><g><path d=\\\"M46.77,116.58c1.74,0,3.15,1.41,3.15,3.15c0,1.74-1.41,3.15-3.15,3.15H7.33c-2.02,0-3.85-0.82-5.18-2.15 C0.82,119.4,0,117.57,0,115.55V7.33c0-2.02,0.82-3.85,2.15-5.18C3.48,0.82,5.31,0,7.33,0h90.02c2.02,0,3.85,0.83,5.18,2.15 c1.33,1.33,2.15,3.16,2.15,5.18v50.14c0,1.74-1.41,3.15-3.15,3.15c-1.74,0-3.15-1.41-3.15-3.15V7.33c0-0.28-0.12-0.54-0.31-0.72 c-0.19-0.19-0.45-0.31-0.72-0.31H7.33c-0.28,0-0.54,0.12-0.73,0.3C6.42,6.8,6.3,7.05,6.3,7.33v108.21c0,0.28,0.12,0.54,0.31,0.72 c0.19,0.19,0.45,0.31,0.73,0.31H46.77L46.77,116.58z M98.7,74.34c-0.51-0.49-1.1-0.72-1.78-0.71c-0.68,0.01-1.26,0.28-1.74,0.78 l-3.91,4.07l10.97,10.59l3.95-4.11c0.47-0.48,0.67-1.1,0.66-1.78c-0.01-0.67-0.25-1.28-0.73-1.74L98.7,74.34L98.7,74.34z M78.21,114.01c-1.45,0.46-2.89,0.94-4.33,1.41c-1.45,0.48-2.89,0.97-4.33,1.45c-3.41,1.12-5.32,1.74-5.72,1.85 c-0.39,0.12-0.16-1.48,0.7-4.81l2.71-10.45l0,0l20.55-21.38l10.96,10.55L78.21,114.01L78.21,114.01z M31.58,41.08 c-1.74,0-3.15-1.41-3.15-3.15s1.41-3.15,3.15-3.15h41.54c1.74,0,3.15,1.41,3.15,3.15s-1.41,3.15-3.15,3.15H31.58L31.58,41.08z M31.58,85.77c-1.74,0-3.16-1.43-3.16-3.19s1.41-3.19,3.16-3.19h20.47c1.74,0,3.16,1.43,3.16,3.19s-1.41,3.19-3.16,3.19H31.58 L31.58,85.77z M31.58,63.41c-1.74,0-3.15-1.41-3.15-3.15s1.41-3.15,3.15-3.15h41.54c1.74,0,3.15,1.41,3.15,3.15 s-1.41,3.15-3.15,3.15H31.58L31.58,63.41z\\\"/></g></svg>\"},\"t/svg/edit-write.svg.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    version 1.1\\r\\n    id Layer_1\\r\\n    xmlns http://www.w3.org/2000/svg\\r\\n    xmlns:xlink http://www.w3.org/1999/xlink\\r\\n    x 0px\\r\\n    y 0px\\r\\n    view-box 0 0 106.86 122.88\\r\\n    style enable-background:new 0 0 106.86 122.88\\r\\n    xml:space preserve\\r\\n    g\\r\\n        path\\r\\n            d M46.77,116.58\\r\\n              \\\\ c1.74,0,3.15,1.41,3.15,3.15\\r\\n              \\\\ c0,1.74-1.41,3.15-3.15,3.15\\r\\n              \\\\ H7.33c-2.02,0-3.85-0.82-5.18-2.15 \\r\\n              \\\\ C0.82,119.4,0,117.57,0,115.55\\r\\n              \\\\ V7.33c0-2.02,0.82-3.85,2.15-5.18\\r\\n              \\\\ C3.48,0.82,5.31,0,7.33,0\\r\\n              \\\\ h90.02\\r\\n              \\\\ c2.02,0,3.85,0.83,5.18,2.15 \\r\\n              \\\\ c1.33,1.33,2.15,3.16,2.15,5.18\\r\\n              \\\\ v50.14\\r\\n              \\\\ c0,1.74-1.41,3.15-3.15,3.15\\r\\n              \\\\ c-1.74,0-3.15-1.41-3.15-3.15\\r\\n              \\\\ V7.33c0-0.28-0.12-0.54-0.31-0.72 \\r\\n              \\\\ c-0.19-0.19-0.45-0.31-0.72-0.31\\r\\n              \\\\ H7.33c-0.28,0-0.54,0.12-0.73,0.3\\r\\n              \\\\ C6.42,6.8,6.3,7.05,6.3,7.33\\r\\n              \\\\ v108.21c0,0.28,0.12,0.54,0.31,0.72 \\r\\n              \\\\ c0.19,0.19,0.45,0.31,0.73,0.31\\r\\n              \\\\ H46.77\\r\\n              \\\\ L46.77,116.58\\r\\n              \\\\ z M98.7,74.34\\r\\n              \\\\ c-0.51-0.49-1.1-0.72-1.78-0.71\\r\\n              \\\\ c-0.68,0.01-1.26,0.28-1.74,0.78 \\r\\n              \\\\ l-3.91,4.07\\r\\n              \\\\ l10.97,10.59\\r\\n              \\\\ l3.95-4.11\\r\\n              \\\\ c0.47-0.48,0.67-1.1,0.66-1.78\\r\\n              \\\\ c-0.01-0.67-0.25-1.28-0.73-1.74\\r\\n              \\\\ L98.7,74.34L98.7,74.34z \\r\\n              \\\\ M78.21,114.01c-1.45,0.46-2.89,0.94-4.33,1.41\\r\\n              \\\\ c-1.45,0.48-2.89,0.97-4.33,1.45\\r\\n              \\\\ c-3.41,1.12-5.32,1.74-5.72,1.85 \\r\\n              \\\\ c-0.39,0.12-0.16-1.48,0.7-4.81l2.71-10.45l0,0l20.55-21.38\\r\\n              l10.96,10.55\\r\\n              L78.21,114.01\\r\\n              L78.21,114.01z \\r\\n              M31.58,41.08 c-1.74,0-3.15-1.41-3.15-3.15s1.41-3.15,3.15-3.15h41.54\\r\\n              c1.74,0,3.15,1.41,3.15,3.15s-1.41,3.15-3.15,3.15H31.58L31.58,41.08z \\r\\n              M31.58,85.77c-1.74,0-3.16-1.43-3.16-3.19s1.41-3.19,3.16-3.19h20.47\\r\\n              c1.74,0,3.16,1.43,3.16,3.19s-1.41,3.19-3.16,3.19H31.58 L31.58,85.77z M31.58,63.41\\r\\n              c-1.74,0-3.15-1.41-3.15-3.15s1.41-3.15,3.15-3.15h41.54\\r\\n              c1.74,0,3.15,1.41,3.15,3.15 s-1.41,3.15-3.15,3.15H31.58\\r\\n              \\\\ L31.58,63.41z\\r\\n\"},\"test.svg.ittf\":{\"type\":\"CODE\",\"contents\":\"svg\\r\\n  $include svg/edit-write\"}}"
    }
  ]
}