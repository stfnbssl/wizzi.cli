{
  "oper": "getPackageProductionList",
  "ok": true,
  "item": [
    {
      "_id": "63189f0623d83a1c9a3902fe",
      "id": "63189f0623d83a1c9a3902fe",
      "owner": "stfnbssl",
      "name": "ts/express/mongo/sample",
      "description": "Sample package typescript+express+mongodb",
      "packiFiles": "{\"index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"\"},\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$name \\\"..name..\\\"\\n        [ contexts\\n            {\\n                $$propertyName \\\"..name..\\\"\\n                $$artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$propertyName \\\"..name..\\\"\\n            $$artifactName \\\"..name..\\\"\"},\".packi/properties/index.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    [ properties\\n        {\\n            name \\\"name\\\"\\n            type \\\"string\\\"\\n        string( kind )\"},\".packi/properties/t/string.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"string\\\"\\n    $hook\"},\".packi/properties/t/boolean.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"boolean\\\"\\n    $hook\"},\".packi/properties/t/number.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"number\\\"\\n    $hook\"},\".packi/properties/t/object.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"object\\\"\\n    [ properties\\n        $hook\"},\".packi/properties/t/array.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"array\\\"\\n    [ properties\\n        $hook\"}}"
    },
    {
      "_id": "631b69dad01c5488c4960c35",
      "id": "631b69dad01c5488c4960c35",
      "owner": "stfnbssl",
      "name": "test/meta.wizzi.folder",
      "description": "Package for testing a meta wizzi folder production",
      "packiFiles": "{\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        name \\\"ts/express\\\"\\n        { cliCtx\\n            kind \\\"artifact\\\" $$ file|artifact\\n            filePath \\\".packi/cliCtx.json.ittf\\\" $$ when kind = \\\"file\\\"\\n            { artifact\\n              name \\\"lab/meta/postgres.json\\\" $$ when kind = \\\"artifact\\\"\\n            [ contexts\\n                {\\n                    $$ propertyName \\\"..name..\\\"\\n                    $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\".packi/properties/index.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    [ properties\\n        {\\n            name \\\"name\\\"\\n            type \\\"string\\\"\\n        string( kind )\"},\".packi/properties/t/string.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"string\\\"\\n    $hook\"},\".packi/properties/t/boolean.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"boolean\\\"\\n    $hook\"},\".packi/properties/t/number.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"number\\\"\\n    $hook\"},\".packi/properties/t/object.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"object\\\"\\n    [ properties\\n        $hook\"},\".packi/properties/t/array.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"array\\\"\\n    [ properties\\n        $hook\"},\".packi/cliCtx.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\r\\n  message \\\"Stefi\\\"\"},\".wizzi/index.html.ittf\":{\"type\":\"CODE\",\"contents\":\"html\\n    $include ./friends\\n    ul\\n        lia.html( stefi, www.stefi.com\\n        lia.html( annie, www.annie.com\\n        $foreach f in friends\\n            lia.html( ${f}, www.${f}.com\\n\",\"generated\":true},\".wizzi/t/friends.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$\\n    var friends = [\\\"mary\\\",\\\"arthur\\\"];\\n\",\"generated\":true},\".wizzi/t/lia.html.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\n    $params text, href\\n    li\\n        a ${text}\\n            href ${href}\\n\",\"generated\":true}}"
    },
    {
      "_id": "6338304e2af9716cb6850a83",
      "id": "6338304e2af9716cb6850a83",
      "owner": "stfnbssl",
      "name": "wizzi/editor",
      "description": "Package overrides for wizzi.apps/wizzi.editor",
      "packiFiles": "{\"index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\"},\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n  [ tfolders\\n    {\\n      name \\\"wizzi/tsx\\\"\\n  [ contexts\\n    {\\n      $$ propertyName \\\"..name..\\\"\\n      $$ artifactName \\\"..name..\\\"\"},\".packi/properties/index.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    [ properties\\n        {\\n            name \\\"name\\\"\\n            type \\\"string\\\"\\n        string( kind )\"},\".packi/properties/t/string.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"string\\\"\\n    $hook\"},\".packi/properties/t/boolean.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"boolean\\\"\\n    $hook\"},\".packi/properties/t/number.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"number\\\"\\n    $hook\"},\".packi/properties/t/object.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"object\\\"\\n    [ properties\\n        $hook\"},\".packi/properties/t/array.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"array\\\"\\n    [ properties\\n        $hook\"},\".wizzi-hub/src/components/Packi/PackiPanel.tsx.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\r\\n    $\\r\\n        var md = {\\r\\n            Name: \\\"PackiPanel\\\",\\r\\n            components: [],\\r\\n            icons: [],\\r\\n            props: [\\r\\n                {name: 'onSubmitGithubClone', type: 'any'}\\r\\n            ],\\r\\n            stateProps: [\\r\\n                {name: 'currentModal', type: 'string'}\\r\\n            ]\\r\\n        }\\r\\n        //\\r\\n    component/muiv3( &md )\\r\\n        $append imports\\r\\n            import ModalGithubClone from './ModalGithubClone'\\r\\n        $append props\\r\\n        $append state\\r\\n        => _handleDismissEditModal\\r\\n            _ this.setState\\r\\n                { \\r\\n                    @ currentModal null\\r\\n        => _handleOpenModalGithubClone\\r\\n            _ this.setState\\r\\n                { \\r\\n                    @ currentModal 'github-clone'\\r\\n        m render\\r\\n            const \\r\\n                { \\r\\n                    @ onSubmitGithubClone\\r\\n                = this.props\\r\\n            const \\r\\n                { \\r\\n                    @ currentModal\\r\\n                = this.state\\r\\n            return\\r\\n                div\\r\\n                    < Button\\r\\n                        @ onClick {this._handleOpenModalGithubClone}\\r\\n                    < ModalGithubClone \\r\\n                        @ title \\\"Clone github repository\\\"\\r\\n                        @ action \\\"Done\\\"\\r\\n                        @ visible {currentModal === 'github-clone'}\\r\\n                        @ onDismiss {this._handleDismissEditModal}\\r\\n                        @ onSubmit\\r\\n                            => \\r\\n                                param details\\r\\n                                _ onSubmitGithubClone(details)\\r\\n                                _ this._handleDismissEditModal()\\r\\n        $append styles\"},\".wizzi-hub/src/features/packi/actions.tsx.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\r\\n  $\\r\\n    var md = {\\r\\n      name: 'packi',\\r\\n      actions: [\\r\\n        { \\r\\n          name: 'githubClone', \\r\\n          kname: 'GITHUB_CLONE',\\r\\n          requestProps:[\\r\\n            { name: 'owner', type: 'string'},\\r\\n            { name: 'name', type: 'string'},\\r\\n            { name: 'branch', type: 'string'},\\r\\n          ],\\r\\n          responseProps:[\\r\\n            { name: 'clonedGithubRepo', type: 'PackiFiles', ref: true},\\r\\n          ]\\r\\n        }\\r\\n      ]\\r\\n    }\\r\\n    //\\r\\n  redux/actions( &md )\\r\\n    $append imports\\r\\n        import \\r\\n            @ PackiFiles\\r\\n            from './types'\\r\\n    $append consts\\r\\n        const EXECUTE_JOB_SUCCESS = '@@packi/EXECUTE_JOB_SUCCESS'\\r\\n        const EXECUTE_WIZZI_META_FOLDER_SUCCESS = '@@packi/EXECUTE_WIZZI_META_FOLDER_SUCCESS'\\r\\n    $append payloads\\r\\n        export \\r\\n            :interface JobResponsePayload\\r\\n                :extends ResponsePayload\\r\\n                :p generatedArtifacts\\r\\n                    :ref PackiFiles\\r\\n                :p previousArtifacts\\r\\n                    :ref PackiFiles\\r\\n        export \\r\\n            :interface WizziMetaFolderResponsePayload\\r\\n                :extends ResponsePayload\\r\\n                :p generatedIttfDocuments\\r\\n                    :ref PackiFiles\\r\\n\\r\\n    $append calls\\r\\n        export \\r\\n            const executeJobSuccess\\r\\n                _ createStandardAction(EXECUTE_JOB_SUCCESS)\\r\\n                    :param \\r\\n                        :ref JobResponsePayload\\r\\n        export \\r\\n            const executeWizziMetaFolderSuccess\\r\\n                _ createStandardAction(EXECUTE_WIZZI_META_FOLDER_SUCCESS)\\r\\n                    :param \\r\\n                        :ref WizziMetaFolderResponsePayload\"},\".wizzi-hub/src/features/t/redux/actions.tsx.ittf\":{\"type\":\"CODE\",\"contents\":\"$group\\r\\n    $params &md\\r\\n    import\\r\\n        @ deprecated \\r\\n        from \\\"typesafe-actions\\\"\\r\\n    const \\r\\n        {\\r\\n            @ createStandardAction\\r\\n        = deprecated\\r\\n    import \\r\\n        @ ResponsePayload\\r\\n        from '../../store'\\r\\n    $hook imports\\r\\n    const NO_ERROR = '@@${md.name}/NO_ERROR'\\r\\n    $foreach action in md.actions\\r\\n        const ${action.kname.toUpperCase()}_REQUEST = '@@${md.name}/${action.kname.toUpperCase()}_REQUEST'\\r\\n        const ${action.kname.toUpperCase()}_SUCCESS = '@@${md.name}/${action.kname.toUpperCase()}_SUCCESS'\\r\\n        const ${action.kname.toUpperCase()}_ERROR = '@@${md.name}/${action.kname.toUpperCase()}_ERROR'\\r\\n    $hook consts\\r\\n    +\\r\\n    $foreach action in md.actions\\r\\n        export \\r\\n            :interface ${_.capitalize(action.name)}RequestPayload\\r\\n                $foreach prop in action.requestProps\\r\\n                  setPropType( &prop )\\r\\n        +\\r\\n        export \\r\\n            :interface ${_.capitalize(action.name)}ResponsePayload\\r\\n                $foreach prop in action.responseProps\\r\\n                  setPropType( &prop )\\r\\n        +\\r\\n    $hook payloads\\r\\n    $foreach action in md.actions\\r\\n        export \\r\\n            const ${action.name}Request\\r\\n                _ createStandardAction(${action.kname.toUpperCase()}_REQUEST)\\r\\n                    :param \\r\\n                        :ref ${_.capitalize(action.name)}RequestPayload\\r\\n        export \\r\\n            const ${action.name}Success\\r\\n                _ createStandardAction(${action.kname.toUpperCase()}_SUCCESS)\\r\\n                    :param \\r\\n                        :ref ${_.capitalize(action.name)}ResponsePayload\\r\\n        export \\r\\n            const ${action.name}Error\\r\\n                _ createStandardAction(${action.kname.toUpperCase()}_ERROR)\\r\\n                    :param string                \\r\\n    $hook calls\\r\\n    export\\r\\n        const NoError\\r\\n            _ createStandardAction(NO_ERROR)\\r\\n                :param string\"},\"github/stfnbssl/vscode-ittf/.gitignore\":{\"type\":\"CODE\",\"contents\":\"# Logs\\nlogs\\n*.log\\nnpm-debug.log*\\nyarn-debug.log*\\nyarn-error.log*\\n\\n# Runtime data\\npids\\n*.pid\\n*.seed\\n*.pid.lock\\n\\n# Directory for instrumented libs generated by jscoverage/JSCover\\nlib-cov\\n\\n# Coverage directory used by tools like istanbul\\ncoverage\\n\\n# nyc test coverage\\n.nyc_output\\n\\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\\n.grunt\\n\\n# Bower dependency directory (https://bower.io/)\\nbower_components\\n\\n# node-waf configuration\\n.lock-wscript\\n\\n# Compiled binary addons (https://nodejs.org/api/addons.html)\\nbuild/Release\\n\\n# Dependency directories\\nnode_modules/\\njspm_packages/\\n\\n# TypeScript v1 declaration files\\ntypings/\\n\\n# Optional npm cache directory\\n.npm\\n\\n# Optional eslint cache\\n.eslintcache\\n\\n# Optional REPL history\\n.node_repl_history\\n\\n# Output of 'npm pack'\\n*.tgz\\n\\n# Yarn Integrity file\\n.yarn-integrity\\n\\n# dotenv environment variables file\\n.env\\n\\n# next.js build output\\n.next\\n\"},\"github/stfnbssl/vscode-ittf/.vscodeignore\":{\"type\":\"CODE\",\"contents\":\".vscode/**\\n.vscode-test/**\\n.gitignore\\nvsc-extension-quickstart.md\\n\"},\"github/stfnbssl/vscode-ittf/CHANGELOG.md\":{\"type\":\"CODE\",\"contents\":\"# Change Log\\n\\nAll notable changes to the \\\"ittf\\\" extension will be documented in this file.\\n\\nCheck [Keep a Changelog](http://keepachangelog.com/) for recommendations on how to structure this file.\\n\\n## [Unreleased]\\n\\n- Initial release\"},\"github/stfnbssl/vscode-ittf/LICENSE\":{\"type\":\"CODE\",\"contents\":\"MIT License\\n\\nCopyright (c) 2019 Stefano Bassoli\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\"},\"github/stfnbssl/vscode-ittf/README.md\":{\"type\":\"CODE\",\"contents\":\"# vscode-ittf\\nVSCode language services for .ittf documents.\\n\\n## Suggested colors\\n+ entity.name.function.root green\\n+ string yellow\\n+ keyword red\\n+ support.class azure\\n+ variable.parameter orange\\n\\n### The suggested VsCode theme is: Monokai\"},\"github/stfnbssl/vscode-ittf/language-configuration.json\":{\"type\":\"CODE\",\"contents\":\"{\\n    \\\"comments\\\": {\\n        // symbol used for single line comment. Remove this entry if your language does not support line comments\\n        \\\"lineComment\\\": \\\"$$\\\",\\n        // symbols used for start and end a block comment. Remove this entry if your language does not support block comments\\n        \\\"blockComment\\\": [ \\\"$*\\\", \\\"*$\\\" ]\\n    },\\n}\"},\"github/stfnbssl/vscode-ittf/package.json\":{\"type\":\"CODE\",\"contents\":\"{\\n    \\\"name\\\": \\\"ittf-sinthax-highlighter\\\",\\n    \\\"displayName\\\": \\\"ITTF sinthax highlighter\\\",\\n    \\\"description\\\": \\\"VsCode language extension for .ittf files\\\",\\n    \\\"version\\\": \\\"0.0.1\\\",\\n    \\\"author\\\": {\\\"name\\\": \\\"Stefano Bassoli\\\", \\\"email\\\": \\\"stfn.bssl@gmail.com\\\"},\\n    \\\"engines\\\": {\\n        \\\"vscode\\\": \\\"^1.32.0\\\"\\n    },\\n    \\\"categories\\\": [\\n        \\\"Programming Languages\\\"\\n    ],\\n    \\\"contributes\\\": {\\n        \\\"languages\\\": [{\\n            \\\"id\\\": \\\"ittf\\\",\\n            \\\"aliases\\\": [\\\"ITTF\\\", \\\"ittf\\\"],\\n            \\\"extensions\\\": [\\\".ittf\\\"],\\n            \\\"configuration\\\": \\\"./language-configuration.json\\\"\\n        }],\\n        \\\"grammars\\\": [{\\n            \\\"language\\\": \\\"ittf\\\",\\n            \\\"scopeName\\\": \\\"source.ittf\\\",\\n            \\\"path\\\": \\\"./syntaxes/ittf.tmLanguage.json\\\"\\n        }]\\n    }\\n}\"},\"github/stfnbssl/vscode-ittf/vsc-extension-quickstart.md\":{\"type\":\"CODE\",\"contents\":\"# Welcome to your VS Code Extension\\n\\n## What's in the folder\\n\\n* This folder contains all of the files necessary for your extension.\\n* `package.json` - this is the manifest file in which you declare your language support and define the location of the grammar file that has been copied into your extension.\\n* `syntaxes/ittf.tmLanguage.json` - this is the Text mate grammar file that is used for tokenization.\\n* `language-configuration.json` - this is the language configuration, defining the tokens that are used for comments and brackets.\\n\\n## Get up and running straight away\\n\\n* Make sure the language configuration settings in `language-configuration.json` are accurate.\\n* Press `F5` to open a new window with your extension loaded.\\n* Create a new file with a file name suffix matching your language.\\n* Verify that syntax highlighting works and that the language configuration settings are working.\\n\\n## Make changes\\n\\n* You can relaunch the extension from the debug toolbar after making changes to the files listed above.\\n* You can also reload (`Ctrl+R` or `Cmd+R` on Mac) the VS Code window with your extension to load your changes.\\n\\n## Add more language features\\n\\n* To add features such as intellisense, hovers and validators check out the VS Code extenders documentation at https://code.visualstudio.com/docs\\n\\n## Install your extension\\n\\n* To start using your extension with Visual Studio Code copy it into the `<user home>/.vscode/extensions` folder and restart Code.\\n* To share your extension with the world, read on https://code.visualstudio.com/docs about publishing an extension.\\n\"},\"github/stfnbssl/vscode-ittf/.vscode/launch.json\":{\"type\":\"CODE\",\"contents\":\"// A launch configuration that launches the extension inside a new window\\n// Use IntelliSense to learn about possible attributes.\\n// Hover to view descriptions of existing attributes.\\n// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\\n{\\n\\t\\\"version\\\": \\\"0.2.0\\\",\\n    \\\"configurations\\\": [\\n        {\\n            \\\"name\\\": \\\"Extension\\\",\\n            \\\"type\\\": \\\"extensionHost\\\",\\n            \\\"request\\\": \\\"launch\\\",\\n            \\\"runtimeExecutable\\\": \\\"${execPath}\\\",\\n            \\\"args\\\": [\\n                \\\"--extensionDevelopmentPath=${workspaceFolder}\\\"\\n            ]\\n        }\\n    ]\\n}\"},\"github/stfnbssl/vscode-ittf/syntaxes/ittf.tmLanguage.json\":{\"type\":\"CODE\",\"contents\":\"{\\n\\t\\\"$schema\\\": \\\"https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json\\\",\\n\\t\\\"name\\\": \\\"ITTF\\\",\\n\\t\\\"patterns\\\": [\\n\\t\\t{ \\\"include\\\": \\\"#commentNode\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#nodeRoot\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#nodeLeaf\\\" },\\n        { \\\"include\\\": \\\"#interpolation\\\" },\\n        { \\\"include\\\": \\\"#interpolation_2\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#command\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#mix\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#include\\\" },\\n        { \\\"include\\\": \\\"#script\\\" }\\n\\t],\\n\\t\\\"repository\\\": {\\n\\t\\t\\\"commentNode\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"match\\\": \\\"^\\\\\\\\s*(\\\\\\\\$\\\\\\\\$)(.*)$\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.number-sign.ittf\\\"\\n\\t\\t\\t},{\\n\\t\\t\\t\\t\\\"begin\\\": \\\"^\\\\\\\\s*\\\\\\\\$\\\\\\\\*\\\",\\n\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\*\\\\\\\\$\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.number-sign.ittf\\\"\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"comment\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\$\\\\\\\\$\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\n\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.ittf\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.number-sign.ittf\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\$\\\\\\\\*\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\*\\\\\\\\$\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.ittf\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.number-sign.ittf\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\t\\t\\t\\t\\n\\t\\t},\\n\\t\\t\\\"nodeRoot\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"begin\\\": \\\"^([^($\\\\\\\\s]++)(?!\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\\"end\\\": \\\"$\\\",\\n\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\": \\\"entity.name.function.root\\\"}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#interpolation\\\"\\n\\t\\t\\t\\t\\t},\\n                    {\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#value\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment\\\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t]\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"nodeLeaf\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"begin\\\": \\\"^\\\\\\\\s+([^($\\\\\\\\s]++)(?!\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\\"end\\\": \\\"$\\\",\\n\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\": \\\"entity.name.function.leaf\\\"}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#interpolation\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#interpolation_2\\\"\\n\\t\\t\\t\\t\\t},\\n                    {\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#value\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment\\\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t]\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"value\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"[ \\\\\\\\t](\\\\\\\\w+)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.type\\\"\\n\\t\\t\\t\\t},{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(\\\\\\\\w+)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.class\\\"\\n\\t\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"interpolation\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"match\\\": \\\"(\\\\\\\\$\\\\\\\\{)([^\\\\\\\\}]+)(\\\\\\\\})\\\",\\n\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"keyword\\\" },\\n\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"string\\\" },\\n\\t\\t\\t\\t\\t\\\"3\\\": { \\\"name\\\" : \\\"keyword\\\" }\\n\\t\\t\\t\\t}\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"interpolation_2\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"match\\\": \\\"^(\\\\\\\\s*)(\\\\\\\\$\\\\\\\\{)([^\\\\\\\\}]+)(\\\\\\\\})(\\\\\\\\s*)\\\",\\n\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"keyword\\\" },\\n\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"string\\\" },\\n\\t\\t\\t\\t\\t\\\"3\\\": { \\\"name\\\" : \\\"keyword\\\" },\\n                    \\\"4\\\": { \\\"name\\\" : \\\"string\\\" }\\n\\t\\t\\t\\t}\\n\\t\\t\\t}]\\n\\t\\t},\\n        \\\"command\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"^\\\\\\\\s*(?!\\\\\\\\$include|\\\\\\\\$global)(\\\\\\\\$\\\\\\\\w+)\\\\\\\\s+(.*)\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"variable.parameter\\\" },\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"string\\\" }\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"mix\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"^\\\\\\\\s*([-_\\\\\\\\.\\\\\\\\/\\\\\\\\w]++)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(\\\\\\\\))$|$\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\": \\\"keyword\\\" },\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"punctuation.separator.mix.arguments.ittf\\\" }\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"punctuation.separator.mix.arguments.ittf\\\" }\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.mix.arguments.ittf\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\\,\\\"\\n\\t\\t\\t\\t\\t\\t},{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#argument\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"argument\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\\s*([^\\\\\\\\,\\\\\\\\)]*)\\\\\\\\s*\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"support.function.mix\\\" }\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"include\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n                    \\\"match\\\": \\\"^\\\\\\\\s*(\\\\\\\\$include)\\\\\\\\s+(.*)$\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"keyword\\\" },\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"support.type\\\" }\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"script\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"^(\\\\\\\\s+)(\\\\\\\\$global|\\\\\\\\$)(\\\\\\\\s*)\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"^(?=\\\\\\\\1\\\\\\\\w.*$)\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n                        \\\"2\\\": { \\\"name\\\": \\\"string\\\" }\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"string\\\",\\n\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"^(.*)\\\"\\n\\t\\t\\t\\t\\t}]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t}\\n\\t},\\n\\t\\\"scopeName\\\": \\\"source.ittf\\\"\\n}\"}}"
    },
    {
      "_id": "633bff9b0e119e202c4a215b",
      "id": "633bff9b0e119e202c4a215b",
      "owner": "stfnbssl",
      "name": "__cli_test__",
      "description": "CLI Test",
      "packiFiles": "{\"index.html.ittf\":{\"type\":\"CODE\",\"contents\":\"html\\r\\n  body\\r\\n    # root\\r\\n    script\\r\\n      # var text = 'aa___schema___bb.ittf'\\r\\n      var text = 't/aa.ittf'\\r\\n      set document.getElementById('root').innerHTML \\r\\n        _ interpolate_filename\\r\\n          @ text\\r\\n          {\\r\\n            @ schema 'db'\\r\\n      function interpolate_filename \\r\\n        param text\\r\\n        param ctx\\r\\n        var result = []\\r\\n        var pos = text.indexOf('__')\\r\\n        while pos > -1\\r\\n          var first = text.substr(0, pos)\\r\\n          var remain = text.substring(pos + 2)\\r\\n          set pos = remain.indexOf('__')\\r\\n          if pos > -1\\r\\n            _ result.push(first)\\r\\n            if ctx[remain.substr(0, pos)]\\r\\n              _ result.push(ctx[remain.substr(0, pos)])\\r\\n            else\\r\\n              _ result.push(remain.substr(0, pos))\\r\\n            set remain = remain.substring(pos + 2)\\r\\n            set text = remain\\r\\n            set pos = text.indexOf('__')\\r\\n        _ result.push(text)\\r\\n        return result.join('')\"},\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n\\t[ tfolders\\n\\t[ contexts\"},\"toIttf/wizzify.ts\":{\"type\":\"CODE\",\"contents\":\"import * as React from 'react';\\r\\nimport ButtonUnstyled, {\\r\\n  ButtonUnstyledOwnerState,\\r\\n  ButtonUnstyledProps,\\r\\n} from '@mui/base/ButtonUnstyled';\\r\\n\\r\\nconst Button = React.forwardRef(function Button(\\r\\n  props: ButtonUnstyledProps,\\r\\n  ref: React.ForwardedRef<HTMLButtonElement>,\\r\\n) {\\r\\n  return (\\r\\n    <ButtonUnstyled\\r\\n      {...props}\\r\\n      componentsProps={{\\r\\n        root: (state: ButtonUnstyledOwnerState) => ({\\r\\n          className: `hover:text-cyan-500 transition-colors ${\\r\\n            state.focusVisible ? 'outline-0 ring-2 ring-cyan-500' : ''\\r\\n          }`,\\r\\n        }),\\r\\n      }}\\r\\n      ref={ref}\\r\\n    />\\r\\n  );\\r\\n});\\r\\n\\r\\nexport default Button;\\r\\n\"},\"vanillajs/index.html.ittf\":{\"type\":\"CODE\",\"contents\":\"html \\n    lang en\\n    data-framework javascript\\n    head \\n        meta \\n            charset utf-8\\n        @title VanillaJS • TodoMVC\\n        link \\n            rel stylesheet\\n            href node_modules/todomvc-common/base.css\\n        link \\n            rel stylesheet\\n            href node_modules/todomvc-app-css/index.css\\n    body \\n        section \\n            class todoapp\\n            header \\n                class header\\n                h1 todos\\n                input \\n                    class new-todo\\n                    placeholder What needs to be done?\\n                    autofocus \\n            section \\n                class main\\n                input \\n                    id toggle-all\\n                    class toggle-all\\n                    type checkbox\\n                label Mark all as complete\\n                    for toggle-all\\n                ul \\n                    class todo-list\\n            footer \\n                class footer\\n                span \\n                    class todo-count\\n                ul \\n                    class filters\\n                    li \\n                        a All\\n                            href #/\\n                            class selected\\n                    li \\n                        a Active\\n                            href #/active\\n                    li \\n                        a Completed\\n                            href #/completed\\n                button Clear completed\\n                    class clear-completed\\n        footer \\n            class info\\n            p Double-click to edit a todo\\n            p Created by\\n                a Oscar Godson\\n                    href http://twitter.com/oscargodson\\n            p Refactored by\\n                a Christoph Burgmer\\n                    href https://github.com/cburgmer\\n            p Part of\\n                a TodoMVC\\n                    href http://todomvc.com\\n        js node_modules/todomvc-common/base.js\\n        js js/helpers.js\\n        js js/store.js\\n        js js/model.js\\n        js js/template.js\\n        js js/view.js\\n        js js/controller.js\\n        js js/app.js\\n\"},\"vanillajs/package.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{ \\n    private true\\n    { dependencies\\n        todomvc-common \\\"^1.0.1\\\"\\n        todomvc-app-css \\\"^2.0.1\\\"\\n    { devDependencies\\n        jasmine-core \\\"^2.0.0\\\"\\n\"},\"vanillajs/readme.md.ittf\":{\"type\":\"CODE\",\"contents\":\"{}\"},\"vanillajs/js/app.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    iife \\n        function Todo\\n            param name\\n            set this.storage = new app.Store(name)\\n            set this.model = new app.Model(this.storage)\\n            set this.template = new app.Template()\\n            set this.view = new app.View(this.template)\\n            set this.controller = new app.Controller(this.model, this.view)\\n            #\\n                # *\\n                # * Sets up a brand new Todo list.\\n                # *\\n                # * @param {string} name The name of your new to do list.\\n                # \\n        var todo = new Todo('todos-vanillajs')\\n        function setView\\n            _ todo.controller.setView(document.location.hash)\\n        _ $on(window, 'load', setView)\\n        _ $on(window, 'hashchange', setView)\\n        #\\n            # global app, $on\\n\"},\"vanillajs/js/controller.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    iife \\n        param window\\n        function Controller\\n            param model\\n            param view\\n            var self = this\\n            set self.model = model\\n            set self.view = view\\n            _ self.view.bind\\n                @ 'newTodo'\\n                function \\n                    param title\\n                    _ self.addItem(title)\\n            _ self.view.bind\\n                @ 'itemEdit'\\n                function \\n                    param item\\n                    _ self.editItem(item.id)\\n            _ self.view.bind\\n                @ 'itemEditDone'\\n                function \\n                    param item\\n                    _ self.editItemSave(item.id, item.title)\\n            _ self.view.bind\\n                @ 'itemEditCancel'\\n                function \\n                    param item\\n                    _ self.editItemCancel(item.id)\\n            _ self.view.bind\\n                @ 'itemRemove'\\n                function \\n                    param item\\n                    _ self.removeItem(item.id)\\n            _ self.view.bind\\n                @ 'itemToggle'\\n                function \\n                    param item\\n                    _ self.toggleComplete(item.id, item.completed)\\n            _ self.view.bind\\n                @ 'removeCompleted'\\n                function \\n                    _ self.removeCompletedItems()\\n            _ self.view.bind\\n                @ 'toggleAll'\\n                function \\n                    param status\\n                    _ self.toggleAll(status.completed)\\n            #\\n                # *\\n                # * Takes a model and view and acts as the controller between them\\n                # *\\n                # * @constructor\\n                # * @param {object} model The model instance\\n                # * @param {object} view The view instance\\n                # \\n            #\\n                # *\\n                # * Loads and initialises the view\\n                # *\\n                # * @param {string} '' | 'active' | 'completed'\\n                # \\n        set Controller.prototype.setView =\\n            function \\n                param locationHash\\n                var route = locationHash.split('/')[1]\\n                var page = route || ''\\n                _ this._updateFilterState(page)\\n            #\\n                # *\\n                # * Loads and initialises the view\\n                # *\\n                # * @param {string} '' | 'active' | 'completed'\\n                # \\n            #\\n                # *\\n                # * An event to fire on load. Will get all items and display them in the\\n                # * todo-list\\n                # \\n        set Controller.prototype.showAll =\\n            function \\n                var self = this\\n                _ self.model.read\\n                    function \\n                        param data\\n                        _ self.view.render('showEntries', data)\\n            #\\n                # *\\n                # * An event to fire on load. Will get all items and display them in the\\n                # * todo-list\\n                # \\n            #\\n                # *\\n                # * Renders all active tasks\\n                # \\n        set Controller.prototype.showActive =\\n            function \\n                var self = this\\n                _ self.model.read\\n                    { \\n                        @ completed false\\n                    function \\n                        param data\\n                        _ self.view.render('showEntries', data)\\n            #\\n                # *\\n                # * Renders all active tasks\\n                # \\n            #\\n                # *\\n                # * Renders all completed tasks\\n                # \\n        set Controller.prototype.showCompleted =\\n            function \\n                var self = this\\n                _ self.model.read\\n                    { \\n                        @ completed true\\n                    function \\n                        param data\\n                        _ self.view.render('showEntries', data)\\n            #\\n                # *\\n                # * Renders all completed tasks\\n                # \\n            #\\n                # *\\n                # * An event to fire whenever you want to add an item. Simply pass in the event\\n                # * object and it'll handle the DOM insertion and saving of the new item.\\n                # \\n        set Controller.prototype.addItem =\\n            function \\n                param title\\n                var self = this\\n                if title.trim() === ''\\n                    return \\n                _ self.model.create\\n                    @ title\\n                    function \\n                        _ self.view.render('clearNewTodo')\\n                        _ self._filter(true)\\n            #\\n                # *\\n                # * An event to fire whenever you want to add an item. Simply pass in the event\\n                # * object and it'll handle the DOM insertion and saving of the new item.\\n                # \\n            #\\n                # \\n                # * Triggers the item editing mode.\\n                # \\n        set Controller.prototype.editItem =\\n            function \\n                param id\\n                var self = this\\n                _ self.model.read\\n                    @ id\\n                    function \\n                        param data\\n                        _ self.view.render\\n                            @ 'editItem'\\n                            { \\n                                @ id\\n                                @ title data[0].title\\n            #\\n                # \\n                # * Triggers the item editing mode.\\n                # \\n            #\\n                # \\n                # * Finishes the item editing mode successfully.\\n                # \\n        set Controller.prototype.editItemSave =\\n            function \\n                param id\\n                param title\\n                var self = this\\n                set title = title.trim()\\n                if title.length !== 0\\n                    _ self.model.update\\n                        @ id\\n                        { \\n                            @ title\\n                        function \\n                            _ self.view.render\\n                                @ 'editItemDone'\\n                                { \\n                                    @ id\\n                                    @ title\\n                else\\n                    _ self.removeItem(id)\\n            #\\n                # \\n                # * Finishes the item editing mode successfully.\\n                # \\n            #\\n                # \\n                # * Cancels the item editing mode.\\n                # \\n        set Controller.prototype.editItemCancel =\\n            function \\n                param id\\n                var self = this\\n                _ self.model.read\\n                    @ id\\n                    function \\n                        param data\\n                        _ self.view.render\\n                            @ 'editItemDone'\\n                            { \\n                                @ id\\n                                @ title data[0].title\\n            #\\n                # \\n                # * Cancels the item editing mode.\\n                # \\n            #\\n                # *\\n                # * By giving it an ID it'll find the DOM element matching that ID,\\n                # * remove it from the DOM and also remove it from storage.\\n                # *\\n                # * @param {number} id The ID of the item to remove from the DOM and\\n                # * storage\\n                # \\n        set Controller.prototype.removeItem =\\n            function \\n                param id\\n                var self = this\\n                _ self.model.remove\\n                    @ id\\n                    function \\n                        _ self.view.render('removeItem', id)\\n                _ self._filter()\\n            #\\n                # *\\n                # * By giving it an ID it'll find the DOM element matching that ID,\\n                # * remove it from the DOM and also remove it from storage.\\n                # *\\n                # * @param {number} id The ID of the item to remove from the DOM and\\n                # * storage\\n                # \\n            #\\n                # *\\n                # * Will remove all completed items from the DOM and storage.\\n                # \\n        set Controller.prototype.removeCompletedItems =\\n            function \\n                var self = this\\n                _ self.model.read\\n                    { \\n                        @ completed true\\n                    function \\n                        param data\\n                        _ data.forEach\\n                            function \\n                                param item\\n                                _ self.removeItem(item.id)\\n                _ self._filter()\\n            #\\n                # *\\n                # * Will remove all completed items from the DOM and storage.\\n                # \\n            #\\n                # *\\n                # * Give it an ID of a model and a checkbox and it will update the item\\n                # * in storage based on the checkbox's state.\\n                # *\\n                # * @param {number} id The ID of the element to complete or uncomplete\\n                # * @param {object} checkbox The checkbox to check the state of complete\\n                # *                          or not\\n                # * @param {boolean|undefined} silent Prevent re-filtering the todo items\\n                # \\n        set Controller.prototype.toggleComplete =\\n            function \\n                param id\\n                param completed\\n                param silent\\n                var self = this\\n                _ self.model.update\\n                    @ id\\n                    { \\n                        @ completed\\n                    function \\n                        _ self.view.render\\n                            @ 'elementComplete'\\n                            { \\n                                @ id\\n                                @ completed\\n                if !silent\\n                    _ self._filter()\\n            #\\n                # *\\n                # * Give it an ID of a model and a checkbox and it will update the item\\n                # * in storage based on the checkbox's state.\\n                # *\\n                # * @param {number} id The ID of the element to complete or uncomplete\\n                # * @param {object} checkbox The checkbox to check the state of complete\\n                # *                          or not\\n                # * @param {boolean|undefined} silent Prevent re-filtering the todo items\\n                # \\n            #\\n                # *\\n                # * Will toggle ALL checkboxes' on/off state and completeness of models.\\n                # * Just pass in the event object.\\n                # \\n        set Controller.prototype.toggleAll =\\n            function \\n                param completed\\n                var self = this\\n                _ self.model.read\\n                    { \\n                        @ completed !completed\\n                    function \\n                        param data\\n                        _ data.forEach\\n                            function \\n                                param item\\n                                _ self.toggleComplete(item.id, completed, true)\\n                _ self._filter()\\n            #\\n                # *\\n                # * Will toggle ALL checkboxes' on/off state and completeness of models.\\n                # * Just pass in the event object.\\n                # \\n            #\\n                # *\\n                # * Updates the pieces of the page which change depending on the remaining\\n                # * number of todos.\\n                # \\n        set Controller.prototype._updateCount =\\n            function \\n                var self = this\\n                _ self.model.getCount\\n                    function \\n                        param todos\\n                        _ self.view.render('updateElementCount', todos.active)\\n                        _ self.view.render\\n                            @ 'clearCompletedButton'\\n                            { \\n                                @ completed todos.completed\\n                                @ visible todos.completed > 0\\n                        _ self.view.render\\n                            @ 'toggleAll'\\n                            { \\n                                @ checked todos.completed === todos.total\\n                        _ self.view.render\\n                            @ 'contentBlockVisibility'\\n                            { \\n                                @ visible todos.total > 0\\n            #\\n                # *\\n                # * Updates the pieces of the page which change depending on the remaining\\n                # * number of todos.\\n                # \\n            #\\n                # *\\n                # * Re-filters the todo items, based on the active route.\\n                # * @param {boolean|undefined} force  forces a re-painting of todo items.\\n                # \\n        set Controller.prototype._filter =\\n            function \\n                param force\\n                var activeRoute = this._activeRoute.charAt(0).toUpperCase() + this._activeRoute.substr(1)\\n                    # Update the elements on the page, which change with each completed todo\\n                _ this._updateCount()\\n                    # Update the elements on the page, which change with each completed todo\\n                    # If the last active route isn't \\\"All\\\", or we're switching routes, we\\n                    # re-create the todo item elements, calling:\\n                    # this.show[All|Active|Completed]();\\n                if force || this._lastActiveRoute !== 'All' || this._lastActiveRoute !== activeRoute\\n                    _ this['show' + activeRoute]()\\n                set this._lastActiveRoute = activeRoute\\n            #\\n                # *\\n                # * Re-filters the todo items, based on the active route.\\n                # * @param {boolean|undefined} force  forces a re-painting of todo items.\\n                # \\n            #\\n                # *\\n                # * Simply updates the filter nav's selected states\\n                # \\n        set Controller.prototype._updateFilterState =\\n            function \\n                param currentPage\\n                set this._activeRoute = currentPage\\n                    # Store a reference to the active route, allowing us to re-filter todo\\n                    # items as they are marked complete or incomplete.\\n                if currentPage === ''\\n                    set this._activeRoute = 'All'\\n                _ this._filter()\\n                _ this.view.render('setFilter', currentPage)\\n            #\\n                # *\\n                # * Simply updates the filter nav's selected states\\n                # \\n            # Export to window\\n        set window.app =\\n            || \\n                + window.app\\n                { \\n            # Export to window\\n        set window.app.Controller = Controller\\n        (\\n            @ window\\n\"},\"vanillajs/js/helpers.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    iife \\n        param window\\n        set window.qs =\\n            function \\n                param selector\\n                param scope\\n                return (scope || document).querySelector(selector)\\n            # Get element(s) by CSS selector:\\n        set window.qsa =\\n            function \\n                param selector\\n                param scope\\n                return (scope || document).querySelectorAll(selector)\\n            # addEventListener wrapper:\\n        set window.$on =\\n            function \\n                param target\\n                param type\\n                param callback\\n                param useCapture\\n                _ target.addEventListener(type, callback, !!useCapture)\\n            # addEventListener wrapper:\\n            # Attach a handler to event for all elements that match the selector,\\n            # now or in the future, based on a root element\\n        set window.$delegate =\\n            function \\n                param target\\n                param selector\\n                param type\\n                param handler\\n                function dispatchEvent\\n                    param event\\n                    var targetElement = event.target\\n                    var potentialElements = window.qsa(selector, target)\\n                    var hasMatch = Array.prototype.indexOf.call(potentialElements, targetElement) >= 0\\n                    if hasMatch\\n                        _ handler.call(targetElement, event)\\n                    # https://developer.mozilla.org/en-US/docs/Web/Events/blur\\n                var useCapture = type === 'blur' || type === 'focus'\\n                    # https://developer.mozilla.org/en-US/docs/Web/Events/blur\\n                _ window.$on(target, type, dispatchEvent, useCapture)\\n            # Attach a handler to event for all elements that match the selector,\\n            # now or in the future, based on a root element\\n            # Find the element's parent with the given tag name:\\n            # $parent(qs('a'), 'div');\\n        set window.$parent =\\n            function \\n                param element\\n                param tagName\\n                if !element.parentNode\\n                    return \\n                if element.parentNode.tagName.toLowerCase() === tagName.toLowerCase()\\n                    return element.parentNode\\n                return window.$parent(element.parentNode, tagName)\\n            # Find the element's parent with the given tag name:\\n            # $parent(qs('a'), 'div');\\n            # Allow for looping on nodes by chaining:\\n            # qsa('.foo').forEach(function () {})\\n        set NodeList.prototype.forEach = Array.prototype.forEach\\n            # Allow for looping on nodes by chaining:\\n            # qsa('.foo').forEach(function () {})\\n        (\\n            @ window\\n        #\\n            # global NodeList\\n\"},\"vanillajs/js/model.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    iife \\n        param window\\n        function Model\\n            param storage\\n            set this.storage = storage\\n            #\\n                # *\\n                # * Creates a new Model instance and hooks up the storage.\\n                # *\\n                # * @constructor\\n                # * @param {object} storage A reference to the client side storage class\\n                # \\n            #\\n                # *\\n                # * Creates a new todo model\\n                # *\\n                # * @param {string} [title] The title of the task\\n                # * @param {function} [callback] The callback to fire after the model is created\\n                # \\n        set Model.prototype.create =\\n            function \\n                param title\\n                param callback\\n                set title = title || ''\\n                set callback =\\n                    || \\n                        + callback\\n                        function \\n                var newItem\\n                    { \\n                        @ title title.trim()\\n                        @ completed false\\n                _ this.storage.save(newItem, callback)\\n            #\\n                # *\\n                # * Creates a new todo model\\n                # *\\n                # * @param {string} [title] The title of the task\\n                # * @param {function} [callback] The callback to fire after the model is created\\n                # \\n            #\\n                # *\\n                # * Finds and returns a model in storage. If no query is given it'll simply\\n                # * return everything. If you pass in a string or number it'll look that up as\\n                # * the ID of the model to find. Lastly, you can pass it an object to match\\n                # * against.\\n                # *\\n                # * @param {string|number|object} [query] A query to match models against\\n                # * @param {function} [callback] The callback to fire after the model is found\\n                # *\\n                # * @example\\n                # * model.read(1, func); // Will find the model with an ID of 1\\n                # * model.read('1'); // Same as above\\n                # * //Below will find a model with foo equalling bar and hello equalling world.\\n                # * model.read({ foo: 'bar', hello: 'world' });\\n                # \\n        set Model.prototype.read =\\n            function \\n                param query\\n                param callback\\n                var queryType = typeof query\\n                set callback =\\n                    || \\n                        + callback\\n                        function \\n                if queryType === 'function'\\n                    set callback = query\\n                    return this.storage.findAll(callback)\\n                else\\n                    if queryType === 'string' || queryType === 'number'\\n                        set query = parseInt(query, 10)\\n                        _ this.storage.find\\n                            { \\n                                @ id query\\n                            @ callback\\n                    else\\n                        _ this.storage.find(query, callback)\\n            #\\n                # *\\n                # * Finds and returns a model in storage. If no query is given it'll simply\\n                # * return everything. If you pass in a string or number it'll look that up as\\n                # * the ID of the model to find. Lastly, you can pass it an object to match\\n                # * against.\\n                # *\\n                # * @param {string|number|object} [query] A query to match models against\\n                # * @param {function} [callback] The callback to fire after the model is found\\n                # *\\n                # * @example\\n                # * model.read(1, func); // Will find the model with an ID of 1\\n                # * model.read('1'); // Same as above\\n                # * //Below will find a model with foo equalling bar and hello equalling world.\\n                # * model.read({ foo: 'bar', hello: 'world' });\\n                # \\n            #\\n                # *\\n                # * Updates a model by giving it an ID, data to update, and a callback to fire when\\n                # * the update is complete.\\n                # *\\n                # * @param {number} id The id of the model to update\\n                # * @param {object} data The properties to update and their new value\\n                # * @param {function} callback The callback to fire when the update is complete.\\n                # \\n        set Model.prototype.update =\\n            function \\n                param id\\n                param data\\n                param callback\\n                _ this.storage.save(data, callback, id)\\n            #\\n                # *\\n                # * Updates a model by giving it an ID, data to update, and a callback to fire when\\n                # * the update is complete.\\n                # *\\n                # * @param {number} id The id of the model to update\\n                # * @param {object} data The properties to update and their new value\\n                # * @param {function} callback The callback to fire when the update is complete.\\n                # \\n            #\\n                # *\\n                # * Removes a model from storage\\n                # *\\n                # * @param {number} id The ID of the model to remove\\n                # * @param {function} callback The callback to fire when the removal is complete.\\n                # \\n        set Model.prototype.remove =\\n            function \\n                param id\\n                param callback\\n                _ this.storage.remove(id, callback)\\n            #\\n                # *\\n                # * Removes a model from storage\\n                # *\\n                # * @param {number} id The ID of the model to remove\\n                # * @param {function} callback The callback to fire when the removal is complete.\\n                # \\n            #\\n                # *\\n                # * WARNING: Will remove ALL data from storage.\\n                # *\\n                # * @param {function} callback The callback to fire when the storage is wiped.\\n                # \\n        set Model.prototype.removeAll =\\n            function \\n                param callback\\n                _ this.storage.drop(callback)\\n            #\\n                # *\\n                # * WARNING: Will remove ALL data from storage.\\n                # *\\n                # * @param {function} callback The callback to fire when the storage is wiped.\\n                # \\n            #\\n                # *\\n                # * Returns a count of all todos\\n                # \\n        set Model.prototype.getCount =\\n            function \\n                param callback\\n                var todos\\n                    { \\n                        @ active 0\\n                        @ completed 0\\n                        @ total 0\\n                _ this.storage.findAll\\n                    function \\n                        param data\\n                        _ data.forEach\\n                            function \\n                                param todo\\n                                if todo.completed\\n                                    set todos.completed++\\n                                else\\n                                    set todos.active++\\n                                set todos.total++\\n                        _ callback(todos)\\n            #\\n                # *\\n                # * Returns a count of all todos\\n                # \\n            # Export to window\\n        set window.app =\\n            || \\n                + window.app\\n                { \\n            # Export to window\\n        set window.app.Model = Model\\n        (\\n            @ window\\n\"},\"vanillajs/js/template.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    iife \\n        param window\\n        var htmlEscapes\\n            { \\n                @ '&' '&amp;'\\n                @ '<' '&lt;'\\n                @ '>' '&gt;'\\n                @ '\\\"' '&quot;'\\n                @ '\\\\'' '&#x27;'\\n                @ '`' '&#x60;'\\n        var escapeHtmlChar\\n            function \\n                param chr\\n                return htmlEscapes[chr]\\n        var reUnescapedHtml = /[&<>\\\"'`]/g\\n        var reHasUnescapedHtml = new RegExp(reUnescapedHtml.source)\\n        var escape\\n            function \\n                param string\\n                return \\n                    iif (string && reHasUnescapedHtml.test(string))\\n                        then string.replace(reUnescapedHtml, escapeHtmlChar)\\n                        else string\\n            #\\n                # *\\n                # * Sets up defaults for all the Template methods such as a default template\\n                # *\\n                # * @constructor\\n                # \\n        function Template\\n            set this.defaultTemplate = '<li data-id=\\\"{{id}}\\\" class=\\\"{{completed}}\\\">' + '<div class=\\\"view\\\">' + '<input class=\\\"toggle\\\" type=\\\"checkbox\\\" {{checked}}>' + '<label>{{title}}</label>' + '<button class=\\\"destroy\\\"></button>' + '</div>' + '</li>'\\n            #\\n                # *\\n                # * Sets up defaults for all the Template methods such as a default template\\n                # *\\n                # * @constructor\\n                # \\n            #\\n                # *\\n                # * Creates an <li> HTML string and returns it for placement in your app.\\n                # *\\n                # * NOTE: In real life you should be using a templating engine such as Mustache\\n                # * or Handlebars, however, this is a vanilla JS example.\\n                # *\\n                # * @param {object} data The object containing keys you want to find in the\\n                # *                      template to replace.\\n                # * @returns {string} HTML String of an <li> element\\n                # *\\n                # * @example\\n                # * view.show({\\n                # *\\tid: 1,\\n                # *\\ttitle: \\\"Hello World\\\",\\n                # *\\tcompleted: 0,\\n                # * });\\n                # \\n        set Template.prototype.show =\\n            function \\n                param data\\n                var \\n                    decl i\\n                    decl l\\n                var view = ''\\n                for ; i < l; i++\\n                    var template = this.defaultTemplate\\n                    var completed = ''\\n                    var checked = ''\\n                    if data[i].completed\\n                        set completed = 'completed'\\n                        set checked = 'checked'\\n                    set template = template.replace('{{id}}', data[i].id)\\n                    set template = template.replace('{{title}}', escape(data[i].title))\\n                    set template = template.replace('{{completed}}', completed)\\n                    set template = template.replace('{{checked}}', checked)\\n                    set view = view + template\\n                return view\\n            #\\n                # *\\n                # * Creates an <li> HTML string and returns it for placement in your app.\\n                # *\\n                # * NOTE: In real life you should be using a templating engine such as Mustache\\n                # * or Handlebars, however, this is a vanilla JS example.\\n                # *\\n                # * @param {object} data The object containing keys you want to find in the\\n                # *                      template to replace.\\n                # * @returns {string} HTML String of an <li> element\\n                # *\\n                # * @example\\n                # * view.show({\\n                # *\\tid: 1,\\n                # *\\ttitle: \\\"Hello World\\\",\\n                # *\\tcompleted: 0,\\n                # * });\\n                # \\n            #\\n                # *\\n                # * Displays a counter of how many to dos are left to complete\\n                # *\\n                # * @param {number} activeTodos The number of active todos.\\n                # * @returns {string} String containing the count\\n                # \\n        set Template.prototype.itemCounter =\\n            function \\n                param activeTodos\\n                var plural\\n                    iif activeTodos === 1\\n                        then ''\\n                        else 's'\\n                return '<strong>' + activeTodos + '</strong> item' + plural + ' left'\\n            #\\n                # *\\n                # * Displays a counter of how many to dos are left to complete\\n                # *\\n                # * @param {number} activeTodos The number of active todos.\\n                # * @returns {string} String containing the count\\n                # \\n            #\\n                # *\\n                # * Updates the text within the \\\"Clear completed\\\" button\\n                # *\\n                # * @param  {[type]} completedTodos The number of completed todos.\\n                # * @returns {string} String containing the count\\n                # \\n        set Template.prototype.clearCompletedButton =\\n            function \\n                param completedTodos\\n                if completedTodos > 0\\n                    return 'Clear completed'\\n                else\\n                    return ''\\n            #\\n                # *\\n                # * Updates the text within the \\\"Clear completed\\\" button\\n                # *\\n                # * @param  {[type]} completedTodos The number of completed todos.\\n                # * @returns {string} String containing the count\\n                # \\n            # Export to window\\n        set window.app =\\n            || \\n                + window.app\\n                { \\n            # Export to window\\n        set window.app.Template = Template\\n        (\\n            @ window\\n        #\\n            # jshint laxbreak:true\\n\"},\"vanillajs/js/view.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    (\\n        iife \\n            param window\\n            function View\\n                param template\\n                set this.template = template\\n                set this.ENTER_KEY = 13\\n                set this.ESCAPE_KEY = 27\\n                set this.$todoList = qs('.todo-list')\\n                set this.$todoItemCounter = qs('.todo-count')\\n                set this.$clearCompleted = qs('.clear-completed')\\n                set this.$main = qs('.main')\\n                set this.$footer = qs('.footer')\\n                set this.$toggleAll = qs('.toggle-all')\\n                set this.$newTodo = qs('.new-todo')\\n                #\\n                    # *\\n                    # * View that abstracts away the browser's DOM completely.\\n                    # * It has two simple entry points:\\n                    # *\\n                    # *   - bind(eventName, handler)\\n                    # *     Takes a todo application event and registers the handler\\n                    # *   - render(command, parameterObject)\\n                    # *     Renders the given command with the options\\n                    # \\n            set View.prototype._removeItem =\\n                function \\n                    param id\\n                    var elem = qs('[data-id=\\\"' + id + '\\\"]')\\n                    if elem\\n                        _ this.$todoList.removeChild(elem)\\n            set View.prototype._clearCompletedButton =\\n                function \\n                    param completedCount\\n                    param visible\\n                    set this.$clearCompleted.innerHTML = this.template.clearCompletedButton(completedCount)\\n                    set this.$clearCompleted.style.display =\\n                        iif visible\\n                            then 'block'\\n                            else 'none'\\n            set View.prototype._setFilter =\\n                function \\n                    param currentPage\\n                    set qs('.filters .selected').className = ''\\n                    set qs('.filters [href=\\\"#/' + currentPage + '\\\"]').className = 'selected'\\n            set View.prototype._elementComplete =\\n                function \\n                    param id\\n                    param completed\\n                    var listItem = qs('[data-id=\\\"' + id + '\\\"]')\\n                    if !listItem\\n                        return \\n                    set listItem.className =\\n                        iif completed\\n                            then 'completed'\\n                            else ''\\n                        # In case it was toggled from an event and not by clicking the checkbox\\n                    set qs('input', listItem).checked = completed\\n                        # In case it was toggled from an event and not by clicking the checkbox\\n            set View.prototype._editItem =\\n                function \\n                    param id\\n                    param title\\n                    var listItem = qs('[data-id=\\\"' + id + '\\\"]')\\n                    if !listItem\\n                        return \\n                    set listItem.className = listItem.className + ' editing'\\n                    var input = document.createElement('input')\\n                    set input.className = 'edit'\\n                    _ listItem.appendChild(input)\\n                    _ input.focus()\\n                    set input.value = title\\n            set View.prototype._editItemDone =\\n                function \\n                    param id\\n                    param title\\n                    var listItem = qs('[data-id=\\\"' + id + '\\\"]')\\n                    if !listItem\\n                        return \\n                    var input = qs('input.edit', listItem)\\n                    _ listItem.removeChild(input)\\n                    set listItem.className = listItem.className.replace('editing', '')\\n                    _ qsa('label', listItem).forEach\\n                        function \\n                            param label\\n                            set label.textContent = title\\n            set View.prototype.render =\\n                function \\n                    param viewCmd\\n                    param parameter\\n                    var self = this\\n                    var viewCommands\\n                        { \\n                            @ showEntries\\n                                function \\n                                    set self.$todoList.innerHTML = self.template.show(parameter)\\n                            @ removeItem\\n                                function \\n                                    _ self._removeItem(parameter)\\n                            @ updateElementCount\\n                                function \\n                                    set self.$todoItemCounter.innerHTML = self.template.itemCounter(parameter)\\n                            @ clearCompletedButton\\n                                function \\n                                    _ self._clearCompletedButton(parameter.completed, parameter.visible)\\n                            @ contentBlockVisibility\\n                                function \\n                                    set self.$footer.style.display =\\n                                        iif parameter.visible\\n                                            then 'block'\\n                                            else 'none'\\n                            @ toggleAll\\n                                function \\n                                    set self.$toggleAll.checked = parameter.checked\\n                            @ setFilter\\n                                function \\n                                    _ self._setFilter(parameter)\\n                            @ clearNewTodo\\n                                function \\n                                    set self.$newTodo.value = ''\\n                            @ elementComplete\\n                                function \\n                                    _ self._elementComplete(parameter.id, parameter.completed)\\n                            @ editItem\\n                                function \\n                                    _ self._editItem(parameter.id, parameter.title)\\n                            @ editItemDone\\n                                function \\n                                    _ self._editItemDone(parameter.id, parameter.title)\\n                    _ viewCommands[viewCmd]()\\n            set View.prototype._itemId =\\n                function \\n                    param element\\n                    var li = $parent(element, 'li')\\n                    return parseInt(li.dataset.id, 10)\\n            set View.prototype._bindItemEditDone =\\n                function \\n                    param handler\\n                    var self = this\\n                    _ $delegate\\n                        @expr self.$todoList\\n                        @ 'li .edit'\\n                        @ 'blur'\\n                        function \\n                            if !this.dataset.iscanceled\\n                                _ handler\\n                                    { \\n                                        @ id self._itemId(this)\\n                                        @ title this.value\\n                    _ $delegate\\n                        @expr self.$todoList\\n                        @ 'li .edit'\\n                        @ 'keypress'\\n                        function \\n                            param event\\n                            if event.keyCode === self.ENTER_KEY\\n                                _ this.blur()\\n            set View.prototype._bindItemEditCancel =\\n                function \\n                    param handler\\n                    var self = this\\n                    _ $delegate\\n                        @expr self.$todoList\\n                        @ 'li .edit'\\n                        @ 'keyup'\\n                        function \\n                            param event\\n                            if event.keyCode === self.ESCAPE_KEY\\n                                set this.dataset.iscanceled = true\\n                                _ this.blur()\\n                                _ handler\\n                                    { \\n                                        @ id self._itemId(this)\\n            set View.prototype.bind =\\n                function \\n                    param event\\n                    param handler\\n                    var self = this\\n                    if event === 'newTodo'\\n                        _ $on\\n                            @expr self.$newTodo\\n                            @ 'change'\\n                            function \\n                                _ handler(self.$newTodo.value)\\n                    else\\n                        if event === 'removeCompleted'\\n                            _ $on\\n                                @expr self.$clearCompleted\\n                                @ 'click'\\n                                function \\n                                    _ handler()\\n                        else\\n                            if event === 'toggleAll'\\n                                _ $on\\n                                    @expr self.$toggleAll\\n                                    @ 'click'\\n                                    function \\n                                        _ handler\\n                                            { \\n                                                @ completed this.checked\\n                            else\\n                                if event === 'itemEdit'\\n                                    _ $delegate\\n                                        @expr self.$todoList\\n                                        @ 'li label'\\n                                        @ 'dblclick'\\n                                        function \\n                                            _ handler\\n                                                { \\n                                                    @ id self._itemId(this)\\n                                else\\n                                    if event === 'itemRemove'\\n                                        _ $delegate\\n                                            @expr self.$todoList\\n                                            @ '.destroy'\\n                                            @ 'click'\\n                                            function \\n                                                _ handler\\n                                                    { \\n                                                        @ id self._itemId(this)\\n                                    else\\n                                        if event === 'itemToggle'\\n                                            _ $delegate\\n                                                @expr self.$todoList\\n                                                @ '.toggle'\\n                                                @ 'click'\\n                                                function \\n                                                    _ handler\\n                                                        { \\n                                                            @ id self._itemId(this)\\n                                                            @ completed this.checked\\n                                        else\\n                                            if event === 'itemEditDone'\\n                                                _ self._bindItemEditDone(handler)\\n                                            else\\n                                                if event === 'itemEditCancel'\\n                                                    _ self._bindItemEditCancel(handler)\\n                # Export to window\\n            set window.app =\\n                || \\n                    + window.app\\n                    { \\n                # Export to window\\n            set window.app.View = View\\n            (\\n                @ window\\n        #\\n            # global qs, qsa, $on, $parent, $delegate\\n\"},\"vanillajs/js/store.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    iife \\n        param window\\n        function Store\\n            param name\\n            param callback\\n            set callback =\\n                || \\n                    + callback\\n                    function \\n            set this._dbName = name\\n            if !localStorage.getItem(name)\\n                var todos = []\\n                _ localStorage.setItem(name, JSON.stringify(todos))\\n            _ callback.call(this, JSON.parse(localStorage.getItem(name)))\\n            #\\n                # *\\n                # * Creates a new client side storage object and will create an empty\\n                # * collection if no collection already exists.\\n                # *\\n                # * @param {string} name The name of our DB we want to use\\n                # * @param {function} callback Our fake DB uses callbacks because in\\n                # * real life you probably would be making AJAX calls\\n                # \\n            #\\n                # *\\n                # * Finds items based on a query given as a JS object\\n                # *\\n                # * @param {object} query The query to match against (i.e. {foo: 'bar'})\\n                # * @param {function} callback\\t The callback to fire when the query has\\n                # * completed running\\n                # *\\n                # * @example\\n                # * db.find({foo: 'bar', hello: 'world'}, function (data) {\\n                # *\\t // data will return any items that have foo: bar and\\n                # *\\t // hello: world in their properties\\n                # * });\\n                # \\n        set Store.prototype.find =\\n            function \\n                param query\\n                param callback\\n                if !callback\\n                    return \\n                var todos = JSON.parse(localStorage.getItem(this._dbName))\\n                _ callback.call\\n                    this this\\n                    _ todos.filter\\n                        function \\n                            param todo\\n                            for \\n                                left\\n                                    var q\\n                                in query\\n                                if query[q] !== todo[q]\\n                                    return false\\n                            return true\\n            #\\n                # *\\n                # * Finds items based on a query given as a JS object\\n                # *\\n                # * @param {object} query The query to match against (i.e. {foo: 'bar'})\\n                # * @param {function} callback\\t The callback to fire when the query has\\n                # * completed running\\n                # *\\n                # * @example\\n                # * db.find({foo: 'bar', hello: 'world'}, function (data) {\\n                # *\\t // data will return any items that have foo: bar and\\n                # *\\t // hello: world in their properties\\n                # * });\\n                # \\n            #\\n                # *\\n                # * Will retrieve all data from the collection\\n                # *\\n                # * @param {function} callback The callback to fire upon retrieving data\\n                # \\n        set Store.prototype.findAll =\\n            function \\n                param callback\\n                set callback =\\n                    || \\n                        + callback\\n                        function \\n                _ callback.call(this, JSON.parse(localStorage.getItem(this._dbName)))\\n            #\\n                # *\\n                # * Will retrieve all data from the collection\\n                # *\\n                # * @param {function} callback The callback to fire upon retrieving data\\n                # \\n            #\\n                # *\\n                # * Will save the given data to the DB. If no item exists it will create a new\\n                # * item, otherwise it'll simply update an existing item's properties\\n                # *\\n                # * @param {object} updateData The data to save back into the DB\\n                # * @param {function} callback The callback to fire after saving\\n                # * @param {number} id An optional param to enter an ID of an item to update\\n                # \\n        set Store.prototype.save =\\n            function \\n                param updateData\\n                param callback\\n                param id\\n                var todos = JSON.parse(localStorage.getItem(this._dbName))\\n                set callback =\\n                    || \\n                        + callback\\n                        function \\n                    # If an ID was actually given, find the item and update each property\\n                if id\\n                    for var i = 0; i < todos.length; i++\\n                        if todos[i].id === id\\n                            for \\n                                left\\n                                    var key\\n                                in updateData\\n                                set todos[i][key] = updateData[key]\\n                            break \\n                    _ localStorage.setItem(this._dbName, JSON.stringify(todos))\\n                    _ callback.call(this, todos)\\n                else\\n                    set updateData.id = new Date().getTime()\\n                        # Generate an ID\\n                    _ todos.push(updateData)\\n                    _ localStorage.setItem(this._dbName, JSON.stringify(todos))\\n                    _ callback.call\\n                        this this\\n                        [ \\n                            @ updateData\\n            #\\n                # *\\n                # * Will save the given data to the DB. If no item exists it will create a new\\n                # * item, otherwise it'll simply update an existing item's properties\\n                # *\\n                # * @param {object} updateData The data to save back into the DB\\n                # * @param {function} callback The callback to fire after saving\\n                # * @param {number} id An optional param to enter an ID of an item to update\\n                # \\n            #\\n                # *\\n                # * Will remove an item from the Store based on its ID\\n                # *\\n                # * @param {number} id The ID of the item you want to remove\\n                # * @param {function} callback The callback to fire after saving\\n                # \\n        set Store.prototype.remove =\\n            function \\n                param id\\n                param callback\\n                var todos = JSON.parse(localStorage.getItem(this._dbName))\\n                for var i = 0; i < todos.length; i++\\n                    if todos[i].id == id\\n                        _ todos.splice(i, 1)\\n                        break \\n                _ localStorage.setItem(this._dbName, JSON.stringify(todos))\\n                _ callback.call(this, todos)\\n            #\\n                # *\\n                # * Will remove an item from the Store based on its ID\\n                # *\\n                # * @param {number} id The ID of the item you want to remove\\n                # * @param {function} callback The callback to fire after saving\\n                # \\n            #\\n                # *\\n                # * Will drop all storage and start fresh\\n                # *\\n                # * @param {function} callback The callback to fire after dropping the data\\n                # \\n        set Store.prototype.drop =\\n            function \\n                param callback\\n                var todos = []\\n                _ localStorage.setItem(this._dbName, JSON.stringify(todos))\\n                _ callback.call(this, todos)\\n            #\\n                # *\\n                # * Will drop all storage and start fresh\\n                # *\\n                # * @param {function} callback The callback to fire after dropping the data\\n                # \\n            # Export to window\\n        set window.app =\\n            || \\n                + window.app\\n                { \\n            # Export to window\\n        set window.app.Store = Store\\n        (\\n            @ window\\n        #\\n            # jshint eqeqeq:false\\n\"},\"vanillajs/node_modules/todomvc-app-css/index.css.ittf\":{\"type\":\"CODE\",\"contents\":\"css\\n    < html\\n        + body\\n        margin 0\\n        padding 0\\n    < button\\n        margin 0\\n        padding 0\\n        border 0\\n        background none\\n        font-size 100%\\n        vertical-align baseline\\n        font-family inherit\\n        font-weight inherit\\n        color inherit\\n        -webkit-appearance none\\n        appearance none\\n        -webkit-font-smoothing antialiased\\n        -moz-osx-font-smoothing grayscale\\n    < body\\n        font 14px 'Helvetica Neue', Helvetica, Arial, sans-serif\\n        line-height 1.4em\\n        background #f5f5f5\\n        color #4d4d4d\\n        min-width 230px\\n        max-width 550px\\n        margin 0 auto\\n        -webkit-font-smoothing antialiased\\n        -moz-osx-font-smoothing grayscale\\n        font-weight 300\\n    < :focus\\n        outline 0\\n    . hidden\\n        display none\\n    . todoapp\\n        background #fff\\n        margin 130px 0 40px 0\\n        position relative\\n        box-shadow 0 2px 4px 0 rgba(0, 0, 0, 0.2),\\n\\t            0 25px 50px 0 rgba(0, 0, 0, 0.1)\\n    . todoapp input::-webkit-input-placeholder\\n        font-style italic\\n        font-weight 300\\n        color #e6e6e6\\n    . todoapp input::-moz-placeholder\\n        font-style italic\\n        font-weight 300\\n        color #e6e6e6\\n    . todoapp input::input-placeholder\\n        font-style italic\\n        font-weight 300\\n        color #e6e6e6\\n    . todoapp h1\\n        position absolute\\n        top -155px\\n        width 100%\\n        font-size 100px\\n        font-weight 100\\n        text-align center\\n        color rgba(175, 47, 47, 0.15)\\n        -webkit-text-rendering optimizeLegibility\\n        -moz-text-rendering optimizeLegibility\\n        text-rendering optimizeLegibility\\n    . new-todo\\n        + .edit\\n        position relative\\n        margin 0\\n        width 100%\\n        font-size 24px\\n        font-family inherit\\n        font-weight inherit\\n        line-height 1.4em\\n        border 0\\n        color inherit\\n        padding 6px\\n        border 1px solid #999\\n        box-shadow inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2)\\n        box-sizing border-box\\n        -webkit-font-smoothing antialiased\\n        -moz-osx-font-smoothing grayscale\\n    . new-todo\\n        padding 16px 16px 16px 60px\\n        border none\\n        background rgba(0, 0, 0, 0.003)\\n        box-shadow inset 0 -2px 1px rgba(0,0,0,0.03)\\n    . main\\n        position relative\\n        z-index 2\\n        border-top 1px solid #e6e6e6\\n    . toggle-all\\n        width 1px\\n        height 1px\\n        border none\\n        # Mobile Safari\\n        opacity 0\\n        position absolute\\n        right 100%\\n        bottom 100%\\n    . toggle-all + label\\n        width 60px\\n        height 34px\\n        font-size 0\\n        position absolute\\n        top -52px\\n        left -13px\\n        -webkit-transform rotate(90deg)\\n        transform rotate(90deg)\\n    . toggle-all + label:before\\n        content '❯'\\n        font-size 22px\\n        color #e6e6e6\\n        padding 10px 27px 10px 27px\\n    . toggle-all:checked + label:before\\n        color #737373\\n    . todo-list\\n        margin 0\\n        padding 0\\n        list-style none\\n    . todo-list li\\n        position relative\\n        font-size 24px\\n        border-bottom 1px solid #ededed\\n    . todo-list li:last-child\\n        border-bottom none\\n    . todo-list li.editing\\n        border-bottom none\\n        padding 0\\n    . todo-list li.editing .edit\\n        display block\\n        width 506px\\n        padding 12px 16px\\n        margin 0 0 0 43px\\n    . todo-list li.editing .view\\n        display none\\n    . todo-list li .toggle\\n        text-align center\\n        width 40px\\n        # auto, since non-WebKit browsers doesn't support input styling\\n        height auto\\n        position absolute\\n        top 0\\n        bottom 0\\n        margin auto 0\\n        border none\\n        # Mobile Safari\\n        -webkit-appearance none\\n        appearance none\\n    . todo-list li .toggle\\n        opacity 0\\n    . todo-list li .toggle + label\\n        #\\n            # \\n            # Firefox requires `#` to be escaped - https://bugzilla.mozilla.org/show_bug.cgi?id=922433\\n            # IE and Edge requires *everything* to be escaped to render, so we do that instead of just the `#` - https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7157459/\\n            # \\n        background-image url('data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23ededed%22%20stroke-width%3D%223%22/%3E%3C/svg%3E')\\n        background-repeat no-repeat\\n        background-position center left\\n    . todo-list li .toggle:checked + label\\n        background-image url('data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23bddad5%22%20stroke-width%3D%223%22/%3E%3Cpath%20fill%3D%22%235dc2af%22%20d%3D%22M72%2025L42%2071%2027%2056l-4%204%2020%2020%2034-52z%22/%3E%3C/svg%3E')\\n    . todo-list li label\\n        word-break break-all\\n        padding 15px 15px 15px 60px\\n        display block\\n        line-height 1.2\\n        transition color 0.4s\\n    . todo-list li.completed label\\n        color #d9d9d9\\n        text-decoration line-through\\n    . todo-list li .destroy\\n        display none\\n        position absolute\\n        top 0\\n        right 10px\\n        bottom 0\\n        width 40px\\n        height 40px\\n        margin auto 0\\n        font-size 30px\\n        color #cc9a9a\\n        margin-bottom 11px\\n        transition color 0.2s ease-out\\n    . todo-list li .destroy:hover\\n        color #af5b5e\\n    . todo-list li .destroy:after\\n        content '×'\\n    . todo-list li:hover .destroy\\n        display block\\n    . todo-list li .edit\\n        display none\\n    . todo-list li.editing:last-child\\n        margin-bottom -1px\\n    . footer\\n        color #777\\n        padding 10px 15px\\n        height 20px\\n        text-align center\\n        border-top 1px solid #e6e6e6\\n    . footer:before\\n        content ''\\n        position absolute\\n        right 0\\n        bottom 0\\n        left 0\\n        height 50px\\n        overflow hidden\\n        box-shadow 0 1px 1px rgba(0, 0, 0, 0.2),\\n\\t            0 8px 0 -3px #f6f6f6,\\n\\t            0 9px 1px -3px rgba(0, 0, 0, 0.2),\\n\\t            0 16px 0 -6px #f6f6f6,\\n\\t            0 17px 2px -6px rgba(0, 0, 0, 0.2)\\n    . todo-count\\n        float left\\n        text-align left\\n    . todo-count strong\\n        font-weight 300\\n    . filters\\n        margin 0\\n        padding 0\\n        list-style none\\n        position absolute\\n        right 0\\n        left 0\\n    . filters li\\n        display inline\\n    . filters li a\\n        color inherit\\n        margin 3px\\n        padding 3px 7px\\n        text-decoration none\\n        border 1px solid transparent\\n        border-radius 3px\\n    . filters li a:hover\\n        border-color rgba(175, 47, 47, 0.1)\\n    . filters li a.selected\\n        border-color rgba(175, 47, 47, 0.2)\\n    . clear-completed\\n        + html .clear-completed:active\\n        float right\\n        position relative\\n        line-height 20px\\n        text-decoration none\\n        cursor pointer\\n    . clear-completed:hover\\n        text-decoration underline\\n    . info\\n        margin 65px auto 0\\n        color #bfbfbf\\n        font-size 10px\\n        text-shadow 0 1px 0 rgba(255, 255, 255, 0.5)\\n        text-align center\\n    . info p\\n        line-height 1\\n    . info a\\n        color inherit\\n        text-decoration none\\n        font-weight 400\\n    . info a:hover\\n        text-decoration underline\\n    #\\n        # \\n        # Hack to remove background from Mobile Safari.\\n        # Can't use it globally since it destroys checkboxes in Firefox\\n    media screen and (-webkit-min-device-pixel-ratio:0)\\n        . toggle-all\\n            + .todo-list li .toggle\\n            background none\\n        . todo-list li .toggle\\n            height 40px\\n    media (max-width: 430px)\\n        . footer\\n            height 50px\\n        . filters\\n            bottom 10px\\n\"},\"vanillajs/node_modules/todomvc-common/base.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    iife \\n        var _\\n            iife \\n                param _\\n                set _.defaults =\\n                    function \\n                        param object\\n                        if !object\\n                            return object\\n                        for var argsIndex = 1, argsLength = arguments.length; argsIndex < argsLength; argsIndex++\\n                            var iterable = arguments[argsIndex]\\n                            if iterable\\n                                for \\n                                    left\\n                                        var key\\n                                    in iterable\\n                                    if object[key] == null\\n                                        set object[key] = iterable[key]\\n                        return object\\n                    # By default, Underscore uses ERB-style template delimiters, change the\\n                    # following template settings to use alternative delimiters.\\n                set _.templateSettings =\\n                    { \\n                        @ evaluate /<%([\\\\s\\\\S]+?)%>/g\\n                        @ interpolate /<%=([\\\\s\\\\S]+?)%>/g\\n                        @ escape /<%-([\\\\s\\\\S]+?)%>/g\\n                    # By default, Underscore uses ERB-style template delimiters, change the\\n                    # following template settings to use alternative delimiters.\\n                    # When customizing `templateSettings`, if you don't want to define an\\n                    # interpolation, evaluation or escaping regex, we need one that is\\n                    # guaranteed not to match.\\n                var noMatch = /(.)^/\\n                    # When customizing `templateSettings`, if you don't want to define an\\n                    # interpolation, evaluation or escaping regex, we need one that is\\n                    # guaranteed not to match.\\n                    # Certain characters need to be escaped so that they can be put into a\\n                    # string literal.\\n                var escapes\\n                    { \\n                        @ \\\"'\\\"\\n                        @ '\\\\\\\\'\\n                        @ '\\\\r' 'r'\\n                        @ '\\\\n' 'n'\\n                        @ '\\\\t' 't'\\n                        @ '\\\\u2028' 'u2028'\\n                        @ '\\\\u2029' 'u2029'\\n                    # Certain characters need to be escaped so that they can be put into a\\n                    # string literal.\\n                var escaper = /\\\\\\\\|'|\\\\r|\\\\n|\\\\t|\\\\u2028|\\\\u2029/g\\n                    # JavaScript micro-templating, similar to John Resig's implementation.\\n                    # Underscore templating handles arbitrary delimiters, preserves whitespace,\\n                    # and correctly escapes quotes within interpolated code.\\n                set _.template =\\n                    function \\n                        param text\\n                        param data\\n                        param settings\\n                        var render\\n                        set settings =\\n                            _ _.defaults\\n                                { \\n                                @ settings\\n                                @expr _.templateSettings\\n                            # Combine delimiters into one regular expression via alternation.\\n                        var matcher\\n                            new RegExp\\n                                op+ \\n                                    [ \\n                                        @ (settings.escape || noMatch).source\\n                                        @ (settings.interpolate || noMatch).source\\n                                        @ (settings.evaluate || noMatch).source\\n                                        ._ join\\n                                            @ '|'\\n                                    + '|$'\\n                                @ 'g'\\n                            # Combine delimiters into one regular expression via alternation.\\n                            # Compile the template source, escaping string literals appropriately.\\n                        var index = 0\\n                            # Compile the template source, escaping string literals appropriately.\\n                        var source = \\\"__p+='\\\"\\n                        _ text.replace\\n                            @ matcher\\n                            function \\n                                param match\\n                                param escape\\n                                param interpolate\\n                                param evaluate\\n                                param offset\\n                                set source +=\\n                                    _ text.slice(index, offset).replace\\n                                        @ escaper\\n                                        function \\n                                            param match\\n                                            return '\\\\\\\\' + escapes[match]\\n                                if escape\\n                                    set source += \\\"'+\\\\n((__t=(\\\" + escape + \\\"))==null?'':_.escape(__t))+\\\\n'\\\"\\n                                if interpolate\\n                                    set source += \\\"'+\\\\n((__t=(\\\" + interpolate + \\\"))==null?'':__t)+\\\\n'\\\"\\n                                if evaluate\\n                                    set source += \\\"';\\\\n\\\" + evaluate + \\\"\\\\n__p+='\\\"\\n                                set index = offset + match.length\\n                                return match\\n                        set source += \\\"';\\\\n\\\"\\n                            # If a variable is not specified, place data values in local scope.\\n                        if !settings.variable\\n                            set source = 'with(obj||{}){\\\\n' + source + '}\\\\n'\\n                        set source = \\\"var __t,__p='',__j=Array.prototype.join,\\\" + \\\"print=function(){__p+=__j.call(arguments,'');};\\\\n\\\" + source + \\\"return __p;\\\\n\\\"\\n                        try \\n                            set render = new Function(settings.variable || 'obj', '_', source)\\n                        catch e\\n                            set e.source = source\\n                            throw e\\n                        if data\\n                            return render(data, _)\\n                        var template\\n                            function \\n                                param data\\n                                return render.call(this, data, _)\\n                            # Provide the compiled function source as a convenience for precompilation.\\n                        set template.source = 'function(' + (settings.variable || 'obj') + '){\\\\n' + source + '}'\\n                            # Provide the compiled function source as a convenience for precompilation.\\n                        return template\\n                    # JavaScript micro-templating, similar to John Resig's implementation.\\n                    # Underscore templating handles arbitrary delimiters, preserves whitespace,\\n                    # and correctly escapes quotes within interpolated code.\\n                return _\\n                (\\n                    { \\n            #\\n                # jshint ignore:start\\n            # Underscore's Template Module\\n            # Courtesy of underscorejs.org\\n        if location.hostname === 'todomvc.com'\\n            iife \\n                param i\\n                param s\\n                param o\\n                param g\\n                param r\\n                param a\\n                param m\\n                set i['GoogleAnalyticsObject'] = r\\n                sequence \\n                    set i[r] =\\n                        || \\n                            + i[r]\\n                            function \\n                                _ i[r].q = i[r].q || []\\n                                    ._ push\\n                                        @ arguments\\n                    set i[r].l = 1 * new Date()\\n                sequence \\n                    set a = s.createElement(o)\\n                    set m = s.getElementsByTagName(o)[0]\\n                set a.async = 1\\n                set a.src = g\\n                _ m.parentNode.insertBefore(a, m)\\n                (\\n                    @ window\\n                    @ document\\n                    @ 'script'\\n                    @ 'https://www.google-analytics.com/analytics.js'\\n                    @ 'ga'\\n            _ ga('create', 'UA-31081062-1', 'auto')\\n            _ ga('send', 'pageview')\\n        function redirect\\n            if location.hostname === 'tastejs.github.io'\\n                set location.href = location.href.replace('tastejs.github.io/todomvc', 'todomvc.com')\\n            #\\n                # jshint ignore:end\\n        function findRoot\\n            var base = location.href.indexOf('examples/')\\n            return location.href.substr(0, base)\\n        function getFile\\n            param file\\n            param callback\\n            if !location.host\\n                return console.info('Miss the info bar? Run TodoMVC from a server to avoid a cross-origin error.')\\n            var xhr = new XMLHttpRequest()\\n            _ xhr.open('GET', findRoot() + file, true)\\n            _ xhr.send()\\n            set xhr.onload =\\n                function \\n                    if xhr.status === 200 && callback\\n                        _ callback(xhr.responseText)\\n        function Learn\\n            param learnJSON\\n            param config\\n            if !(this instanceof Learn)\\n                return new Learn(learnJSON, config)\\n            var \\n                decl template\\n                decl framework\\n            if typeof learnJSON !== 'object'\\n                try \\n                    set learnJSON = JSON.parse(learnJSON)\\n                catch e\\n                    return \\n            if config\\n                set template = config.template\\n                set framework = config.framework\\n            if !template && learnJSON.templates\\n                set template = learnJSON.templates.todomvc\\n            if !framework && document.querySelector('[data-framework]')\\n                set framework = document.querySelector('[data-framework]').dataset.framework\\n            set this.template = template\\n            if learnJSON.backend\\n                set this.frameworkJSON = learnJSON.backend\\n                set this.frameworkJSON.issueLabel = framework\\n                _ this.append\\n                    { \\n                        @ backend true\\n            else\\n                if learnJSON[framework]\\n                    set this.frameworkJSON = learnJSON[framework]\\n                    set this.frameworkJSON.issueLabel = framework\\n                    _ this.append()\\n            _ this.fetchIssueCount()\\n        set Learn.prototype.append =\\n            function \\n                param opts\\n                var aside = document.createElement('aside')\\n                set aside.innerHTML = _.template(this.template, this.frameworkJSON)\\n                set aside.className = 'learn'\\n                if opts && opts.backend\\n                    var sourceLinks = aside.querySelector('.source-links')\\n                        # Remove demo link\\n                    var heading = sourceLinks.firstElementChild\\n                    var sourceLink = sourceLinks.lastElementChild\\n                        # Correct link path\\n                    var href = sourceLink.getAttribute('href')\\n                        # Correct link path\\n                    _ sourceLink.setAttribute('href', href.substr(href.lastIndexOf('http')))\\n                    set sourceLinks.innerHTML = heading.outerHTML + sourceLink.outerHTML\\n                else\\n                    var demoLinks = aside.querySelectorAll('.demo-link')\\n                        # Localize demo links\\n                    _ Array.prototype.forEach.call\\n                        @ demoLinks\\n                        function \\n                            param demoLink\\n                            if demoLink.getAttribute('href').substr(0, 4) !== 'http'\\n                                _ demoLink.setAttribute('href', findRoot() + demoLink.getAttribute('href'))\\n                set document.body.className = (document.body.className + ' learn-bar').trim()\\n                _ document.body.insertAdjacentHTML('afterBegin', aside.outerHTML)\\n        set Learn.prototype.fetchIssueCount =\\n            function \\n                var issueLink = document.getElementById('issue-count-link')\\n                if issueLink\\n                    var url = issueLink.href.replace('https://github.com', 'https://api.github.com/repos')\\n                    var xhr = new XMLHttpRequest()\\n                    _ xhr.open('GET', url, true)\\n                    set xhr.onload =\\n                        function \\n                            param e\\n                            var parsedResponse = JSON.parse(e.target.responseText)\\n                            if parsedResponse instanceof Array\\n                                var count = parsedResponse.length\\n                                if count !== 0\\n                                    set issueLink.innerHTML = 'This app has ' + count + ' open issues'\\n                                    set document.getElementById('issue-count').style.display = 'inline'\\n                    _ xhr.send()\\n        _ redirect()\\n        _ getFile('learn.json', Learn)\\n        #\\n            # global _\\n\"},\"vanillajs/node_modules/todomvc-common/base.css.ittf\":{\"type\":\"CODE\",\"contents\":\"css\\n    < hr\\n        margin 20px 0\\n        border 0\\n        border-top 1px dashed #c5c5c5\\n        border-bottom 1px dashed #f7f7f7\\n    . learn a\\n        font-weight normal\\n        text-decoration none\\n        color #b83f45\\n    . learn a:hover\\n        text-decoration underline\\n        color #787e7e\\n    . learn h3\\n        + .learn h4\\n        + .learn h5\\n        margin 10px 0\\n        font-weight 500\\n        line-height 1.2\\n        color #000\\n    . learn h3\\n        font-size 24px\\n    . learn h4\\n        font-size 18px\\n    . learn h5\\n        margin-bottom 0\\n        font-size 14px\\n    . learn ul\\n        padding 0\\n        margin 0 0 30px 25px\\n    . learn li\\n        line-height 20px\\n    . learn p\\n        font-size 15px\\n        font-weight 300\\n        line-height 1.3\\n        margin-top 0\\n        margin-bottom 0\\n    # issue-count\\n        display none\\n    . quote\\n        border none\\n        margin 20px 0 60px 0\\n    . quote p\\n        font-style italic\\n    . quote p:before\\n        content '“'\\n        font-size 50px\\n        opacity .15\\n        position absolute\\n        top -20px\\n        left 3px\\n    . quote p:after\\n        content '”'\\n        font-size 50px\\n        opacity .15\\n        position absolute\\n        bottom -42px\\n        right 3px\\n    . quote footer\\n        position absolute\\n        bottom -40px\\n        right 0\\n    . quote footer img\\n        border-radius 3px\\n    . quote footer a\\n        margin-left 5px\\n        vertical-align middle\\n    . speech-bubble\\n        position relative\\n        padding 10px\\n        background rgba(0, 0, 0, .04)\\n        border-radius 5px\\n    . speech-bubble:after\\n        content ''\\n        position absolute\\n        top 100%\\n        right 30px\\n        border 13px solid transparent\\n        border-top-color rgba(0, 0, 0, .04)\\n    . learn-bar > .learn\\n        position absolute\\n        width 272px\\n        top 8px\\n        left -300px\\n        padding 10px\\n        border-radius 5px\\n        background-color rgba(255, 255, 255, .6)\\n        transition-property left\\n        transition-duration 500ms\\n    media (min-width: 899px)\\n        . learn-bar\\n            width auto\\n            padding-left 300px\\n        . learn-bar > .learn\\n            left 8px\\n\"},\"vanillajs/test/ControllerSpec.js.ittf\":{\"type\":\"CODE\",\"contents\":\"module\\n    kind react\\n    _ describe\\n        @ 'controller'\\n        function \\n            var \\n                decl subject\\n                decl model\\n                decl view\\n            var setUpModel\\n                function \\n                    param todos\\n                    _ model.read.and.callFake\\n                        function \\n                            param query\\n                            param callback\\n                            set callback = callback || query\\n                            _ callback(todos)\\n                    _ model.getCount.and.callFake\\n                        function \\n                            param callback\\n                            var todoCounts\\n                                { \\n                                    @ active\\n                                        _ todos.filter\\n                                            function \\n                                                param todo\\n                                                return !todo.completed\\n                                            . length\\n                                    @ completed\\n                                        _ todos.filter\\n                                            function \\n                                                param todo\\n                                                return !!todo.completed\\n                                            . length\\n                                    @ total todos.length\\n                            _ callback(todoCounts)\\n                    _ model.remove.and.callFake\\n                        function \\n                            param id\\n                            param callback\\n                            _ callback()\\n                    _ model.create.and.callFake\\n                        function \\n                            param title\\n                            param callback\\n                            _ callback()\\n                    _ model.update.and.callFake\\n                        function \\n                            param id\\n                            param updateData\\n                            param callback\\n                            _ callback()\\n            var createViewStub\\n                function \\n                    var eventRegistry\\n                        { \\n                    return \\n                        { \\n                            @ render jasmine.createSpy('render')\\n                            @ bind\\n                                function \\n                                    param event\\n                                    param handler\\n                                    set eventRegistry[event] = handler\\n                            @ trigger\\n                                function \\n                                    param event\\n                                    param parameter\\n                                    _ eventRegistry[event](parameter)\\n            _ beforeEach\\n                function \\n                    set model =\\n                        _ jasmine.createSpyObj\\n                            @ 'model'\\n                            [ \\n                                @ 'read'\\n                                @ 'getCount'\\n                                @ 'remove'\\n                                @ 'create'\\n                                @ 'update'\\n                    set view = createViewStub()\\n                    set subject = new app.Controller(model, view)\\n            _ it\\n                @ 'should show entries on start-up'\\n                function \\n                    _ setUpModel([])\\n                    _ subject.setView('')\\n                    _ expect(view.render).toHaveBeenCalledWith('showEntries', [])\\n            _ describe\\n                @ 'routing'\\n                function \\n                    _ it\\n                        @ 'should show all entries without a route'\\n                        function \\n                            var todo\\n                                { \\n                                    @ title 'my todo'\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'showEntries'\\n                                [ \\n                                    @ todo\\n                    _ it\\n                        @ 'should show all entries without \\\"all\\\" route'\\n                        function \\n                            var todo\\n                                { \\n                                    @ title 'my todo'\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('#/')\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'showEntries'\\n                                [ \\n                                    @ todo\\n                    _ it\\n                        @ 'should show active entries'\\n                        function \\n                            var todo\\n                                { \\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('#/active')\\n                            _ expect(model.read).toHaveBeenCalledWith\\n                                { \\n                                    @ completed false\\n                                _ jasmine.any(Function)\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'showEntries'\\n                                [ \\n                                    @ todo\\n                    _ it\\n                        @ 'should show completed entries'\\n                        function \\n                            var todo\\n                                { \\n                                    @ title 'my todo'\\n                                    @ completed true\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('#/completed')\\n                            _ expect(model.read).toHaveBeenCalledWith\\n                                { \\n                                    @ completed true\\n                                _ jasmine.any(Function)\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'showEntries'\\n                                [ \\n                                    @ todo\\n            _ it\\n                @ 'should show the content block when todos exists'\\n                function \\n                    _ setUpModel\\n                        [ \\n                            { \\n                                @ title 'my todo'\\n                                @ completed true\\n                    _ subject.setView('')\\n                    _ expect(view.render).toHaveBeenCalledWith\\n                        @ 'contentBlockVisibility'\\n                        { \\n                            @ visible true\\n            _ it\\n                @ 'should hide the content block when no todos exists'\\n                function \\n                    _ setUpModel([])\\n                    _ subject.setView('')\\n                    _ expect(view.render).toHaveBeenCalledWith\\n                        @ 'contentBlockVisibility'\\n                        { \\n                            @ visible false\\n            _ it\\n                @ 'should check the toggle all button, if all todos are completed'\\n                function \\n                    _ setUpModel\\n                        [ \\n                            { \\n                                @ title 'my todo'\\n                                @ completed true\\n                    _ subject.setView('')\\n                    _ expect(view.render).toHaveBeenCalledWith\\n                        @ 'toggleAll'\\n                        { \\n                            @ checked true\\n            _ it\\n                @ 'should set the \\\"clear completed\\\" button'\\n                function \\n                    var todo\\n                        { \\n                            @ id 42\\n                            @ title 'my todo'\\n                            @ completed true\\n                    _ setUpModel\\n                        [ \\n                            @ todo\\n                    _ subject.setView('')\\n                    _ expect(view.render).toHaveBeenCalledWith\\n                        @ 'clearCompletedButton'\\n                        { \\n                            @ completed 1\\n                            @ visible true\\n            _ it\\n                @ 'should highlight \\\"All\\\" filter by default'\\n                function \\n                    _ setUpModel([])\\n                    _ subject.setView('')\\n                    _ expect(view.render).toHaveBeenCalledWith('setFilter', '')\\n            _ it\\n                @ 'should highlight \\\"Active\\\" filter when switching to active view'\\n                function \\n                    _ setUpModel([])\\n                    _ subject.setView('#/active')\\n                    _ expect(view.render).toHaveBeenCalledWith('setFilter', 'active')\\n            _ describe\\n                @ 'toggle all'\\n                function \\n                    _ it\\n                        @ 'should toggle all todos to completed'\\n                        function \\n                            var todos\\n                                [ \\n                                    { \\n                                        @ id 42\\n                                        @ title 'my todo'\\n                                        @ completed false\\n                                    { \\n                                        @ id 21\\n                                        @ title 'another todo'\\n                                        @ completed false\\n                            _ setUpModel(todos)\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'toggleAll'\\n                                { \\n                                    @ completed true\\n                            _ expect(model.update).toHaveBeenCalledWith\\n                                @ 42\\n                                { \\n                                    @ completed true\\n                                _ jasmine.any(Function)\\n                            _ expect(model.update).toHaveBeenCalledWith\\n                                @ 21\\n                                { \\n                                    @ completed true\\n                                _ jasmine.any(Function)\\n                    _ it\\n                        @ 'should update the view'\\n                        function \\n                            var todos\\n                                [ \\n                                    { \\n                                        @ id 42\\n                                        @ title 'my todo'\\n                                        @ completed true\\n                            _ setUpModel(todos)\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'toggleAll'\\n                                { \\n                                    @ completed false\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'elementComplete'\\n                                { \\n                                    @ id 42\\n                                    @ completed false\\n            _ describe\\n                @ 'new todo'\\n                function \\n                    _ it\\n                        @ 'should add a new todo to the model'\\n                        function \\n                            _ setUpModel([])\\n                            _ subject.setView('')\\n                            _ view.trigger('newTodo', 'a new todo')\\n                            _ expect(model.create).toHaveBeenCalledWith('a new todo', jasmine.any(Function))\\n                    _ it\\n                        @ 'should add a new todo to the view'\\n                        function \\n                            _ setUpModel([])\\n                            _ subject.setView('')\\n                            _ view.render.calls.reset()\\n                            _ model.read.calls.reset()\\n                            _ model.read.and.callFake\\n                                function \\n                                    param callback\\n                                    _ callback\\n                                        [ \\n                                            { \\n                                                @ title 'a new todo'\\n                                                @ completed false\\n                            _ view.trigger('newTodo', 'a new todo')\\n                            _ expect(model.read).toHaveBeenCalled()\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'showEntries'\\n                                [ \\n                                    { \\n                                        @ title 'a new todo'\\n                                        @ completed false\\n                    _ it\\n                        @ 'should clear the input field when a new todo is added'\\n                        function \\n                            _ setUpModel([])\\n                            _ subject.setView('')\\n                            _ view.trigger('newTodo', 'a new todo')\\n                            _ expect(view.render).toHaveBeenCalledWith('clearNewTodo')\\n            _ describe\\n                @ 'element removal'\\n                function \\n                    _ it\\n                        @ 'should remove an entry from the model'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 42\\n                                    @ title 'my todo'\\n                                    @ completed true\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemRemove'\\n                                { \\n                                    @ id 42\\n                            _ expect(model.remove).toHaveBeenCalledWith(42, jasmine.any(Function))\\n                    _ it\\n                        @ 'should remove an entry from the view'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 42\\n                                    @ title 'my todo'\\n                                    @ completed true\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemRemove'\\n                                { \\n                                    @ id 42\\n                            _ expect(view.render).toHaveBeenCalledWith('removeItem', 42)\\n                    _ it\\n                        @ 'should update the element count'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 42\\n                                    @ title 'my todo'\\n                                    @ completed true\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemRemove'\\n                                { \\n                                    @ id 42\\n                            _ expect(view.render).toHaveBeenCalledWith('updateElementCount', 0)\\n            _ describe\\n                @ 'remove completed'\\n                function \\n                    _ it\\n                        @ 'should remove a completed entry from the model'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 42\\n                                    @ title 'my todo'\\n                                    @ completed true\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger('removeCompleted')\\n                            _ expect(model.read).toHaveBeenCalledWith\\n                                { \\n                                    @ completed true\\n                                _ jasmine.any(Function)\\n                            _ expect(model.remove).toHaveBeenCalledWith(42, jasmine.any(Function))\\n                    _ it\\n                        @ 'should remove a completed entry from the view'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 42\\n                                    @ title 'my todo'\\n                                    @ completed true\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger('removeCompleted')\\n                            _ expect(view.render).toHaveBeenCalledWith('removeItem', 42)\\n            _ describe\\n                @ 'element complete toggle'\\n                function \\n                    _ it\\n                        @ 'should update the model'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemToggle'\\n                                { \\n                                    @ id 21\\n                                    @ completed true\\n                            _ expect(model.update).toHaveBeenCalledWith\\n                                @ 21\\n                                { \\n                                    @ completed true\\n                                _ jasmine.any(Function)\\n                    _ it\\n                        @ 'should update the view'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 42\\n                                    @ title 'my todo'\\n                                    @ completed true\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemToggle'\\n                                { \\n                                    @ id 42\\n                                    @ completed false\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'elementComplete'\\n                                { \\n                                    @ id 42\\n                                    @ completed false\\n            _ describe\\n                @ 'edit item'\\n                function \\n                    _ it\\n                        @ 'should switch to edit mode'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemEdit'\\n                                { \\n                                    @ id 21\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'editItem'\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                    _ it\\n                        @ 'should leave edit mode on done'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemEditDone'\\n                                { \\n                                    @ id 21\\n                                    @ title 'new title'\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'editItemDone'\\n                                { \\n                                    @ id 21\\n                                    @ title 'new title'\\n                    _ it\\n                        @ 'should persist the changes on done'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemEditDone'\\n                                { \\n                                    @ id 21\\n                                    @ title 'new title'\\n                            _ expect(model.update).toHaveBeenCalledWith\\n                                @ 21\\n                                { \\n                                    @ title 'new title'\\n                                _ jasmine.any(Function)\\n                    _ it\\n                        @ 'should remove the element from the model when persisting an empty title'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemEditDone'\\n                                { \\n                                    @ id 21\\n                                    @ title ''\\n                            _ expect(model.remove).toHaveBeenCalledWith(21, jasmine.any(Function))\\n                    _ it\\n                        @ 'should remove the element from the view when persisting an empty title'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemEditDone'\\n                                { \\n                                    @ id 21\\n                                    @ title ''\\n                            _ expect(view.render).toHaveBeenCalledWith('removeItem', 21)\\n                    _ it\\n                        @ 'should leave edit mode on cancel'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemEditCancel'\\n                                { \\n                                    @ id 21\\n                            _ expect(view.render).toHaveBeenCalledWith\\n                                @ 'editItemDone'\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                    _ it\\n                        @ 'should not persist the changes on cancel'\\n                        function \\n                            var todo\\n                                { \\n                                    @ id 21\\n                                    @ title 'my todo'\\n                                    @ completed false\\n                            _ setUpModel\\n                                [ \\n                                    @ todo\\n                            _ subject.setView('')\\n                            _ view.trigger\\n                                @ 'itemEditCancel'\\n                                { \\n                                    @ id 21\\n                            _ expect(model.update).not.toHaveBeenCalled()\\n        #\\n            # global app, jasmine, describe, it, beforeEach, expect\\n\"},\"vanillajs/test/SpecRunner.html.ittf\":{\"type\":\"CODE\",\"contents\":\"html \\n    head \\n        @title Jasmine Spec Runner\\n        link \\n            rel stylesheet\\n            href ../node_modules/jasmine-core/lib/jasmine-core/jasmine.css\\n        js ../node_modules/jasmine-core/lib/jasmine-core/jasmine.js\\n        js ../node_modules/jasmine-core/lib/jasmine-core/jasmine-html.js\\n        js ../node_modules/jasmine-core/lib/jasmine-core/boot.js\\n        js ControllerSpec.js\\n        script \\n            module\\n                kind react\\n                set window.app =\\n                    { \\n                    # Bootstrap app data\\n        js ../js/controller.js\\n    body \\n\"},\"github/stfnbssl/vscode-ittf/.gitignore\":{\"type\":\"CODE\",\"contents\":\"# Logs\\nlogs\\n*.log\\nnpm-debug.log*\\nyarn-debug.log*\\nyarn-error.log*\\n\\n# Runtime data\\npids\\n*.pid\\n*.seed\\n*.pid.lock\\n\\n# Directory for instrumented libs generated by jscoverage/JSCover\\nlib-cov\\n\\n# Coverage directory used by tools like istanbul\\ncoverage\\n\\n# nyc test coverage\\n.nyc_output\\n\\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\\n.grunt\\n\\n# Bower dependency directory (https://bower.io/)\\nbower_components\\n\\n# node-waf configuration\\n.lock-wscript\\n\\n# Compiled binary addons (https://nodejs.org/api/addons.html)\\nbuild/Release\\n\\n# Dependency directories\\nnode_modules/\\njspm_packages/\\n\\n# TypeScript v1 declaration files\\ntypings/\\n\\n# Optional npm cache directory\\n.npm\\n\\n# Optional eslint cache\\n.eslintcache\\n\\n# Optional REPL history\\n.node_repl_history\\n\\n# Output of 'npm pack'\\n*.tgz\\n\\n# Yarn Integrity file\\n.yarn-integrity\\n\\n# dotenv environment variables file\\n.env\\n\\n# next.js build output\\n.next\\n\"},\"github/stfnbssl/vscode-ittf/.vscodeignore\":{\"type\":\"CODE\",\"contents\":\".vscode/**\\n.vscode-test/**\\n.gitignore\\nvsc-extension-quickstart.md\\n\"},\"github/stfnbssl/vscode-ittf/CHANGELOG.md\":{\"type\":\"CODE\",\"contents\":\"# Change Log\\n\\nAll notable changes to the \\\"ittf\\\" extension will be documented in this file.\\n\\nCheck [Keep a Changelog](http://keepachangelog.com/) for recommendations on how to structure this file.\\n\\n## [Unreleased]\\n\\n- Initial release\"},\"github/stfnbssl/vscode-ittf/LICENSE\":{\"type\":\"CODE\",\"contents\":\"MIT License\\n\\nCopyright (c) 2019 Stefano Bassoli\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \\\"Software\\\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all\\ncopies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\nSOFTWARE.\\n\"},\"github/stfnbssl/vscode-ittf/README.md\":{\"type\":\"CODE\",\"contents\":\"# vscode-ittf\\nVSCode language services for .ittf documents.\\n\\n## Suggested colors\\n+ entity.name.function.root green\\n+ string yellow\\n+ keyword red\\n+ support.class azure\\n+ variable.parameter orange\\n\\n### The suggested VsCode theme is: Monokai\"},\"github/stfnbssl/vscode-ittf/language-configuration.json\":{\"type\":\"CODE\",\"contents\":\"{\\n    \\\"comments\\\": {\\n        // symbol used for single line comment. Remove this entry if your language does not support line comments\\n        \\\"lineComment\\\": \\\"$$\\\",\\n        // symbols used for start and end a block comment. Remove this entry if your language does not support block comments\\n        \\\"blockComment\\\": [ \\\"$*\\\", \\\"*$\\\" ]\\n    },\\n}\"},\"github/stfnbssl/vscode-ittf/package.json\":{\"type\":\"CODE\",\"contents\":\"{\\n    \\\"name\\\": \\\"ittf-sinthax-highlighter\\\",\\n    \\\"displayName\\\": \\\"ITTF sinthax highlighter\\\",\\n    \\\"description\\\": \\\"VsCode language extension for .ittf files\\\",\\n    \\\"version\\\": \\\"0.0.1\\\",\\n    \\\"author\\\": {\\\"name\\\": \\\"Stefano Bassoli\\\", \\\"email\\\": \\\"stfn.bssl@gmail.com\\\"},\\n    \\\"engines\\\": {\\n        \\\"vscode\\\": \\\"^1.32.0\\\"\\n    },\\n    \\\"categories\\\": [\\n        \\\"Programming Languages\\\"\\n    ],\\n    \\\"contributes\\\": {\\n        \\\"languages\\\": [{\\n            \\\"id\\\": \\\"ittf\\\",\\n            \\\"aliases\\\": [\\\"ITTF\\\", \\\"ittf\\\"],\\n            \\\"extensions\\\": [\\\".ittf\\\"],\\n            \\\"configuration\\\": \\\"./language-configuration.json\\\"\\n        }],\\n        \\\"grammars\\\": [{\\n            \\\"language\\\": \\\"ittf\\\",\\n            \\\"scopeName\\\": \\\"source.ittf\\\",\\n            \\\"path\\\": \\\"./syntaxes/ittf.tmLanguage.json\\\"\\n        }]\\n    }\\n}\"},\"github/stfnbssl/vscode-ittf/vsc-extension-quickstart.md\":{\"type\":\"CODE\",\"contents\":\"# Welcome to your VS Code Extension\\n\\n## What's in the folder\\n\\n* This folder contains all of the files necessary for your extension.\\n* `package.json` - this is the manifest file in which you declare your language support and define the location of the grammar file that has been copied into your extension.\\n* `syntaxes/ittf.tmLanguage.json` - this is the Text mate grammar file that is used for tokenization.\\n* `language-configuration.json` - this is the language configuration, defining the tokens that are used for comments and brackets.\\n\\n## Get up and running straight away\\n\\n* Make sure the language configuration settings in `language-configuration.json` are accurate.\\n* Press `F5` to open a new window with your extension loaded.\\n* Create a new file with a file name suffix matching your language.\\n* Verify that syntax highlighting works and that the language configuration settings are working.\\n\\n## Make changes\\n\\n* You can relaunch the extension from the debug toolbar after making changes to the files listed above.\\n* You can also reload (`Ctrl+R` or `Cmd+R` on Mac) the VS Code window with your extension to load your changes.\\n\\n## Add more language features\\n\\n* To add features such as intellisense, hovers and validators check out the VS Code extenders documentation at https://code.visualstudio.com/docs\\n\\n## Install your extension\\n\\n* To start using your extension with Visual Studio Code copy it into the `<user home>/.vscode/extensions` folder and restart Code.\\n* To share your extension with the world, read on https://code.visualstudio.com/docs about publishing an extension.\\n\"},\"github/stfnbssl/vscode-ittf/.vscode/launch.json\":{\"type\":\"CODE\",\"contents\":\"// A launch configuration that launches the extension inside a new window\\n// Use IntelliSense to learn about possible attributes.\\n// Hover to view descriptions of existing attributes.\\n// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387\\n{\\n\\t\\\"version\\\": \\\"0.2.0\\\",\\n    \\\"configurations\\\": [\\n        {\\n            \\\"name\\\": \\\"Extension\\\",\\n            \\\"type\\\": \\\"extensionHost\\\",\\n            \\\"request\\\": \\\"launch\\\",\\n            \\\"runtimeExecutable\\\": \\\"${execPath}\\\",\\n            \\\"args\\\": [\\n                \\\"--extensionDevelopmentPath=${workspaceFolder}\\\"\\n            ]\\n        }\\n    ]\\n}\"},\"github/stfnbssl/vscode-ittf/syntaxes/ittf.tmLanguage.json\":{\"type\":\"CODE\",\"contents\":\"{\\n\\t\\\"$schema\\\": \\\"https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json\\\",\\n\\t\\\"name\\\": \\\"ITTF\\\",\\n\\t\\\"patterns\\\": [\\n\\t\\t{ \\\"include\\\": \\\"#commentNode\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#nodeRoot\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#nodeLeaf\\\" },\\n        { \\\"include\\\": \\\"#interpolation\\\" },\\n        { \\\"include\\\": \\\"#interpolation_2\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#command\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#mix\\\" },\\n\\t\\t{ \\\"include\\\": \\\"#include\\\" },\\n        { \\\"include\\\": \\\"#script\\\" }\\n\\t],\\n\\t\\\"repository\\\": {\\n\\t\\t\\\"commentNode\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"match\\\": \\\"^\\\\\\\\s*(\\\\\\\\$\\\\\\\\$)(.*)$\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.number-sign.ittf\\\"\\n\\t\\t\\t},{\\n\\t\\t\\t\\t\\\"begin\\\": \\\"^\\\\\\\\s*\\\\\\\\$\\\\\\\\*\\\",\\n\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\*\\\\\\\\$\\\",\\n\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.number-sign.ittf\\\"\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"comment\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\$\\\\\\\\$\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\n\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.ittf\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.number-sign.ittf\\\"\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"\\\\\\\\$\\\\\\\\*\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"\\\\\\\\*\\\\\\\\$\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"0\\\": {\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.definition.comment.ittf\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"comment.line.number-sign.ittf\\\"\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\t\\t\\t\\t\\n\\t\\t},\\n\\t\\t\\\"nodeRoot\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"begin\\\": \\\"^([^($\\\\\\\\s]++)(?!\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\\"end\\\": \\\"$\\\",\\n\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\": \\\"entity.name.function.root\\\"}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#interpolation\\\"\\n\\t\\t\\t\\t\\t},\\n                    {\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#value\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment\\\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t]\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"nodeLeaf\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"begin\\\": \\\"^\\\\\\\\s+([^($\\\\\\\\s]++)(?!\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\\"end\\\": \\\"$\\\",\\n\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\": \\\"entity.name.function.leaf\\\"}\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#interpolation\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#interpolation_2\\\"\\n\\t\\t\\t\\t\\t},\\n                    {\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#value\\\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#comment\\\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t]\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"value\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"[ \\\\\\\\t](\\\\\\\\w+)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.type\\\"\\n\\t\\t\\t\\t},{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"(\\\\\\\\w+)\\\",\\n\\t\\t\\t\\t\\t\\\"name\\\": \\\"support.class\\\"\\n\\t\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"interpolation\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"match\\\": \\\"(\\\\\\\\$\\\\\\\\{)([^\\\\\\\\}]+)(\\\\\\\\})\\\",\\n\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"keyword\\\" },\\n\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"string\\\" },\\n\\t\\t\\t\\t\\t\\\"3\\\": { \\\"name\\\" : \\\"keyword\\\" }\\n\\t\\t\\t\\t}\\n\\t\\t\\t}]\\n\\t\\t},\\n\\t\\t\\\"interpolation_2\\\": {\\n\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\\"match\\\": \\\"^(\\\\\\\\s*)(\\\\\\\\$\\\\\\\\{)([^\\\\\\\\}]+)(\\\\\\\\})(\\\\\\\\s*)\\\",\\n\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"keyword\\\" },\\n\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"string\\\" },\\n\\t\\t\\t\\t\\t\\\"3\\\": { \\\"name\\\" : \\\"keyword\\\" },\\n                    \\\"4\\\": { \\\"name\\\" : \\\"string\\\" }\\n\\t\\t\\t\\t}\\n\\t\\t\\t}]\\n\\t\\t},\\n        \\\"command\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"^\\\\\\\\s*(?!\\\\\\\\$include|\\\\\\\\$global)(\\\\\\\\$\\\\\\\\w+)\\\\\\\\s+(.*)\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"variable.parameter\\\" },\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"string\\\" }\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"mix\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"^\\\\\\\\s*([-_\\\\\\\\.\\\\\\\\/\\\\\\\\w]++)(\\\\\\\\()\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"(\\\\\\\\))$|$\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\": \\\"keyword\\\" },\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"punctuation.separator.mix.arguments.ittf\\\" }\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"endCaptures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"punctuation.separator.mix.arguments.ittf\\\" }\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"punctuation.separator.mix.arguments.ittf\\\",\\n\\t\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\\,\\\"\\n\\t\\t\\t\\t\\t\\t},{\\n\\t\\t\\t\\t\\t\\t\\t\\\"include\\\": \\\"#argument\\\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"argument\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"match\\\": \\\"\\\\\\\\s*([^\\\\\\\\,\\\\\\\\)]*)\\\\\\\\s*\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"support.function.mix\\\" }\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"include\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n                    \\\"match\\\": \\\"^\\\\\\\\s*(\\\\\\\\$include)\\\\\\\\s+(.*)$\\\",\\n\\t\\t\\t\\t\\t\\\"captures\\\": {\\n\\t\\t\\t\\t\\t\\t\\\"1\\\": { \\\"name\\\" : \\\"keyword\\\" },\\n\\t\\t\\t\\t\\t\\t\\\"2\\\": { \\\"name\\\" : \\\"support.type\\\" }\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t},\\n\\t\\t\\\"script\\\": {\\n\\t\\t\\t\\\"patterns\\\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\\"begin\\\": \\\"^(\\\\\\\\s+)(\\\\\\\\$global|\\\\\\\\$)(\\\\\\\\s*)\\\",\\n\\t\\t\\t\\t\\t\\\"end\\\": \\\"^(?=\\\\\\\\1\\\\\\\\w.*$)\\\",\\n\\t\\t\\t\\t\\t\\\"beginCaptures\\\": {\\n                        \\\"2\\\": { \\\"name\\\": \\\"string\\\" }\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\\"patterns\\\": [{\\n\\t\\t\\t\\t\\t\\t\\\"name\\\": \\\"string\\\",\\n\\t\\t\\t\\t\\t\\t\\\"match\\\": \\\"^(.*)\\\"\\n\\t\\t\\t\\t\\t}]\\n\\t\\t\\t\\t}\\n\\t\\t\\t]\\n\\t\\t}\\n\\t},\\n\\t\\\"scopeName\\\": \\\"source.ittf\\\"\\n}\"}}"
    },
    {
      "_id": "6342b7aeead390fb0402e541",
      "id": "6342b7aeead390fb0402e541",
      "owner": "stfnbssl",
      "name": "temp",
      "description": "temp",
      "packiFiles": "{\"index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"\"},\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        { cliCtx\\n            kind \\\"file\\\" $$ file|artifact\\n            filePath \\\".packi/cliCtx.json.ittf\\\" $$ when kind = \\\"file\\\"\\n            artifactName \\\"..name..\\\" $$ when kind = \\\"artifact\\\"\\n            [ contexts\\n                {\\n                    $$ propertyName \\\"..name..\\\"\\n                    $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\".packi/properties/index.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    [ properties\\n        {\\n            name \\\"name\\\"\\n            type \\\"string\\\"\\n        string( kind )\"},\".packi/properties/t/string.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"string\\\"\\n    $hook\"},\".packi/properties/t/boolean.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"boolean\\\"\\n    $hook\"},\".packi/properties/t/number.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"number\\\"\\n    $hook\"},\".packi/properties/t/object.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"object\\\"\\n    [ properties\\n        $hook\"},\".packi/properties/t/array.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"array\\\"\\n    [ properties\\n        $hook\"}}"
    },
    {
      "_id": "636b5036f46009325effd706",
      "id": "636b5036f46009325effd706",
      "owner": "stfnbssl",
      "name": "lab_sequelize_typescript",
      "description": "Lab for sequelize db manager ",
      "packiFiles": "{\"index.js.ittf\":{\"type\":\"CODE\",\"contents\":\"\"},\".packi/config.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    { meta\\n        $$ name \\\"..name..\\\"\\n        { cliCtx\\n            kind \\\"file\\\" $$ file|artifact\\n            filePath \\\".packi/cliCtx.json.ittf\\\" $$ when kind = \\\"file\\\"\\n            artifactName \\\"..name..\\\" $$ when kind = \\\"artifact\\\"\\n            [ contexts\\n                {\\n                    $$ propertyName \\\"..name..\\\"\\n                    $$ artifactName \\\"..name..\\\"\\n    [ tfolders\\n        {\\n            $$ name \\\"..name..\\\"\\n    [ contexts\\n        {\\n            $$ propertyName \\\"..name..\\\"\\n            $$ artifactName \\\"..name..\\\"\"},\".packi/properties/index.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    [ properties\\n        {\\n            name \\\"name\\\"\\n            type \\\"string\\\"\\n        string( kind )\"},\".packi/properties/t/string.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"string\\\"\\n    $hook\"},\".packi/properties/t/boolean.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"boolean\\\"\\n    $hook\"},\".packi/properties/t/number.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"number\\\"\\n    $hook\"},\".packi/properties/t/object.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"object\\\"\\n    [ properties\\n        $hook\"},\".packi/properties/t/array.json.ittf\":{\"type\":\"CODE\",\"contents\":\"{\\n    $params name\\n    name \\\"${name}\\\"\\n    type \\\"array\\\"\\n    [ properties\\n        $hook\"},\"github/ahmerb/typescript-sequelize-example/.gitignore\":{\"type\":\"CODE\",\"contents\":\"lib-cov\\n*.seed\\n*.log\\n*.csv\\n*.dat\\n*.out\\n*.pid\\n*.gz\\n*.swp\\n\\npids\\nlogs\\nresults\\ntmp\\n\\n# Build\\npublic/css/main.css\\n\\n# Coverage reports\\ncoverage\\n\\n# API keys and secrets\\n.env\\n\\n# Dependency directory\\nnode_modules\\nbower_components\\n\\n# Editors\\n.idea\\n*.iml\\n\\n# OS metadata\\n.DS_Store\\nThumbs.db\\n\\n# Ignore built ts files\\ndist/**/*\\n\\n\"},\"github/ahmerb/typescript-sequelize-example/README.md\":{\"type\":\"CODE\",\"contents\":\"# So you want to use types with Sequelize?\\n\\n## How to use Typescript with Sequelize\\n\\nThis repo shows how to use Sequelize v4 with Typescript, including how to set up associations.\\n\\nYou can use tags in this repo to follow along with the accompnaying article, which is found [here](https://github.com/ahmerb/typescript-sequelize-article).\\n\\nThe automated script for generating `ModelInstance` definitions is found [here](https://github.com/ahmerb/sequelize-typescript-associations).\\n\\n### Usage\\n\\nYou can run the web server with `yarn install && yarn start`. The server is launched on port `3000`. You can access paths via your browser, or, by using a HTTP client like [Postman](https://www.getpostman.com/).\\n\\n### App Structure\\n\\nInside `src/app.ts`, we launch the server and set up lots of example paths to demonstrate Sequelize+Typescript in action. The model definitions are in `src/models/`. Some types we define to help us get better type inference across our project when using Sequelize+Typescript are found in `src/typings`.\\n\\n### Setting up your database\\n\\nThe database connection config passed into Sequelize is stored in `src/config/sequelizeConfig.json`. It currently connects to a Postgres database on localhost called `tutorial`, with user `postgres` and no password. You may wish to change this. You probably will also need to create a database yourself. You don't have to use Postgres; Sequelize is database agnostic.\\n\"},\"github/ahmerb/typescript-sequelize-example/package.json\":{\"type\":\"CODE\",\"contents\":\"{\\n  \\\"name\\\": \\\"blog-app\\\",\\n  \\\"version\\\": \\\"1.0.0\\\",\\n  \\\"description\\\": \\\"Tutorial app for using Sequelize with Typescript. Use tags to follow along with the article.\\\",\\n  \\\"main\\\": \\\"app.ts\\\",\\n  \\\"repository\\\": \\\"git@github.com:ahmerb/ts-sqlize-code.git\\\",\\n  \\\"author\\\": \\\"Ahmer Butt <ab15015@bristol.ac.uk>\\\",\\n  \\\"license\\\": \\\"MIT\\\",\\n  \\\"private\\\": true,\\n  \\\"scripts\\\": {\\n    \\\"start\\\": \\\"ts-node src/app.ts\\\"\\n  },\\n  \\\"dependencies\\\": {\\n    \\\"express\\\": \\\"^4.16.3\\\",\\n    \\\"pg\\\": \\\"^7.4.3\\\",\\n    \\\"pg-hstore\\\": \\\"^2.3.2\\\",\\n    \\\"sequelize\\\": \\\"^4.38.0\\\",\\n    \\\"ts-node\\\": \\\"^7.0.1\\\",\\n    \\\"tslint\\\": \\\"^5.11.0\\\",\\n    \\\"typescript\\\": \\\"^3.0.1\\\"\\n  },\\n  \\\"devDependencies\\\": {\\n    \\\"@types/express\\\": \\\"^4.16.0\\\",\\n    \\\"@types/sequelize\\\": \\\"^4.27.24\\\",\\n    \\\"tslint-clean-code\\\": \\\"^0.2.7\\\"\\n  }\\n}\\n\"},\"github/ahmerb/typescript-sequelize-example/tsconfig.json\":{\"type\":\"CODE\",\"contents\":\"{\\n  \\\"compilerOptions\\\": {\\n    \\\"module\\\": \\\"commonjs\\\",\\n    \\\"esModuleInterop\\\": true,\\n    \\\"target\\\": \\\"es6\\\",\\n    \\\"noImplicitAny\\\": true,\\n    \\\"suppressImplicitAnyIndexErrors\\\": true,\\n    \\\"moduleResolution\\\": \\\"node\\\",\\n    \\\"sourceMap\\\": true,\\n    \\\"outDir\\\": \\\"dist\\\",\\n    \\\"baseUrl\\\": \\\".\\\",\\n    \\\"paths\\\": {\\n      \\\"typings/*\\\": [\\n        \\\"src/typings/*\\\"\\n      ],\\n      \\\"models/*\\\": [\\n        \\\"src/models/*\\\"\\n      ],\\n      \\\"*\\\": [\\n        \\\"node_modules/*\\\",\\n      ]\\n    }\\n  },\\n  \\\"include\\\": [\\n    \\\"src/**/*\\\"\\n  ]\\n}\\n\"},\"github/ahmerb/typescript-sequelize-example/tslint.json\":{\"type\":\"CODE\",\"contents\":\"{\\n  \\\"extends\\\": [\\n    \\\"tslint-clean-code\\\"\\n  ],\\n  \\\"rules\\\": {\\n    \\\"newspaper-order\\\": true\\n  }\\n}\\n\"},\"github/ahmerb/typescript-sequelize-example/yarn.lock\":{\"type\":\"CODE\",\"contents\":\"# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\\n# yarn lockfile v1\\n\\n\\n\\\"@types/bluebird@*\\\":\\n  version \\\"3.5.23\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/bluebird/-/bluebird-3.5.23.tgz#e805da976b76892b2b2e50eec29e84914c730670\\\"\\n\\n\\\"@types/body-parser@*\\\":\\n  version \\\"1.17.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/body-parser/-/body-parser-1.17.0.tgz#9f5c9d9bd04bb54be32d5eb9fc0d8c974e6cf58c\\\"\\n  dependencies:\\n    \\\"@types/connect\\\" \\\"*\\\"\\n    \\\"@types/node\\\" \\\"*\\\"\\n\\n\\\"@types/connect@*\\\":\\n  version \\\"3.4.32\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/connect/-/connect-3.4.32.tgz#aa0e9616b9435ccad02bc52b5b454ffc2c70ba28\\\"\\n  dependencies:\\n    \\\"@types/node\\\" \\\"*\\\"\\n\\n\\\"@types/continuation-local-storage@*\\\":\\n  version \\\"3.2.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/continuation-local-storage/-/continuation-local-storage-3.2.1.tgz#a33e0df9dce9b424d1c98fc4fdebd8578dceec7e\\\"\\n  dependencies:\\n    \\\"@types/node\\\" \\\"*\\\"\\n\\n\\\"@types/events@*\\\":\\n  version \\\"1.2.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/events/-/events-1.2.0.tgz#81a6731ce4df43619e5c8c945383b3e62a89ea86\\\"\\n\\n\\\"@types/express-serve-static-core@*\\\":\\n  version \\\"4.16.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/express-serve-static-core/-/express-serve-static-core-4.16.0.tgz#fdfe777594ddc1fe8eb8eccce52e261b496e43e7\\\"\\n  dependencies:\\n    \\\"@types/events\\\" \\\"*\\\"\\n    \\\"@types/node\\\" \\\"*\\\"\\n    \\\"@types/range-parser\\\" \\\"*\\\"\\n\\n\\\"@types/express@^4.16.0\\\":\\n  version \\\"4.16.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/express/-/express-4.16.0.tgz#6d8bc42ccaa6f35cf29a2b7c3333cb47b5a32a19\\\"\\n  dependencies:\\n    \\\"@types/body-parser\\\" \\\"*\\\"\\n    \\\"@types/express-serve-static-core\\\" \\\"*\\\"\\n    \\\"@types/serve-static\\\" \\\"*\\\"\\n\\n\\\"@types/geojson@^1.0.0\\\":\\n  version \\\"1.0.6\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/geojson/-/geojson-1.0.6.tgz#3e02972728c69248c2af08d60a48cbb8680fffdf\\\"\\n\\n\\\"@types/lodash@*\\\":\\n  version \\\"4.14.116\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/lodash/-/lodash-4.14.116.tgz#5ccf215653e3e8c786a58390751033a9adca0eb9\\\"\\n\\n\\\"@types/mime@*\\\":\\n  version \\\"2.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/mime/-/mime-2.0.0.tgz#5a7306e367c539b9f6543499de8dd519fac37a8b\\\"\\n\\n\\\"@types/node@*\\\":\\n  version \\\"10.7.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/node/-/node-10.7.1.tgz#b704d7c259aa40ee052eec678758a68d07132a2e\\\"\\n\\n\\\"@types/range-parser@*\\\":\\n  version \\\"1.2.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/range-parser/-/range-parser-1.2.2.tgz#fa8e1ad1d474688a757140c91de6dace6f4abc8d\\\"\\n\\n\\\"@types/sequelize@^4.27.24\\\":\\n  version \\\"4.27.24\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/sequelize/-/sequelize-4.27.24.tgz#7d593c062c368f570c68b0217f5c1d4c892ead48\\\"\\n  dependencies:\\n    \\\"@types/bluebird\\\" \\\"*\\\"\\n    \\\"@types/continuation-local-storage\\\" \\\"*\\\"\\n    \\\"@types/lodash\\\" \\\"*\\\"\\n    \\\"@types/validator\\\" \\\"*\\\"\\n\\n\\\"@types/serve-static@*\\\":\\n  version \\\"1.13.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/serve-static/-/serve-static-1.13.2.tgz#f5ac4d7a6420a99a6a45af4719f4dcd8cd907a48\\\"\\n  dependencies:\\n    \\\"@types/express-serve-static-core\\\" \\\"*\\\"\\n    \\\"@types/mime\\\" \\\"*\\\"\\n\\n\\\"@types/validator@*\\\":\\n  version \\\"9.4.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/@types/validator/-/validator-9.4.1.tgz#bea5a290e61f1cbf12af3fd878706aeec2ba0087\\\"\\n\\naccepts@~1.3.5:\\n  version \\\"1.3.5\\\"\\n  resolved \\\"https://registry.yarnpkg.com/accepts/-/accepts-1.3.5.tgz#eb777df6011723a3b14e8a72c0805c8e86746bd2\\\"\\n  dependencies:\\n    mime-types \\\"~2.1.18\\\"\\n    negotiator \\\"0.6.1\\\"\\n\\nansi-regex@^2.0.0:\\n  version \\\"2.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/ansi-regex/-/ansi-regex-2.1.1.tgz#c3b33ab5ee360d86e0e628f0468ae7ef27d654df\\\"\\n\\nansi-styles@^2.2.1:\\n  version \\\"2.2.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-2.2.1.tgz#b432dd3358b634cf75e1e4664368240533c1ddbe\\\"\\n\\nansi-styles@^3.2.1:\\n  version \\\"3.2.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/ansi-styles/-/ansi-styles-3.2.1.tgz#41fbb20243e50b12be0f04b8dedbf07520ce841d\\\"\\n  dependencies:\\n    color-convert \\\"^1.9.0\\\"\\n\\nargparse@^1.0.7:\\n  version \\\"1.0.10\\\"\\n  resolved \\\"https://registry.yarnpkg.com/argparse/-/argparse-1.0.10.tgz#bcd6791ea5ae09725e17e5ad988134cd40b3d911\\\"\\n  dependencies:\\n    sprintf-js \\\"~1.0.2\\\"\\n\\narray-flatten@1.1.1:\\n  version \\\"1.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/array-flatten/-/array-flatten-1.1.1.tgz#9a5f699051b1e7073328f2a008968b64ea2955d2\\\"\\n\\narrify@^1.0.0:\\n  version \\\"1.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/arrify/-/arrify-1.0.1.tgz#898508da2226f380df904728456849c1501a4b0d\\\"\\n\\nbabel-code-frame@^6.22.0:\\n  version \\\"6.26.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/babel-code-frame/-/babel-code-frame-6.26.0.tgz#63fd43f7dc1e3bb7ce35947db8fe369a3f58c74b\\\"\\n  dependencies:\\n    chalk \\\"^1.1.3\\\"\\n    esutils \\\"^2.0.2\\\"\\n    js-tokens \\\"^3.0.2\\\"\\n\\nbalanced-match@^1.0.0:\\n  version \\\"1.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/balanced-match/-/balanced-match-1.0.0.tgz#89b4d199ab2bee49de164ea02b89ce462d71b767\\\"\\n\\nbluebird@^3.4.6, bluebird@^3.5.0:\\n  version \\\"3.5.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/bluebird/-/bluebird-3.5.1.tgz#d9551f9de98f1fcda1e683d17ee91a0602ee2eb9\\\"\\n\\nbody-parser@1.18.2:\\n  version \\\"1.18.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/body-parser/-/body-parser-1.18.2.tgz#87678a19d84b47d859b83199bd59bce222b10454\\\"\\n  dependencies:\\n    bytes \\\"3.0.0\\\"\\n    content-type \\\"~1.0.4\\\"\\n    debug \\\"2.6.9\\\"\\n    depd \\\"~1.1.1\\\"\\n    http-errors \\\"~1.6.2\\\"\\n    iconv-lite \\\"0.4.19\\\"\\n    on-finished \\\"~2.3.0\\\"\\n    qs \\\"6.5.1\\\"\\n    raw-body \\\"2.3.2\\\"\\n    type-is \\\"~1.6.15\\\"\\n\\nbrace-expansion@^1.1.7:\\n  version \\\"1.1.11\\\"\\n  resolved \\\"https://registry.yarnpkg.com/brace-expansion/-/brace-expansion-1.1.11.tgz#3c7fcbf529d87226f3d2f52b966ff5271eb441dd\\\"\\n  dependencies:\\n    balanced-match \\\"^1.0.0\\\"\\n    concat-map \\\"0.0.1\\\"\\n\\nbuffer-from@^1.0.0, buffer-from@^1.1.0:\\n  version \\\"1.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/buffer-from/-/buffer-from-1.1.1.tgz#32713bc028f75c02fdb710d7c7bcec1f2c6070ef\\\"\\n\\nbuffer-writer@1.0.1:\\n  version \\\"1.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/buffer-writer/-/buffer-writer-1.0.1.tgz#22a936901e3029afcd7547eb4487ceb697a3bf08\\\"\\n\\nbuiltin-modules@^1.1.1:\\n  version \\\"1.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/builtin-modules/-/builtin-modules-1.1.1.tgz#270f076c5a72c02f5b65a47df94c5fe3a278892f\\\"\\n\\nbytes@3.0.0:\\n  version \\\"3.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/bytes/-/bytes-3.0.0.tgz#d32815404d689699f85a4ea4fa8755dd13a96048\\\"\\n\\nchalk@^1.1.3:\\n  version \\\"1.1.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/chalk/-/chalk-1.1.3.tgz#a8115c55e4a702fe4d150abd3872822a7e09fc98\\\"\\n  dependencies:\\n    ansi-styles \\\"^2.2.1\\\"\\n    escape-string-regexp \\\"^1.0.2\\\"\\n    has-ansi \\\"^2.0.0\\\"\\n    strip-ansi \\\"^3.0.0\\\"\\n    supports-color \\\"^2.0.0\\\"\\n\\nchalk@^2.3.0:\\n  version \\\"2.4.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/chalk/-/chalk-2.4.1.tgz#18c49ab16a037b6eb0152cc83e3471338215b66e\\\"\\n  dependencies:\\n    ansi-styles \\\"^3.2.1\\\"\\n    escape-string-regexp \\\"^1.0.5\\\"\\n    supports-color \\\"^5.3.0\\\"\\n\\ncls-bluebird@^2.1.0:\\n  version \\\"2.1.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/cls-bluebird/-/cls-bluebird-2.1.0.tgz#37ef1e080a8ffb55c2f4164f536f1919e7968aee\\\"\\n  dependencies:\\n    is-bluebird \\\"^1.0.2\\\"\\n    shimmer \\\"^1.1.0\\\"\\n\\ncolor-convert@^1.9.0:\\n  version \\\"1.9.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/color-convert/-/color-convert-1.9.2.tgz#49881b8fba67df12a96bdf3f56c0aab9e7913147\\\"\\n  dependencies:\\n    color-name \\\"1.1.1\\\"\\n\\ncolor-name@1.1.1:\\n  version \\\"1.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/color-name/-/color-name-1.1.1.tgz#4b1415304cf50028ea81643643bd82ea05803689\\\"\\n\\ncommander@^2.12.1:\\n  version \\\"2.17.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/commander/-/commander-2.17.1.tgz#bd77ab7de6de94205ceacc72f1716d29f20a77bf\\\"\\n\\nconcat-map@0.0.1:\\n  version \\\"0.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/concat-map/-/concat-map-0.0.1.tgz#d8a96bd77fd68df7793a73036a3ba0d5405d477b\\\"\\n\\ncontent-disposition@0.5.2:\\n  version \\\"0.5.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/content-disposition/-/content-disposition-0.5.2.tgz#0cf68bb9ddf5f2be7961c3a85178cb85dba78cb4\\\"\\n\\ncontent-type@~1.0.4:\\n  version \\\"1.0.4\\\"\\n  resolved \\\"https://registry.yarnpkg.com/content-type/-/content-type-1.0.4.tgz#e138cc75e040c727b1966fe5e5f8c9aee256fe3b\\\"\\n\\ncookie-signature@1.0.6:\\n  version \\\"1.0.6\\\"\\n  resolved \\\"https://registry.yarnpkg.com/cookie-signature/-/cookie-signature-1.0.6.tgz#e303a882b342cc3ee8ca513a79999734dab3ae2c\\\"\\n\\ncookie@0.3.1:\\n  version \\\"0.3.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/cookie/-/cookie-0.3.1.tgz#e7e0a1f9ef43b4c8ba925c5c5a96e806d16873bb\\\"\\n\\ndebug@2.6.9, debug@^2.6.9:\\n  version \\\"2.6.9\\\"\\n  resolved \\\"https://registry.yarnpkg.com/debug/-/debug-2.6.9.tgz#5d128515df134ff327e90a4c93f4e077a536341f\\\"\\n  dependencies:\\n    ms \\\"2.0.0\\\"\\n\\ndebug@^3.1.0:\\n  version \\\"3.1.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/debug/-/debug-3.1.0.tgz#5bb5a0672628b64149566ba16819e61518c67261\\\"\\n  dependencies:\\n    ms \\\"2.0.0\\\"\\n\\ndepd@1.1.1:\\n  version \\\"1.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/depd/-/depd-1.1.1.tgz#5783b4e1c459f06fa5ca27f991f3d06e7a310359\\\"\\n\\ndepd@^1.1.0, depd@~1.1.1, depd@~1.1.2:\\n  version \\\"1.1.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/depd/-/depd-1.1.2.tgz#9bcd52e14c097763e749b274c4346ed2e560b5a9\\\"\\n\\ndestroy@~1.0.4:\\n  version \\\"1.0.4\\\"\\n  resolved \\\"https://registry.yarnpkg.com/destroy/-/destroy-1.0.4.tgz#978857442c44749e4206613e37946205826abd80\\\"\\n\\ndiff@^3.1.0, diff@^3.2.0:\\n  version \\\"3.5.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/diff/-/diff-3.5.0.tgz#800c0dd1e0a8bfbc95835c202ad220fe317e5a12\\\"\\n\\ndottie@^2.0.0:\\n  version \\\"2.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/dottie/-/dottie-2.0.0.tgz#da191981c8b8d713ca0115d5898cf397c2f0ddd0\\\"\\n\\nee-first@1.1.1:\\n  version \\\"1.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/ee-first/-/ee-first-1.1.1.tgz#590c61156b0ae2f4f0255732a158b266bc56b21d\\\"\\n\\nencodeurl@~1.0.2:\\n  version \\\"1.0.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/encodeurl/-/encodeurl-1.0.2.tgz#ad3ff4c86ec2d029322f5a02c3a9a606c95b3f59\\\"\\n\\nescape-html@~1.0.3:\\n  version \\\"1.0.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/escape-html/-/escape-html-1.0.3.tgz#0258eae4d3d0c0974de1c169188ef0051d1d1988\\\"\\n\\nescape-string-regexp@^1.0.2, escape-string-regexp@^1.0.5:\\n  version \\\"1.0.5\\\"\\n  resolved \\\"https://registry.yarnpkg.com/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz#1b61c0562190a8dff6ae3bb2cf0200ca130b86d4\\\"\\n\\nesprima@^4.0.0:\\n  version \\\"4.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/esprima/-/esprima-4.0.1.tgz#13b04cdb3e6c5d19df91ab6987a8695619b0aa71\\\"\\n\\nesutils@^2.0.2:\\n  version \\\"2.0.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/esutils/-/esutils-2.0.2.tgz#0abf4f1caa5bcb1f7a9d8acc6dea4faaa04bac9b\\\"\\n\\netag@~1.8.1:\\n  version \\\"1.8.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/etag/-/etag-1.8.1.tgz#41ae2eeb65efa62268aebfea83ac7d79299b0887\\\"\\n\\nexpress@^4.16.3:\\n  version \\\"4.16.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/express/-/express-4.16.3.tgz#6af8a502350db3246ecc4becf6b5a34d22f7ed53\\\"\\n  dependencies:\\n    accepts \\\"~1.3.5\\\"\\n    array-flatten \\\"1.1.1\\\"\\n    body-parser \\\"1.18.2\\\"\\n    content-disposition \\\"0.5.2\\\"\\n    content-type \\\"~1.0.4\\\"\\n    cookie \\\"0.3.1\\\"\\n    cookie-signature \\\"1.0.6\\\"\\n    debug \\\"2.6.9\\\"\\n    depd \\\"~1.1.2\\\"\\n    encodeurl \\\"~1.0.2\\\"\\n    escape-html \\\"~1.0.3\\\"\\n    etag \\\"~1.8.1\\\"\\n    finalhandler \\\"1.1.1\\\"\\n    fresh \\\"0.5.2\\\"\\n    merge-descriptors \\\"1.0.1\\\"\\n    methods \\\"~1.1.2\\\"\\n    on-finished \\\"~2.3.0\\\"\\n    parseurl \\\"~1.3.2\\\"\\n    path-to-regexp \\\"0.1.7\\\"\\n    proxy-addr \\\"~2.0.3\\\"\\n    qs \\\"6.5.1\\\"\\n    range-parser \\\"~1.2.0\\\"\\n    safe-buffer \\\"5.1.1\\\"\\n    send \\\"0.16.2\\\"\\n    serve-static \\\"1.13.2\\\"\\n    setprototypeof \\\"1.1.0\\\"\\n    statuses \\\"~1.4.0\\\"\\n    type-is \\\"~1.6.16\\\"\\n    utils-merge \\\"1.0.1\\\"\\n    vary \\\"~1.1.2\\\"\\n\\nfinalhandler@1.1.1:\\n  version \\\"1.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/finalhandler/-/finalhandler-1.1.1.tgz#eebf4ed840079c83f4249038c9d703008301b105\\\"\\n  dependencies:\\n    debug \\\"2.6.9\\\"\\n    encodeurl \\\"~1.0.2\\\"\\n    escape-html \\\"~1.0.3\\\"\\n    on-finished \\\"~2.3.0\\\"\\n    parseurl \\\"~1.3.2\\\"\\n    statuses \\\"~1.4.0\\\"\\n    unpipe \\\"~1.0.0\\\"\\n\\nforwarded@~0.1.2:\\n  version \\\"0.1.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/forwarded/-/forwarded-0.1.2.tgz#98c23dab1175657b8c0573e8ceccd91b0ff18c84\\\"\\n\\nfresh@0.5.2:\\n  version \\\"0.5.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/fresh/-/fresh-0.5.2.tgz#3d8cadd90d976569fa835ab1f8e4b23a105605a7\\\"\\n\\nfs.realpath@^1.0.0:\\n  version \\\"1.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/fs.realpath/-/fs.realpath-1.0.0.tgz#1504ad2523158caa40db4a2787cb01411994ea4f\\\"\\n\\ngeneric-pool@^3.4.0:\\n  version \\\"3.4.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/generic-pool/-/generic-pool-3.4.2.tgz#92ff7196520d670839a67308092a12aadf2f6a59\\\"\\n\\nglob@^7.1.1:\\n  version \\\"7.1.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/glob/-/glob-7.1.2.tgz#c19c9df9a028702d678612384a6552404c636d15\\\"\\n  dependencies:\\n    fs.realpath \\\"^1.0.0\\\"\\n    inflight \\\"^1.0.4\\\"\\n    inherits \\\"2\\\"\\n    minimatch \\\"^3.0.4\\\"\\n    once \\\"^1.3.0\\\"\\n    path-is-absolute \\\"^1.0.0\\\"\\n\\nhas-ansi@^2.0.0:\\n  version \\\"2.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/has-ansi/-/has-ansi-2.0.0.tgz#34f5049ce1ecdf2b0649af3ef24e45ed35416d91\\\"\\n  dependencies:\\n    ansi-regex \\\"^2.0.0\\\"\\n\\nhas-flag@^3.0.0:\\n  version \\\"3.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/has-flag/-/has-flag-3.0.0.tgz#b5d454dc2199ae225699f3467e5a07f3b955bafd\\\"\\n\\nhttp-errors@1.6.2:\\n  version \\\"1.6.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/http-errors/-/http-errors-1.6.2.tgz#0a002cc85707192a7e7946ceedc11155f60ec736\\\"\\n  dependencies:\\n    depd \\\"1.1.1\\\"\\n    inherits \\\"2.0.3\\\"\\n    setprototypeof \\\"1.0.3\\\"\\n    statuses \\\">= 1.3.1 < 2\\\"\\n\\nhttp-errors@~1.6.2:\\n  version \\\"1.6.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/http-errors/-/http-errors-1.6.3.tgz#8b55680bb4be283a0b5bf4ea2e38580be1d9320d\\\"\\n  dependencies:\\n    depd \\\"~1.1.2\\\"\\n    inherits \\\"2.0.3\\\"\\n    setprototypeof \\\"1.1.0\\\"\\n    statuses \\\">= 1.4.0 < 2\\\"\\n\\niconv-lite@0.4.19:\\n  version \\\"0.4.19\\\"\\n  resolved \\\"https://registry.yarnpkg.com/iconv-lite/-/iconv-lite-0.4.19.tgz#f7468f60135f5e5dad3399c0a81be9a1603a082b\\\"\\n\\ninflection@1.12.0:\\n  version \\\"1.12.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/inflection/-/inflection-1.12.0.tgz#a200935656d6f5f6bc4dc7502e1aecb703228416\\\"\\n\\ninflight@^1.0.4:\\n  version \\\"1.0.6\\\"\\n  resolved \\\"https://registry.yarnpkg.com/inflight/-/inflight-1.0.6.tgz#49bd6331d7d02d0c09bc910a1075ba8165b56df9\\\"\\n  dependencies:\\n    once \\\"^1.3.0\\\"\\n    wrappy \\\"1\\\"\\n\\ninherits@2, inherits@2.0.3:\\n  version \\\"2.0.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/inherits/-/inherits-2.0.3.tgz#633c2c83e3da42a502f52466022480f4208261de\\\"\\n\\nipaddr.js@1.8.0:\\n  version \\\"1.8.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/ipaddr.js/-/ipaddr.js-1.8.0.tgz#eaa33d6ddd7ace8f7f6fe0c9ca0440e706738b1e\\\"\\n\\nis-bluebird@^1.0.2:\\n  version \\\"1.0.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/is-bluebird/-/is-bluebird-1.0.2.tgz#096439060f4aa411abee19143a84d6a55346d6e2\\\"\\n\\njs-tokens@^3.0.2:\\n  version \\\"3.0.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/js-tokens/-/js-tokens-3.0.2.tgz#9866df395102130e38f7f996bceb65443209c25b\\\"\\n\\njs-yaml@^3.7.0:\\n  version \\\"3.12.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/js-yaml/-/js-yaml-3.12.0.tgz#eaed656ec8344f10f527c6bfa1b6e2244de167d1\\\"\\n  dependencies:\\n    argparse \\\"^1.0.7\\\"\\n    esprima \\\"^4.0.0\\\"\\n\\nlodash@^4.17.1:\\n  version \\\"4.17.10\\\"\\n  resolved \\\"https://registry.yarnpkg.com/lodash/-/lodash-4.17.10.tgz#1b7793cf7259ea38fb3661d4d38b3260af8ae4e7\\\"\\n\\nmake-error@^1.1.1:\\n  version \\\"1.3.4\\\"\\n  resolved \\\"https://registry.yarnpkg.com/make-error/-/make-error-1.3.4.tgz#19978ed575f9e9545d2ff8c13e33b5d18a67d535\\\"\\n\\nmedia-typer@0.3.0:\\n  version \\\"0.3.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/media-typer/-/media-typer-0.3.0.tgz#8710d7af0aa626f8fffa1ce00168545263255748\\\"\\n\\nmemoize-decorator@^1.0.2:\\n  version \\\"1.0.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/memoize-decorator/-/memoize-decorator-1.0.2.tgz#605a41715c4171db192a90098b00ab8d6e1102f5\\\"\\n\\nmerge-descriptors@1.0.1:\\n  version \\\"1.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/merge-descriptors/-/merge-descriptors-1.0.1.tgz#b00aaa556dd8b44568150ec9d1b953f3f90cbb61\\\"\\n\\nmethods@~1.1.2:\\n  version \\\"1.1.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/methods/-/methods-1.1.2.tgz#5529a4d67654134edcc5266656835b0f851afcee\\\"\\n\\nmime-db@~1.35.0:\\n  version \\\"1.35.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/mime-db/-/mime-db-1.35.0.tgz#0569d657466491283709663ad379a99b90d9ab47\\\"\\n\\nmime-types@~2.1.18:\\n  version \\\"2.1.19\\\"\\n  resolved \\\"https://registry.yarnpkg.com/mime-types/-/mime-types-2.1.19.tgz#71e464537a7ef81c15f2db9d97e913fc0ff606f0\\\"\\n  dependencies:\\n    mime-db \\\"~1.35.0\\\"\\n\\nmime@1.4.1:\\n  version \\\"1.4.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/mime/-/mime-1.4.1.tgz#121f9ebc49e3766f311a76e1fa1c8003c4b03aa6\\\"\\n\\nminimatch@^3.0.4:\\n  version \\\"3.0.4\\\"\\n  resolved \\\"https://registry.yarnpkg.com/minimatch/-/minimatch-3.0.4.tgz#5166e286457f03306064be5497e8dbb0c3d32083\\\"\\n  dependencies:\\n    brace-expansion \\\"^1.1.7\\\"\\n\\nminimist@0.0.8:\\n  version \\\"0.0.8\\\"\\n  resolved \\\"https://registry.yarnpkg.com/minimist/-/minimist-0.0.8.tgz#857fcabfc3397d2625b8228262e86aa7a011b05d\\\"\\n\\nminimist@^1.2.0:\\n  version \\\"1.2.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/minimist/-/minimist-1.2.0.tgz#a35008b20f41383eec1fb914f4cd5df79a264284\\\"\\n\\nmkdirp@^0.5.1:\\n  version \\\"0.5.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/mkdirp/-/mkdirp-0.5.1.tgz#30057438eac6cf7f8c4767f38648d6697d75c903\\\"\\n  dependencies:\\n    minimist \\\"0.0.8\\\"\\n\\nmoment-timezone@^0.5.14:\\n  version \\\"0.5.21\\\"\\n  resolved \\\"https://registry.yarnpkg.com/moment-timezone/-/moment-timezone-0.5.21.tgz#3cba247d84492174dbf71de2a9848fa13207b845\\\"\\n  dependencies:\\n    moment \\\">= 2.9.0\\\"\\n\\n\\\"moment@>= 2.9.0\\\", moment@^2.20.0:\\n  version \\\"2.22.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/moment/-/moment-2.22.2.tgz#3c257f9839fc0e93ff53149632239eb90783ff66\\\"\\n\\nms@2.0.0:\\n  version \\\"2.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/ms/-/ms-2.0.0.tgz#5608aeadfc00be6c2901df5f9861788de0d597c8\\\"\\n\\nnegotiator@0.6.1:\\n  version \\\"0.6.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/negotiator/-/negotiator-0.6.1.tgz#2b327184e8992101177b28563fb5e7102acd0ca9\\\"\\n\\non-finished@~2.3.0:\\n  version \\\"2.3.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/on-finished/-/on-finished-2.3.0.tgz#20f1336481b083cd75337992a16971aa2d906947\\\"\\n  dependencies:\\n    ee-first \\\"1.1.1\\\"\\n\\nonce@^1.3.0:\\n  version \\\"1.4.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/once/-/once-1.4.0.tgz#583b1aa775961d4b113ac17d9c50baef9dd76bd1\\\"\\n  dependencies:\\n    wrappy \\\"1\\\"\\n\\npacket-reader@0.3.1:\\n  version \\\"0.3.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/packet-reader/-/packet-reader-0.3.1.tgz#cd62e60af8d7fea8a705ec4ff990871c46871f27\\\"\\n\\nparseurl@~1.3.2:\\n  version \\\"1.3.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/parseurl/-/parseurl-1.3.2.tgz#fc289d4ed8993119460c156253262cdc8de65bf3\\\"\\n\\npath-is-absolute@^1.0.0:\\n  version \\\"1.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/path-is-absolute/-/path-is-absolute-1.0.1.tgz#174b9268735534ffbc7ace6bf53a5a9e1b5c5f5f\\\"\\n\\npath-parse@^1.0.5:\\n  version \\\"1.0.6\\\"\\n  resolved \\\"https://registry.yarnpkg.com/path-parse/-/path-parse-1.0.6.tgz#d62dbb5679405d72c4737ec58600e9ddcf06d24c\\\"\\n\\npath-to-regexp@0.1.7:\\n  version \\\"0.1.7\\\"\\n  resolved \\\"https://registry.yarnpkg.com/path-to-regexp/-/path-to-regexp-0.1.7.tgz#df604178005f522f15eb4490e7247a1bfaa67f8c\\\"\\n\\npg-connection-string@0.1.3:\\n  version \\\"0.1.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/pg-connection-string/-/pg-connection-string-0.1.3.tgz#da1847b20940e42ee1492beaf65d49d91b245df7\\\"\\n\\npg-hstore@^2.3.2:\\n  version \\\"2.3.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/pg-hstore/-/pg-hstore-2.3.2.tgz#f7ef053e7b9b892ae986af2f7cbe86432dfcf24f\\\"\\n  dependencies:\\n    underscore \\\"^1.7.0\\\"\\n\\npg-pool@~2.0.3:\\n  version \\\"2.0.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/pg-pool/-/pg-pool-2.0.3.tgz#c022032c8949f312a4f91fb6409ce04076be3257\\\"\\n\\npg-types@~1.12.1:\\n  version \\\"1.12.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/pg-types/-/pg-types-1.12.1.tgz#d64087e3903b58ffaad279e7595c52208a14c3d2\\\"\\n  dependencies:\\n    postgres-array \\\"~1.0.0\\\"\\n    postgres-bytea \\\"~1.0.0\\\"\\n    postgres-date \\\"~1.0.0\\\"\\n    postgres-interval \\\"^1.1.0\\\"\\n\\npg@^7.4.3:\\n  version \\\"7.4.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/pg/-/pg-7.4.3.tgz#f7b6f93f5340ecc2596afbb94a13e3d6b609834b\\\"\\n  dependencies:\\n    buffer-writer \\\"1.0.1\\\"\\n    packet-reader \\\"0.3.1\\\"\\n    pg-connection-string \\\"0.1.3\\\"\\n    pg-pool \\\"~2.0.3\\\"\\n    pg-types \\\"~1.12.1\\\"\\n    pgpass \\\"1.x\\\"\\n    semver \\\"4.3.2\\\"\\n\\npgpass@1.x:\\n  version \\\"1.0.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/pgpass/-/pgpass-1.0.2.tgz#2a7bb41b6065b67907e91da1b07c1847c877b306\\\"\\n  dependencies:\\n    split \\\"^1.0.0\\\"\\n\\npostgres-array@~1.0.0:\\n  version \\\"1.0.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/postgres-array/-/postgres-array-1.0.2.tgz#8e0b32eb03bf77a5c0a7851e0441c169a256a238\\\"\\n\\npostgres-bytea@~1.0.0:\\n  version \\\"1.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/postgres-bytea/-/postgres-bytea-1.0.0.tgz#027b533c0aa890e26d172d47cf9ccecc521acd35\\\"\\n\\npostgres-date@~1.0.0:\\n  version \\\"1.0.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/postgres-date/-/postgres-date-1.0.3.tgz#e2d89702efdb258ff9d9cee0fe91bd06975257a8\\\"\\n\\npostgres-interval@^1.1.0:\\n  version \\\"1.1.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/postgres-interval/-/postgres-interval-1.1.2.tgz#bf71ff902635f21cb241a013fc421d81d1db15a9\\\"\\n  dependencies:\\n    xtend \\\"^4.0.0\\\"\\n\\nproxy-addr@~2.0.3:\\n  version \\\"2.0.4\\\"\\n  resolved \\\"https://registry.yarnpkg.com/proxy-addr/-/proxy-addr-2.0.4.tgz#ecfc733bf22ff8c6f407fa275327b9ab67e48b93\\\"\\n  dependencies:\\n    forwarded \\\"~0.1.2\\\"\\n    ipaddr.js \\\"1.8.0\\\"\\n\\nqs@6.5.1:\\n  version \\\"6.5.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/qs/-/qs-6.5.1.tgz#349cdf6eef89ec45c12d7d5eb3fc0c870343a6d8\\\"\\n\\nrange-parser@~1.2.0:\\n  version \\\"1.2.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/range-parser/-/range-parser-1.2.0.tgz#f49be6b487894ddc40dcc94a322f611092e00d5e\\\"\\n\\nraw-body@2.3.2:\\n  version \\\"2.3.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/raw-body/-/raw-body-2.3.2.tgz#bcd60c77d3eb93cde0050295c3f379389bc88f89\\\"\\n  dependencies:\\n    bytes \\\"3.0.0\\\"\\n    http-errors \\\"1.6.2\\\"\\n    iconv-lite \\\"0.4.19\\\"\\n    unpipe \\\"1.0.0\\\"\\n\\nresolve@^1.3.2:\\n  version \\\"1.8.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/resolve/-/resolve-1.8.1.tgz#82f1ec19a423ac1fbd080b0bab06ba36e84a7a26\\\"\\n  dependencies:\\n    path-parse \\\"^1.0.5\\\"\\n\\nretry-as-promised@^2.3.2:\\n  version \\\"2.3.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/retry-as-promised/-/retry-as-promised-2.3.2.tgz#cd974ee4fd9b5fe03cbf31871ee48221c07737b7\\\"\\n  dependencies:\\n    bluebird \\\"^3.4.6\\\"\\n    debug \\\"^2.6.9\\\"\\n\\nsafe-buffer@5.1.1:\\n  version \\\"5.1.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/safe-buffer/-/safe-buffer-5.1.1.tgz#893312af69b2123def71f57889001671eeb2c853\\\"\\n\\nsemver@4.3.2:\\n  version \\\"4.3.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/semver/-/semver-4.3.2.tgz#c7a07158a80bedd052355b770d82d6640f803be7\\\"\\n\\nsemver@^5.3.0, semver@^5.5.0:\\n  version \\\"5.5.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/semver/-/semver-5.5.1.tgz#7dfdd8814bdb7cabc7be0fb1d734cfb66c940477\\\"\\n\\nsend@0.16.2:\\n  version \\\"0.16.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/send/-/send-0.16.2.tgz#6ecca1e0f8c156d141597559848df64730a6bbc1\\\"\\n  dependencies:\\n    debug \\\"2.6.9\\\"\\n    depd \\\"~1.1.2\\\"\\n    destroy \\\"~1.0.4\\\"\\n    encodeurl \\\"~1.0.2\\\"\\n    escape-html \\\"~1.0.3\\\"\\n    etag \\\"~1.8.1\\\"\\n    fresh \\\"0.5.2\\\"\\n    http-errors \\\"~1.6.2\\\"\\n    mime \\\"1.4.1\\\"\\n    ms \\\"2.0.0\\\"\\n    on-finished \\\"~2.3.0\\\"\\n    range-parser \\\"~1.2.0\\\"\\n    statuses \\\"~1.4.0\\\"\\n\\nsequelize@^4.38.0:\\n  version \\\"4.38.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/sequelize/-/sequelize-4.38.0.tgz#330c1aa445d4e46b80a97d895603c01666cdc357\\\"\\n  dependencies:\\n    bluebird \\\"^3.5.0\\\"\\n    cls-bluebird \\\"^2.1.0\\\"\\n    debug \\\"^3.1.0\\\"\\n    depd \\\"^1.1.0\\\"\\n    dottie \\\"^2.0.0\\\"\\n    generic-pool \\\"^3.4.0\\\"\\n    inflection \\\"1.12.0\\\"\\n    lodash \\\"^4.17.1\\\"\\n    moment \\\"^2.20.0\\\"\\n    moment-timezone \\\"^0.5.14\\\"\\n    retry-as-promised \\\"^2.3.2\\\"\\n    semver \\\"^5.5.0\\\"\\n    terraformer-wkt-parser \\\"^1.1.2\\\"\\n    toposort-class \\\"^1.0.1\\\"\\n    uuid \\\"^3.2.1\\\"\\n    validator \\\"^10.4.0\\\"\\n    wkx \\\"^0.4.1\\\"\\n\\nserve-static@1.13.2:\\n  version \\\"1.13.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/serve-static/-/serve-static-1.13.2.tgz#095e8472fd5b46237db50ce486a43f4b86c6cec1\\\"\\n  dependencies:\\n    encodeurl \\\"~1.0.2\\\"\\n    escape-html \\\"~1.0.3\\\"\\n    parseurl \\\"~1.3.2\\\"\\n    send \\\"0.16.2\\\"\\n\\nsetprototypeof@1.0.3:\\n  version \\\"1.0.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/setprototypeof/-/setprototypeof-1.0.3.tgz#66567e37043eeb4f04d91bd658c0cbefb55b8e04\\\"\\n\\nsetprototypeof@1.1.0:\\n  version \\\"1.1.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/setprototypeof/-/setprototypeof-1.1.0.tgz#d0bd85536887b6fe7c0d818cb962d9d91c54e656\\\"\\n\\nshimmer@^1.1.0:\\n  version \\\"1.2.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/shimmer/-/shimmer-1.2.0.tgz#f966f7555789763e74d8841193685a5e78736665\\\"\\n\\nsource-map-support@^0.5.6:\\n  version \\\"0.5.9\\\"\\n  resolved \\\"https://registry.yarnpkg.com/source-map-support/-/source-map-support-0.5.9.tgz#41bc953b2534267ea2d605bccfa7bfa3111ced5f\\\"\\n  dependencies:\\n    buffer-from \\\"^1.0.0\\\"\\n    source-map \\\"^0.6.0\\\"\\n\\nsource-map@^0.6.0:\\n  version \\\"0.6.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/source-map/-/source-map-0.6.1.tgz#74722af32e9614e9c287a8d0bbde48b5e2f1a263\\\"\\n\\nsplit@^1.0.0:\\n  version \\\"1.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/split/-/split-1.0.1.tgz#605bd9be303aa59fb35f9229fbea0ddec9ea07d9\\\"\\n  dependencies:\\n    through \\\"2\\\"\\n\\nsprintf-js@~1.0.2:\\n  version \\\"1.0.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/sprintf-js/-/sprintf-js-1.0.3.tgz#04e6926f662895354f3dd015203633b857297e2c\\\"\\n\\n\\\"statuses@>= 1.3.1 < 2\\\", \\\"statuses@>= 1.4.0 < 2\\\":\\n  version \\\"1.5.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/statuses/-/statuses-1.5.0.tgz#161c7dac177659fd9811f43771fa99381478628c\\\"\\n\\nstatuses@~1.4.0:\\n  version \\\"1.4.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/statuses/-/statuses-1.4.0.tgz#bb73d446da2796106efcc1b601a253d6c46bd087\\\"\\n\\nstrip-ansi@^3.0.0:\\n  version \\\"3.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/strip-ansi/-/strip-ansi-3.0.1.tgz#6a385fb8853d952d5ff05d0e8aaf94278dc63dcf\\\"\\n  dependencies:\\n    ansi-regex \\\"^2.0.0\\\"\\n\\nsupports-color@^2.0.0:\\n  version \\\"2.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/supports-color/-/supports-color-2.0.0.tgz#535d045ce6b6363fa40117084629995e9df324c7\\\"\\n\\nsupports-color@^5.3.0:\\n  version \\\"5.5.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/supports-color/-/supports-color-5.5.0.tgz#e2e69a44ac8772f78a1ec0b35b689df6530efc8f\\\"\\n  dependencies:\\n    has-flag \\\"^3.0.0\\\"\\n\\nterraformer-wkt-parser@^1.1.2:\\n  version \\\"1.2.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/terraformer-wkt-parser/-/terraformer-wkt-parser-1.2.0.tgz#c9d6ac3dff25f4c0bd344e961f42694961834c34\\\"\\n  dependencies:\\n    \\\"@types/geojson\\\" \\\"^1.0.0\\\"\\n    terraformer \\\"~1.0.5\\\"\\n\\nterraformer@~1.0.5:\\n  version \\\"1.0.9\\\"\\n  resolved \\\"https://registry.yarnpkg.com/terraformer/-/terraformer-1.0.9.tgz#77851fef4a49c90b345dc53cf26809fdf29dcda6\\\"\\n  optionalDependencies:\\n    \\\"@types/geojson\\\" \\\"^1.0.0\\\"\\n\\nthrough@2:\\n  version \\\"2.3.8\\\"\\n  resolved \\\"https://registry.yarnpkg.com/through/-/through-2.3.8.tgz#0dd4c9ffaabc357960b1b724115d7e0e86a2e1f5\\\"\\n\\ntoposort-class@^1.0.1:\\n  version \\\"1.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/toposort-class/-/toposort-class-1.0.1.tgz#7ffd1f78c8be28c3ba45cd4e1a3f5ee193bd9988\\\"\\n\\nts-node@^7.0.1:\\n  version \\\"7.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/ts-node/-/ts-node-7.0.1.tgz#9562dc2d1e6d248d24bc55f773e3f614337d9baf\\\"\\n  dependencies:\\n    arrify \\\"^1.0.0\\\"\\n    buffer-from \\\"^1.1.0\\\"\\n    diff \\\"^3.1.0\\\"\\n    make-error \\\"^1.1.1\\\"\\n    minimist \\\"^1.2.0\\\"\\n    mkdirp \\\"^0.5.1\\\"\\n    source-map-support \\\"^0.5.6\\\"\\n    yn \\\"^2.0.0\\\"\\n\\ntslib@^1.7.1, tslib@^1.8.0, tslib@^1.8.1:\\n  version \\\"1.9.3\\\"\\n  resolved \\\"https://registry.yarnpkg.com/tslib/-/tslib-1.9.3.tgz#d7e4dd79245d85428c4d7e4822a79917954ca286\\\"\\n\\ntslint-clean-code@^0.2.7:\\n  version \\\"0.2.7\\\"\\n  resolved \\\"https://registry.yarnpkg.com/tslint-clean-code/-/tslint-clean-code-0.2.7.tgz#11ab8712cd117df9a8a4cc571d3e931651014677\\\"\\n  dependencies:\\n    memoize-decorator \\\"^1.0.2\\\"\\n    tsutils \\\"2.7.1\\\"\\n\\ntslint@^5.11.0:\\n  version \\\"5.11.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/tslint/-/tslint-5.11.0.tgz#98f30c02eae3cde7006201e4c33cb08b48581eed\\\"\\n  dependencies:\\n    babel-code-frame \\\"^6.22.0\\\"\\n    builtin-modules \\\"^1.1.1\\\"\\n    chalk \\\"^2.3.0\\\"\\n    commander \\\"^2.12.1\\\"\\n    diff \\\"^3.2.0\\\"\\n    glob \\\"^7.1.1\\\"\\n    js-yaml \\\"^3.7.0\\\"\\n    minimatch \\\"^3.0.4\\\"\\n    resolve \\\"^1.3.2\\\"\\n    semver \\\"^5.3.0\\\"\\n    tslib \\\"^1.8.0\\\"\\n    tsutils \\\"^2.27.2\\\"\\n\\ntsutils@2.7.1:\\n  version \\\"2.7.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/tsutils/-/tsutils-2.7.1.tgz#411a0e9466525a2b2869260a55620d7292155e24\\\"\\n  dependencies:\\n    tslib \\\"^1.7.1\\\"\\n\\ntsutils@^2.27.2:\\n  version \\\"2.29.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/tsutils/-/tsutils-2.29.0.tgz#32b488501467acbedd4b85498673a0812aca0b99\\\"\\n  dependencies:\\n    tslib \\\"^1.8.1\\\"\\n\\ntype-is@~1.6.15, type-is@~1.6.16:\\n  version \\\"1.6.16\\\"\\n  resolved \\\"https://registry.yarnpkg.com/type-is/-/type-is-1.6.16.tgz#f89ce341541c672b25ee7ae3c73dee3b2be50194\\\"\\n  dependencies:\\n    media-typer \\\"0.3.0\\\"\\n    mime-types \\\"~2.1.18\\\"\\n\\ntypescript@^3.0.1:\\n  version \\\"3.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/typescript/-/typescript-3.0.1.tgz#43738f29585d3a87575520a4b93ab6026ef11fdb\\\"\\n\\nunderscore@^1.7.0:\\n  version \\\"1.9.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/underscore/-/underscore-1.9.1.tgz#06dce34a0e68a7babc29b365b8e74b8925203961\\\"\\n\\nunpipe@1.0.0, unpipe@~1.0.0:\\n  version \\\"1.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/unpipe/-/unpipe-1.0.0.tgz#b2bf4ee8514aae6165b4817829d21b2ef49904ec\\\"\\n\\nutils-merge@1.0.1:\\n  version \\\"1.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/utils-merge/-/utils-merge-1.0.1.tgz#9f95710f50a267947b2ccc124741c1028427e713\\\"\\n\\nuuid@^3.2.1:\\n  version \\\"3.3.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/uuid/-/uuid-3.3.2.tgz#1b4af4955eb3077c501c23872fc6513811587131\\\"\\n\\nvalidator@^10.4.0:\\n  version \\\"10.6.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/validator/-/validator-10.6.0.tgz#a9bdce685b3c3e8480e7ebbb9eb95c54cd9733b0\\\"\\n\\nvary@~1.1.2:\\n  version \\\"1.1.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/vary/-/vary-1.1.2.tgz#2299f02c6ded30d4a5961b0b9f74524a18f634fc\\\"\\n\\nwkx@^0.4.1:\\n  version \\\"0.4.5\\\"\\n  resolved \\\"https://registry.yarnpkg.com/wkx/-/wkx-0.4.5.tgz#a85e15a6e69d1bfaec2f3c523be3dfa40ab861d0\\\"\\n  dependencies:\\n    \\\"@types/node\\\" \\\"*\\\"\\n\\nwrappy@1:\\n  version \\\"1.0.2\\\"\\n  resolved \\\"https://registry.yarnpkg.com/wrappy/-/wrappy-1.0.2.tgz#b5243d8f3ec1aa35f1364605bc0d1036e30ab69f\\\"\\n\\nxtend@^4.0.0:\\n  version \\\"4.0.1\\\"\\n  resolved \\\"https://registry.yarnpkg.com/xtend/-/xtend-4.0.1.tgz#a5c6d532be656e23db820efb943a1f04998d63af\\\"\\n\\nyn@^2.0.0:\\n  version \\\"2.0.0\\\"\\n  resolved \\\"https://registry.yarnpkg.com/yn/-/yn-2.0.0.tgz#e5adabc8acf408f6385fc76495684c88e6af689a\\\"\\n\"},\"github/ahmerb/typescript-sequelize-example/src/app.ts\":{\"type\":\"CODE\",\"contents\":\"import express from 'express';\\nimport Sequelize from 'sequelize';\\nimport { Request, Response } from 'express';\\nimport { createModels } from './models';\\nimport { CommentInstance } from 'models/Comment';\\nimport { PostInstance } from 'models/Post';\\nimport { UserInstance } from 'models/User';\\n\\nconst Op = Sequelize.Op;\\n\\nconst app: express.Application = express();\\n\\nconst sequelizeConfig = require('./config/sequelizeConfig.json');\\nconst db = createModels(sequelizeConfig);\\ndb.sequelize.sync();\\n\\napp.get('/', (req: Request, res: Response) => {\\n  res.status(200).json({ message: 'hello, world' });\\n});\\n\\napp.get('/users', (req: Request, res: Response) => {\\n  db.User.findAll()\\n    .then((users: UserInstance[]) => res.status(200).json({ users }))\\n    .catch(err => res.status(500).json({ err: ['oops', err] }));\\n});\\n\\napp.get('/comments', (req: Request, res: Response) => {\\n  db.Comment.findAll()\\n    .then((comments: CommentInstance[]) => res.status(200).json({ comments }))\\n    .catch(err => res.status(500).json({ err: ['oops', err] }));\\n});\\n\\napp.get('/posts', (req: Request, res: Response) => {\\n  db.Post.findAll()\\n    .then((posts: PostInstance[]) => res.status(200).json({ posts }))\\n    .catch(err => res.status(500).json({ err: ['oops', err] }));\\n});\\n\\n// GET all users that upvoted a comment\\napp.get('/comments/:id/upvoters', (req: Request, res: Response) => {\\n  db.Comment.findById(req.params.id)\\n    .then(comment => comment.getUpvoters())\\n    .then(upvoters =>\\n      res.status(200).json({\\n        user_ids: upvoters.map(user => user.id)\\n      })\\n    )\\n    .catch(err => res.status(500).json({ err: ['oops', err] }));\\n});\\n\\n// GET all posts a user has authored\\napp.get('/users/:id/posts', (req: Request, res: Response) => {\\n  db.User.findById(req.params.id)\\n    .then(user => user.getPosts())\\n    .then(posts => \\n      res.status(200).json({ posts })\\n    )\\n    .catch(err => res.status(500).json({ err: ['oops', err] }))\\n});\\n\\n// POST create new dummy user with posts\\napp.post('/seed/user', (req: Request, res: Response) => {\\n  db.User.create({\\n    name: 'John Doe',\\n    posts: [\\n      {\\n        name: 'post1',\\n        title: 'Croissants are tasty',\\n        text: 'I recently ate a croissant from France. It was nice.',\\n        category: 'croissants'\\n      },\\n      {\\n        name: 'post2',\\n        title: 'my fav techno music',\\n        text: 'I love the song TECHNO by TechnoGang.',\\n        category: 'techno'\\n      }\\n    ]\\n  },\\n  { \\n    include: [{ model: db.Post, as: 'posts' }]\\n  })\\n    .then(user => res.status(201).json({ user }))\\n    .catch(err => res.status(500).json({ err: ['oops', err] }))\\n});\\n\\n// POST create new dummy upvotes for comment\\n// also, use async/await syntax here, just to demonstrate you can do it in typescript\\napp.post('/seed/user/:user_id/upvotes', async (req: Request, res: Response) => {\\n  try {\\n    const user = await db.User.findById(req.params.user_id);\\n    const comment = await user.createComment({\\n      text: 'this comment is cool.'\\n    });\\n    await user.addUpvotedComment(comment.id);\\n    res.status(201).json({ comment });\\n  } catch (err) {\\n    res.status(500).json({ err: ['oops', err] });\\n  }\\n});\\n\\n// POST add upvoter\\napp.post('/comment/:comment_id/upvoter/:upvoter_id', (req: Request, res: Response) => {\\n  db.Comment.findById(req.params.comment_id)\\n    .then(comment => comment.addUpvoter(req.params.upvoter_id))\\n    .catch(err => res.status(500).json({ err: ['oops', err] }))\\n});\\n\\n// GET all upvoted comments for specified users (using eager loading)\\n// userIds go in query params, e.g. /upvoted_comments?userIds=[1,2,3]\\napp.get('/upvoted_comments', (req: Request, res: Response) =>  {\\n  console.log(req.query.userIds);\\n  const userIds = JSON.parse(req.query.userIds);\\n  db.User.findAll({\\n    where: { id: { [Op.in]: userIds } },\\n    include: [{ model: db.Comment, as: 'upvotedComments' }]\\n  })\\n    .then(users => {\\n      const flatten = (flattened: CommentInstance[], next: CommentInstance[]) => ([\\n        ...flattened,\\n        ...next\\n      ]);\\n      const comments = users.map(user => user.upvotedComments)\\n        .reduce(flatten, []);\\n      res.status(200).json({ upvotedComments: comments });\\n    })\\n    .catch(err => res.status(500).json({ err: ['oops', err] }))\\n});\\n\\napp.listen(3000, () => {\\n  console.log('App listening on port 3000');\\n});\\n\"},\"github/ahmerb/typescript-sequelize-example/src/config/sequelizeConfig.json\":{\"type\":\"CODE\",\"contents\":\"{\\n  \\\"database\\\": \\\"tutorial\\\",\\n  \\\"username\\\": \\\"postgres\\\",\\n  \\\"password\\\": null,\\n  \\\"params\\\": {\\n    \\\"host\\\": \\\"localhost\\\",\\n    \\\"dialect\\\": \\\"postgres\\\",\\n    \\\"operatorsAliases\\\": false\\n  }\\n}\\n\"},\"github/ahmerb/typescript-sequelize-example/src/models/Comment.ts\":{\"type\":\"CODE\",\"contents\":\"import * as Sequelize from 'sequelize';\\nimport { PostAttributes, PostInstance } from 'models/Post';\\nimport { UserAttributes, UserInstance } from 'models/User';\\nimport { SequelizeAttributes } from 'typings/SequelizeAttributes';\\n\\nexport interface CommentAttributes {\\n  id?: number;\\n  text: string;\\n  createdAt?: Date;\\n  updatedAt?: Date;\\n  post?: PostAttributes | PostAttributes['id'];\\n  author?: UserAttributes | UserAttributes['id'];\\n  upvoters?: UserAttributes[] | UserAttributes['id'][];\\n};\\n\\nexport interface CommentInstance extends Sequelize.Instance<CommentAttributes>, CommentAttributes {\\n  getPost: Sequelize.BelongsToGetAssociationMixin<PostInstance>;\\n  setPost: Sequelize.BelongsToSetAssociationMixin<PostInstance, PostInstance['id']>;\\n  createPost: Sequelize.BelongsToCreateAssociationMixin<PostAttributes>;\\n\\n  getAuthor: Sequelize.BelongsToGetAssociationMixin<UserInstance>;\\n  setAuthor: Sequelize.BelongsToSetAssociationMixin<UserInstance, UserInstance['id']>;\\n  createAuthor: Sequelize.BelongsToCreateAssociationMixin<UserAttributes>;\\n\\n  getUpvoters: Sequelize.BelongsToManyGetAssociationsMixin<UserInstance>;\\n  setUpvoters: Sequelize.BelongsToManySetAssociationsMixin<UserInstance, UserInstance['id'], 'PostUpvotes'>;\\n  addUpvoters: Sequelize.BelongsToManyAddAssociationsMixin<UserInstance, UserInstance['id'], 'PostUpvotes'>;\\n  addUpvoter: Sequelize.BelongsToManyAddAssociationMixin<UserInstance, UserInstance['id'], 'PostUpvotes'>;\\n  createUpvoters: Sequelize.BelongsToManyCreateAssociationMixin<UserAttributes, UserInstance['id'], 'PostUpvotes'>;\\n  removeUpvoter: Sequelize.BelongsToManyRemoveAssociationMixin<UserInstance, UserInstance['id']>;\\n  removeUpvoters: Sequelize.BelongsToManyRemoveAssociationsMixin<UserInstance, UserInstance['id']>;\\n  hasUpvoter: Sequelize.BelongsToManyHasAssociationMixin<UserInstance, UserInstance['id']>;\\n  hasUpvoters: Sequelize.BelongsToManyHasAssociationsMixin<UserInstance, UserInstance['id']>;\\n  countUpvoters: Sequelize.BelongsToManyCountAssociationsMixin;\\n};\\n\\nexport const CommentFactory = (sequelize: Sequelize.Sequelize, DataTypes: Sequelize.DataTypes): Sequelize.Model<CommentInstance, CommentAttributes> => {\\n  const attributes: SequelizeAttributes<CommentAttributes> = {\\n    text: {\\n      type: DataTypes.STRING(1000)\\n    }\\n  };\\n\\n  const Comment = sequelize.define<CommentInstance, CommentAttributes>('Comment', attributes);\\n\\n  Comment.associate = models => {\\n    Comment.belongsTo(models.Post, { as: 'posts' });\\n    Comment.belongsTo(models.User, { as: 'author', foreignKey: 'AuthorId' });\\n    Comment.belongsToMany(models.User, {\\n      through: 'PostUpvotes',\\n      as: 'upvoters'\\n    });\\n  };\\n\\n  return Comment;\\n};\\n\"},\"github/ahmerb/typescript-sequelize-example/src/models/Post.ts\":{\"type\":\"CODE\",\"contents\":\"import * as Sequelize from 'sequelize';\\nimport { CommentAttributes, CommentInstance } from 'models/Comment';\\nimport { UserAttributes, UserInstance } from 'models/User';\\nimport { SequelizeAttributes } from 'typings/SequelizeAttributes';\\n\\nexport interface PostAttributes {\\n  id?: number;\\n  name: string;\\n  title: string;\\n  text: string;\\n  category: 'tech' | 'croissants' | 'techno';\\n  createdAt?: Date;\\n  updatedAt?: Date;\\n  comments?: CommentAttributes[] | CommentAttributes['id'][];\\n  author?: UserAttributes | UserAttributes['id'];\\n};\\n\\nexport interface PostInstance extends Sequelize.Instance<PostAttributes>, PostAttributes {\\n  getComments: Sequelize.HasManyGetAssociationsMixin<CommentInstance>;\\n  setComments: Sequelize.HasManySetAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  addComments: Sequelize.HasManyAddAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  addComment: Sequelize.HasManyAddAssociationMixin<CommentInstance, CommentInstance['id']>;\\n  createComment: Sequelize.HasManyCreateAssociationMixin<CommentAttributes, CommentInstance>;\\n  removeComment: Sequelize.HasManyRemoveAssociationMixin<CommentInstance, CommentInstance['id']>;\\n  removeComments: Sequelize.HasManyRemoveAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  hasComment: Sequelize.HasManyHasAssociationMixin<CommentInstance, CommentInstance['id']>;\\n  hasComments: Sequelize.HasManyHasAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  countComments: Sequelize.HasManyCountAssociationsMixin;\\n\\n  getAuthor: Sequelize.BelongsToGetAssociationMixin<UserInstance>;\\n  setAuthor: Sequelize.BelongsToSetAssociationMixin<UserInstance, UserInstance['id']>;\\n  createAuthor: Sequelize.BelongsToCreateAssociationMixin<UserAttributes>;\\n};\\n\\nexport const PostFactory = (sequelize: Sequelize.Sequelize, DataTypes: Sequelize.DataTypes): Sequelize.Model<PostInstance, PostAttributes> => {\\n  const attributes: SequelizeAttributes<PostAttributes> = {\\n    name: {\\n      type: DataTypes.STRING\\n    },\\n    title: {\\n      type: DataTypes.STRING\\n    },\\n    text: {\\n      type: DataTypes.STRING(5000) // extra long length\\n    },\\n    category: {\\n      type: DataTypes.ENUM('tech', 'croissants', 'techno')\\n    }\\n  };\\n\\n  const Post = sequelize.define<PostInstance, PostAttributes>('Post', attributes);\\n\\n  Post.associate = models => {\\n    Post.hasMany(models.Comment, { as: 'comments' });\\n    Post.belongsTo(models.User, { as: 'author', foreignKey: 'AuthorId' });\\n  };\\n\\n  return Post;\\n};\\n\"},\"github/ahmerb/typescript-sequelize-example/src/models/User.ts\":{\"type\":\"CODE\",\"contents\":\"import * as Sequelize from 'sequelize';\\nimport { CommentAttributes, CommentInstance } from 'models/Comment';\\nimport { PostAttributes, PostInstance } from 'models/Post';\\nimport { SequelizeAttributes } from 'typings/SequelizeAttributes';\\n\\nexport interface UserAttributes {\\n  id?: number;\\n  name: string;\\n  createdAt?: Date;\\n  updatedAt?: Date;\\n  comments?: CommentAttributes[] | CommentAttributes['id'][];\\n  posts?: PostAttributes[] | PostAttributes['id'][];\\n  upvotedComments?: CommentAttributes[] | CommentAttributes['id'][];\\n};\\n\\nexport interface UserInstance extends Sequelize.Instance<UserAttributes>, UserAttributes {\\n  getComments: Sequelize.HasManyGetAssociationsMixin<CommentInstance>;\\n  setComments: Sequelize.HasManySetAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  addComments: Sequelize.HasManyAddAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  addComment: Sequelize.HasManyAddAssociationMixin<CommentInstance, CommentInstance['id']>;\\n  createComment: Sequelize.HasManyCreateAssociationMixin<CommentAttributes, CommentInstance>;\\n  removeComment: Sequelize.HasManyRemoveAssociationMixin<CommentInstance, CommentInstance['id']>;\\n  removeComments: Sequelize.HasManyRemoveAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  hasComment: Sequelize.HasManyHasAssociationMixin<CommentInstance, CommentInstance['id']>;\\n  hasComments: Sequelize.HasManyHasAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  countComments: Sequelize.HasManyCountAssociationsMixin;\\n\\n  getPosts: Sequelize.HasManyGetAssociationsMixin<PostInstance>;\\n  setPosts: Sequelize.HasManySetAssociationsMixin<PostInstance, PostInstance['id']>;\\n  addPosts: Sequelize.HasManyAddAssociationsMixin<PostInstance, PostInstance['id']>;\\n  addPost: Sequelize.HasManyAddAssociationMixin<PostInstance, PostInstance['id']>;\\n  createPost: Sequelize.HasManyCreateAssociationMixin<PostAttributes, PostInstance>;\\n  removePost: Sequelize.HasManyRemoveAssociationMixin<PostInstance, PostInstance['id']>;\\n  removePosts: Sequelize.HasManyRemoveAssociationsMixin<PostInstance, PostInstance['id']>;\\n  hasPost: Sequelize.HasManyHasAssociationMixin<PostInstance, PostInstance['id']>;\\n  hasPosts: Sequelize.HasManyHasAssociationsMixin<PostInstance, PostInstance['id']>;\\n  countPosts: Sequelize.HasManyCountAssociationsMixin;\\n\\n  getUpvotedComments: Sequelize.BelongsToManyGetAssociationsMixin<CommentInstance>;\\n  setUpvotedComments: Sequelize.BelongsToManySetAssociationsMixin<CommentInstance, CommentInstance['id'], 'PostUpvotes'>;\\n  addUpvotedComments: Sequelize.BelongsToManyAddAssociationsMixin<CommentInstance, CommentInstance['id'], 'PostUpvotes'>;\\n  addUpvotedComment: Sequelize.BelongsToManyAddAssociationMixin<CommentInstance, CommentInstance['id'], 'PostUpvotes'>;\\n  createUpvotedComment: Sequelize.BelongsToManyCreateAssociationMixin<CommentAttributes, CommentInstance['id'], 'PostUpvotes'>;\\n  removeUpvotedComment: Sequelize.BelongsToManyRemoveAssociationMixin<CommentInstance, CommentInstance['id']>;\\n  removeUpvotedComments: Sequelize.BelongsToManyRemoveAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  hasUpvotedComment: Sequelize.BelongsToManyHasAssociationMixin<CommentInstance, CommentInstance['id']>;\\n  hasUpvotedComments: Sequelize.BelongsToManyHasAssociationsMixin<CommentInstance, CommentInstance['id']>;\\n  countUpvotedComments: Sequelize.BelongsToManyCountAssociationsMixin;\\n};\\n\\nexport const UserFactory = (sequelize: Sequelize.Sequelize, DataTypes: Sequelize.DataTypes): Sequelize.Model<UserInstance, UserAttributes> => {\\n  const attributes: SequelizeAttributes<UserAttributes> = {\\n    name: {\\n      type: DataTypes.STRING\\n    }\\n  };\\n\\n  const User = sequelize.define<UserInstance, UserAttributes>('User', attributes);\\n\\n  User.associate = models => {\\n    User.hasMany(models.Comment, { foreignKey: 'AuthorId', as: 'comments' });\\n    User.hasMany(models.Post, { foreignKey: 'AuthorId', as: 'posts' });\\n    User.belongsToMany(models.Comment, {\\n      through: 'PostUpvotes',\\n      as: 'upvotedComments'\\n    });\\n  };\\n\\n  return User;\\n};\\n\"},\"github/ahmerb/typescript-sequelize-example/src/models/index.ts\":{\"type\":\"CODE\",\"contents\":\"import Sequelize from 'sequelize';\\nimport { DbInterface } from'typings/DbInterface';\\nimport { UserFactory } from './User';\\nimport { PostFactory } from './Post';\\nimport { CommentFactory } from './Comment';\\n\\nexport const createModels = (sequelizeConfig: any): DbInterface => {\\n  const { database, username, password, params } = sequelizeConfig;\\n  const sequelize = new Sequelize(database, username, password, params);\\n\\n  const db: DbInterface = {\\n    sequelize,\\n    Sequelize,\\n    Comment: CommentFactory(sequelize, Sequelize),\\n    Post: PostFactory(sequelize, Sequelize),\\n    User: UserFactory(sequelize, Sequelize)\\n  };\\n\\n  Object.keys(db).forEach(modelName => {\\n    if (db[modelName].associate) {\\n      db[modelName].associate(db);\\n    }\\n  });\\n\\n  return db;\\n};\\n\"},\"github/ahmerb/typescript-sequelize-example/src/typings/DbInterface/index.d.ts\":{\"type\":\"CODE\",\"contents\":\"import * as Sequelize from 'sequelize';\\nimport { CommentAttributes, CommentInstance } from 'models/Comment';\\nimport { PostAttributes, PostInstance } from 'models/Post';\\nimport { UserAttributes, UserInstance } from 'models/User';\\n\\nexport interface DbInterface {\\n  sequelize: Sequelize.Sequelize;\\n  Sequelize: Sequelize.SequelizeStatic;\\n  Comment: Sequelize.Model<CommentInstance, CommentAttributes>;\\n  Post: Sequelize.Model<PostInstance, PostAttributes>;\\n  User: Sequelize.Model<UserInstance, UserAttributes>;\\n}\\n\"},\"github/ahmerb/typescript-sequelize-example/src/typings/SequelizeAttributes/index.d.ts\":{\"type\":\"CODE\",\"contents\":\"import { DataTypeAbstract, DefineAttributeColumnOptions } from 'sequelize';\\n\\ntype SequelizeAttribute = string | DataTypeAbstract | DefineAttributeColumnOptions;\\n\\nexport type SequelizeAttributes<T extends { [key: string]: any }> = {\\n  [P in keyof T]: SequelizeAttribute\\n};\\n\"}}"
    }
  ]
}